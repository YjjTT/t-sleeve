封装
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# On branch master
# Your branch is up to date with 'origin/master'.
#
# Changes to be committed:
#	new file:   .idea/inspectionProfiles/Project_Default.xml
#	new file:   .idea/vcs.xml
#	modified:   .idea/workspace.xml
#	modified:   app.json
#	new file:   components/category-grid/index.js
#	new file:   components/category-grid/index.json
#	new file:   components/category-grid/index.wxml
#	new file:   components/category-grid/index.wxss
#	modified:   config/config.js
#	new file:   miniprogram_npm/lin-ui/action-sheet/index.js
#	new file:   miniprogram_npm/lin-ui/action-sheet/index.json
#	new file:   miniprogram_npm/lin-ui/action-sheet/index.wxml
#	new file:   miniprogram_npm/lin-ui/action-sheet/index.wxss
#	new file:   miniprogram_npm/lin-ui/avatar/index.js
#	new file:   miniprogram_npm/lin-ui/avatar/index.json
#	new file:   miniprogram_npm/lin-ui/avatar/index.wxml
#	new file:   miniprogram_npm/lin-ui/avatar/index.wxss
#	new file:   miniprogram_npm/lin-ui/badge/index.js
#	new file:   miniprogram_npm/lin-ui/badge/index.json
#	new file:   miniprogram_npm/lin-ui/badge/index.wxml
#	new file:   miniprogram_npm/lin-ui/badge/index.wxss
#	new file:   miniprogram_npm/lin-ui/behaviors/computeOffset.js
#	new file:   miniprogram_npm/lin-ui/behaviors/countdown.js
#	new file:   miniprogram_npm/lin-ui/behaviors/hover.js
#	new file:   miniprogram_npm/lin-ui/behaviors/rules.js
#	new file:   miniprogram_npm/lin-ui/behaviors/scrollCenter.js
#	new file:   miniprogram_npm/lin-ui/behaviors/watchShow.js
#	new file:   miniprogram_npm/lin-ui/behaviors/zIndex.js
#	new file:   miniprogram_npm/lin-ui/button/index.js
#	new file:   miniprogram_npm/lin-ui/button/index.json
#	new file:   miniprogram_npm/lin-ui/button/index.wxml
#	new file:   miniprogram_npm/lin-ui/button/index.wxss
#	new file:   miniprogram_npm/lin-ui/card/index.js
#	new file:   miniprogram_npm/lin-ui/card/index.json
#	new file:   miniprogram_npm/lin-ui/card/index.wxml
#	new file:   miniprogram_npm/lin-ui/card/index.wxss
#	new file:   miniprogram_npm/lin-ui/checkbox-group/index.js
#	new file:   miniprogram_npm/lin-ui/checkbox-group/index.json
#	new file:   miniprogram_npm/lin-ui/checkbox-group/index.wxml
#	new file:   miniprogram_npm/lin-ui/checkbox-group/index.wxss
#	new file:   miniprogram_npm/lin-ui/checkbox/index.js
#	new file:   miniprogram_npm/lin-ui/checkbox/index.json
#	new file:   miniprogram_npm/lin-ui/checkbox/index.wxml
#	new file:   miniprogram_npm/lin-ui/checkbox/index.wxss
#	new file:   miniprogram_npm/lin-ui/combined-tabs/index.js
#	new file:   miniprogram_npm/lin-ui/combined-tabs/index.json
#	new file:   miniprogram_npm/lin-ui/combined-tabs/index.wxml
#	new file:   miniprogram_npm/lin-ui/combined-tabs/index.wxss
#	new file:   miniprogram_npm/lin-ui/common/async-validator/index.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/messages.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/rule/enum.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/rule/index.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/rule/pattern.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/rule/range.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/rule/required.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/rule/type.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/rule/whitespace.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/util.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/array.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/boolean.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/date.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/enum.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/float.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/index.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/integer.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/method.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/number.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/object.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/pattern.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/regexp.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/required.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/string.js
#	new file:   miniprogram_npm/lin-ui/common/async-validator/validator/type.js
#	new file:   miniprogram_npm/lin-ui/count-selector/index.js
#	new file:   miniprogram_npm/lin-ui/count-selector/index.json
#	new file:   miniprogram_npm/lin-ui/count-selector/index.wxml
#	new file:   miniprogram_npm/lin-ui/count-selector/index.wxss
#	new file:   miniprogram_npm/lin-ui/countdown/index.js
#	new file:   miniprogram_npm/lin-ui/countdown/index.json
#	new file:   miniprogram_npm/lin-ui/countdown/index.wxml
#	new file:   miniprogram_npm/lin-ui/countdown/index.wxss
#	new file:   miniprogram_npm/lin-ui/counter/index.js
#	new file:   miniprogram_npm/lin-ui/counter/index.json
#	new file:   miniprogram_npm/lin-ui/counter/index.wxml
#	new file:   miniprogram_npm/lin-ui/counter/index.wxss
#	new file:   miniprogram_npm/lin-ui/custom-tab-bar/index.js
#	new file:   miniprogram_npm/lin-ui/custom-tab-bar/index.json
#	new file:   miniprogram_npm/lin-ui/custom-tab-bar/index.wxml
#	new file:   miniprogram_npm/lin-ui/custom-tab-bar/index.wxss
#	new file:   miniprogram_npm/lin-ui/dialog/index.js
#	new file:   miniprogram_npm/lin-ui/dialog/index.json
#	new file:   miniprogram_npm/lin-ui/dialog/index.wxml
#	new file:   miniprogram_npm/lin-ui/dialog/index.wxss
#	new file:   miniprogram_npm/lin-ui/error-tip/index.js
#	new file:   miniprogram_npm/lin-ui/error-tip/index.json
#	new file:   miniprogram_npm/lin-ui/error-tip/index.wxml
#	new file:   miniprogram_npm/lin-ui/error-tip/index.wxss
#	new file:   miniprogram_npm/lin-ui/filter/array.wxs
#	new file:   miniprogram_npm/lin-ui/filter/classnames.wxs
#	new file:   miniprogram_npm/lin-ui/filter/is.wxs
#	new file:   miniprogram_npm/lin-ui/filter/object.wxs
#	new file:   miniprogram_npm/lin-ui/filter/string.wxs
#	new file:   miniprogram_npm/lin-ui/filter/zero-padding.wxs
#	new file:   miniprogram_npm/lin-ui/grid-item/index.js
#	new file:   miniprogram_npm/lin-ui/grid-item/index.json
#	new file:   miniprogram_npm/lin-ui/grid-item/index.wxml
#	new file:   miniprogram_npm/lin-ui/grid-item/index.wxss
#	new file:   miniprogram_npm/lin-ui/grid/index.js
#	new file:   miniprogram_npm/lin-ui/grid/index.json
#	new file:   miniprogram_npm/lin-ui/grid/index.wxml
#	new file:   miniprogram_npm/lin-ui/grid/index.wxss
#	new file:   miniprogram_npm/lin-ui/icon/index.js
#	new file:   miniprogram_npm/lin-ui/icon/index.json
#	new file:   miniprogram_npm/lin-ui/icon/index.wxml
#	new file:   miniprogram_npm/lin-ui/icon/index.wxss
#	new file:   miniprogram_npm/lin-ui/image-picker/image/add.png
#	new file:   miniprogram_npm/lin-ui/image-picker/index.js
#	new file:   miniprogram_npm/lin-ui/image-picker/index.json
#	new file:   miniprogram_npm/lin-ui/image-picker/index.wxml
#	new file:   miniprogram_npm/lin-ui/image-picker/index.wxss
#	new file:   miniprogram_npm/lin-ui/input/index.js
#	new file:   miniprogram_npm/lin-ui/input/index.json
#	new file:   miniprogram_npm/lin-ui/input/index.wxml
#	new file:   miniprogram_npm/lin-ui/input/index.wxss
#	new file:   miniprogram_npm/lin-ui/list/index.js
#	new file:   miniprogram_npm/lin-ui/list/index.json
#	new file:   miniprogram_npm/lin-ui/list/index.wxml
#	new file:   miniprogram_npm/lin-ui/list/index.wxss
#	new file:   miniprogram_npm/lin-ui/loading/index.js
#	new file:   miniprogram_npm/lin-ui/loading/index.json
#	new file:   miniprogram_npm/lin-ui/loading/index.wxml
#	new file:   miniprogram_npm/lin-ui/loading/index.wxss
#	new file:   miniprogram_npm/lin-ui/loadmore/index.js
#	new file:   miniprogram_npm/lin-ui/loadmore/index.json
#	new file:   miniprogram_npm/lin-ui/loadmore/index.wxml
#	new file:   miniprogram_npm/lin-ui/loadmore/index.wxss
#	new file:   miniprogram_npm/lin-ui/mask/index.js
#	new file:   miniprogram_npm/lin-ui/mask/index.json
#	new file:   miniprogram_npm/lin-ui/mask/index.wxml
#	new file:   miniprogram_npm/lin-ui/mask/index.wxss
#	new file:   miniprogram_npm/lin-ui/message/index.js
#	new file:   miniprogram_npm/lin-ui/message/index.json
#	new file:   miniprogram_npm/lin-ui/message/index.wxml
#	new file:   miniprogram_npm/lin-ui/message/index.wxss
#	new file:   miniprogram_npm/lin-ui/notice-bar/index.js
#	new file:   miniprogram_npm/lin-ui/notice-bar/index.json
#	new file:   miniprogram_npm/lin-ui/notice-bar/index.wxml
#	new file:   miniprogram_npm/lin-ui/notice-bar/index.wxss
#	new file:   miniprogram_npm/lin-ui/popup/index.js
#	new file:   miniprogram_npm/lin-ui/popup/index.json
#	new file:   miniprogram_npm/lin-ui/popup/index.wxml
#	new file:   miniprogram_npm/lin-ui/popup/index.wxss
#	new file:   miniprogram_npm/lin-ui/price/index.js
#	new file:   miniprogram_npm/lin-ui/price/index.json
#	new file:   miniprogram_npm/lin-ui/price/index.wxml
#	new file:   miniprogram_npm/lin-ui/price/index.wxss
#	new file:   miniprogram_npm/lin-ui/radio-group/index.js
#	new file:   miniprogram_npm/lin-ui/radio-group/index.json
#	new file:   miniprogram_npm/lin-ui/radio-group/index.wxml
#	new file:   miniprogram_npm/lin-ui/radio-group/index.wxss
#	new file:   miniprogram_npm/lin-ui/radio/index.js
#	new file:   miniprogram_npm/lin-ui/radio/index.json
#	new file:   miniprogram_npm/lin-ui/radio/index.wxml
#	new file:   miniprogram_npm/lin-ui/radio/index.wxss
#	new file:   miniprogram_npm/lin-ui/rate/index.js
#	new file:   miniprogram_npm/lin-ui/rate/index.json
#	new file:   miniprogram_npm/lin-ui/rate/index.wxml
#	new file:   miniprogram_npm/lin-ui/rate/index.wxss
#	new file:   miniprogram_npm/lin-ui/search-bar/index.js
#	new file:   miniprogram_npm/lin-ui/search-bar/index.json
#	new file:   miniprogram_npm/lin-ui/search-bar/index.wxml
#	new file:   miniprogram_npm/lin-ui/search-bar/index.wxss
#	new file:   miniprogram_npm/lin-ui/segment-item/index.js
#	new file:   miniprogram_npm/lin-ui/segment-item/index.json
#	new file:   miniprogram_npm/lin-ui/segment-item/index.wxml
#	new file:   miniprogram_npm/lin-ui/segment-item/index.wxss
#	new file:   miniprogram_npm/lin-ui/segment/index.js
#	new file:   miniprogram_npm/lin-ui/segment/index.json
#	new file:   miniprogram_npm/lin-ui/segment/index.wxml
#	new file:   miniprogram_npm/lin-ui/segment/index.wxss
#	new file:   miniprogram_npm/lin-ui/slide-view/index.js
#	new file:   miniprogram_npm/lin-ui/slide-view/index.json
#	new file:   miniprogram_npm/lin-ui/slide-view/index.wxml
#	new file:   miniprogram_npm/lin-ui/slide-view/index.wxss
#	new file:   miniprogram_npm/lin-ui/spin/index.js
#	new file:   miniprogram_npm/lin-ui/spin/index.json
#	new file:   miniprogram_npm/lin-ui/spin/index.wxml
#	new file:   miniprogram_npm/lin-ui/spin/index.wxss
#	new file:   miniprogram_npm/lin-ui/status-show/image/address.png
#	new file:   miniprogram_npm/lin-ui/status-show/image/cart.png
#	new file:   miniprogram_npm/lin-ui/status-show/image/data.png
#	new file:   miniprogram_npm/lin-ui/status-show/image/error.png
#	new file:   miniprogram_npm/lin-ui/status-show/image/network.png
#	new file:   miniprogram_npm/lin-ui/status-show/image/order.png
#	new file:   miniprogram_npm/lin-ui/status-show/image/product.png
#	new file:   miniprogram_npm/lin-ui/status-show/image/success.png
#	new file:   miniprogram_npm/lin-ui/status-show/index.js
#	new file:   miniprogram_npm/lin-ui/status-show/index.json
#	new file:   miniprogram_npm/lin-ui/status-show/index.wxml
#	new file:   miniprogram_npm/lin-ui/status-show/index.wxss
#	new file:   miniprogram_npm/lin-ui/step/index.js
#	new file:   miniprogram_npm/lin-ui/step/index.json
#	new file:   miniprogram_npm/lin-ui/step/index.wxml
#	new file:   miniprogram_npm/lin-ui/step/index.wxss
#	new file:   miniprogram_npm/lin-ui/steps/index.js
#	new file:   miniprogram_npm/lin-ui/steps/index.json
#	new file:   miniprogram_npm/lin-ui/steps/index.wxml
#	new file:   miniprogram_npm/lin-ui/steps/index.wxss
#	new file:   miniprogram_npm/lin-ui/tabpanel/index.js
#	new file:   miniprogram_npm/lin-ui/tabpanel/index.json
#	new file:   miniprogram_npm/lin-ui/tabpanel/index.wxml
#	new file:   miniprogram_npm/lin-ui/tabpanel/index.wxss
#	new file:   miniprogram_npm/lin-ui/tabs/index.js
#	new file:   miniprogram_npm/lin-ui/tabs/index.json
#	new file:   miniprogram_npm/lin-ui/tabs/index.wxml
#	new file:   miniprogram_npm/lin-ui/tabs/index.wxss
#	new file:   miniprogram_npm/lin-ui/tag/index.js
#	new file:   miniprogram_npm/lin-ui/tag/index.json
#	new file:   miniprogram_npm/lin-ui/tag/index.wxml
#	new file:   miniprogram_npm/lin-ui/tag/index.wxss
#	new file:   miniprogram_npm/lin-ui/textarea/index.js
#	new file:   miniprogram_npm/lin-ui/textarea/index.json
#	new file:   miniprogram_npm/lin-ui/textarea/index.wxml
#	new file:   miniprogram_npm/lin-ui/textarea/index.wxss
#	new file:   miniprogram_npm/lin-ui/toast/index.js
#	new file:   miniprogram_npm/lin-ui/toast/index.json
#	new file:   miniprogram_npm/lin-ui/toast/index.wxml
#	new file:   miniprogram_npm/lin-ui/toast/index.wxss
#	new file:   miniprogram_npm/lin-ui/utils/util.js
#	new file:   miniprogram_npm/lin-ui/water-flow/index.js
#	new file:   miniprogram_npm/lin-ui/water-flow/index.json
#	new file:   miniprogram_npm/lin-ui/water-flow/index.wxml
#	new file:   miniprogram_npm/lin-ui/water-flow/index.wxss
#	new file:   model/banner.js
#	new file:   model/theme.js
#	new file:   node_modules/lin-ui/LICENSE
#	new file:   node_modules/lin-ui/README.md
#	new file:   node_modules/lin-ui/dist/action-sheet/index.js
#	new file:   node_modules/lin-ui/dist/action-sheet/index.json
#	new file:   node_modules/lin-ui/dist/action-sheet/index.wxml
#	new file:   node_modules/lin-ui/dist/action-sheet/index.wxss
#	new file:   node_modules/lin-ui/dist/avatar/index.js
#	new file:   node_modules/lin-ui/dist/avatar/index.json
#	new file:   node_modules/lin-ui/dist/avatar/index.wxml
#	new file:   node_modules/lin-ui/dist/avatar/index.wxss
#	new file:   node_modules/lin-ui/dist/badge/index.js
#	new file:   node_modules/lin-ui/dist/badge/index.json
#	new file:   node_modules/lin-ui/dist/badge/index.wxml
#	new file:   node_modules/lin-ui/dist/badge/index.wxss
#	new file:   node_modules/lin-ui/dist/behaviors/computeOffset.js
#	new file:   node_modules/lin-ui/dist/behaviors/countdown.js
#	new file:   node_modules/lin-ui/dist/behaviors/hover.js
#	new file:   node_modules/lin-ui/dist/behaviors/rules.js
#	new file:   node_modules/lin-ui/dist/behaviors/scrollCenter.js
#	new file:   node_modules/lin-ui/dist/behaviors/watchShow.js
#	new file:   node_modules/lin-ui/dist/behaviors/zIndex.js
#	new file:   node_modules/lin-ui/dist/button/index.js
#	new file:   node_modules/lin-ui/dist/button/index.json
#	new file:   node_modules/lin-ui/dist/button/index.wxml
#	new file:   node_modules/lin-ui/dist/button/index.wxss
#	new file:   node_modules/lin-ui/dist/card/index.js
#	new file:   node_modules/lin-ui/dist/card/index.json
#	new file:   node_modules/lin-ui/dist/card/index.wxml
#	new file:   node_modules/lin-ui/dist/card/index.wxss
#	new file:   node_modules/lin-ui/dist/checkbox-group/index.js
#	new file:   node_modules/lin-ui/dist/checkbox-group/index.json
#	new file:   node_modules/lin-ui/dist/checkbox-group/index.wxml
#	new file:   node_modules/lin-ui/dist/checkbox-group/index.wxss
#	new file:   node_modules/lin-ui/dist/checkbox/index.js
#	new file:   node_modules/lin-ui/dist/checkbox/index.json
#	new file:   node_modules/lin-ui/dist/checkbox/index.wxml
#	new file:   node_modules/lin-ui/dist/checkbox/index.wxss
#	new file:   node_modules/lin-ui/dist/combined-tabs/index.js
#	new file:   node_modules/lin-ui/dist/combined-tabs/index.json
#	new file:   node_modules/lin-ui/dist/combined-tabs/index.wxml
#	new file:   node_modules/lin-ui/dist/combined-tabs/index.wxss
#	new file:   node_modules/lin-ui/dist/common/async-validator/index.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/messages.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/rule/enum.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/rule/index.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/rule/pattern.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/rule/range.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/rule/required.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/rule/type.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/rule/whitespace.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/util.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/array.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/boolean.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/date.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/enum.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/float.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/index.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/integer.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/method.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/number.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/object.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/pattern.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/regexp.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/required.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/string.js
#	new file:   node_modules/lin-ui/dist/common/async-validator/validator/type.js
#	new file:   node_modules/lin-ui/dist/count-selector/index.js
#	new file:   node_modules/lin-ui/dist/count-selector/index.json
#	new file:   node_modules/lin-ui/dist/count-selector/index.wxml
#	new file:   node_modules/lin-ui/dist/count-selector/index.wxss
#	new file:   node_modules/lin-ui/dist/countdown/index.js
#	new file:   node_modules/lin-ui/dist/countdown/index.json
#	new file:   node_modules/lin-ui/dist/countdown/index.wxml
#	new file:   node_modules/lin-ui/dist/countdown/index.wxss
#	new file:   node_modules/lin-ui/dist/counter/index.js
#	new file:   node_modules/lin-ui/dist/counter/index.json
#	new file:   node_modules/lin-ui/dist/counter/index.wxml
#	new file:   node_modules/lin-ui/dist/counter/index.wxss
#	new file:   node_modules/lin-ui/dist/custom-tab-bar/index.js
#	new file:   node_modules/lin-ui/dist/custom-tab-bar/index.json
#	new file:   node_modules/lin-ui/dist/custom-tab-bar/index.wxml
#	new file:   node_modules/lin-ui/dist/custom-tab-bar/index.wxss
#	new file:   node_modules/lin-ui/dist/dialog/index.js
#	new file:   node_modules/lin-ui/dist/dialog/index.json
#	new file:   node_modules/lin-ui/dist/dialog/index.wxml
#	new file:   node_modules/lin-ui/dist/dialog/index.wxss
#	new file:   node_modules/lin-ui/dist/error-tip/index.js
#	new file:   node_modules/lin-ui/dist/error-tip/index.json
#	new file:   node_modules/lin-ui/dist/error-tip/index.wxml
#	new file:   node_modules/lin-ui/dist/error-tip/index.wxss
#	new file:   node_modules/lin-ui/dist/filter/array.wxs
#	new file:   node_modules/lin-ui/dist/filter/classnames.wxs
#	new file:   node_modules/lin-ui/dist/filter/is.wxs
#	new file:   node_modules/lin-ui/dist/filter/object.wxs
#	new file:   node_modules/lin-ui/dist/filter/string.wxs
#	new file:   node_modules/lin-ui/dist/filter/zero-padding.wxs
#	new file:   node_modules/lin-ui/dist/grid-item/index.js
#	new file:   node_modules/lin-ui/dist/grid-item/index.json
#	new file:   node_modules/lin-ui/dist/grid-item/index.wxml
#	new file:   node_modules/lin-ui/dist/grid-item/index.wxss
#	new file:   node_modules/lin-ui/dist/grid/index.js
#	new file:   node_modules/lin-ui/dist/grid/index.json
#	new file:   node_modules/lin-ui/dist/grid/index.wxml
#	new file:   node_modules/lin-ui/dist/grid/index.wxss
#	new file:   node_modules/lin-ui/dist/icon/index.js
#	new file:   node_modules/lin-ui/dist/icon/index.json
#	new file:   node_modules/lin-ui/dist/icon/index.wxml
#	new file:   node_modules/lin-ui/dist/icon/index.wxss
#	new file:   node_modules/lin-ui/dist/image-picker/image/add.png
#	new file:   node_modules/lin-ui/dist/image-picker/index.js
#	new file:   node_modules/lin-ui/dist/image-picker/index.json
#	new file:   node_modules/lin-ui/dist/image-picker/index.wxml
#	new file:   node_modules/lin-ui/dist/image-picker/index.wxss
#	new file:   node_modules/lin-ui/dist/input/index.js
#	new file:   node_modules/lin-ui/dist/input/index.json
#	new file:   node_modules/lin-ui/dist/input/index.wxml
#	new file:   node_modules/lin-ui/dist/input/index.wxss
#	new file:   node_modules/lin-ui/dist/list/index.js
#	new file:   node_modules/lin-ui/dist/list/index.json
#	new file:   node_modules/lin-ui/dist/list/index.wxml
#	new file:   node_modules/lin-ui/dist/list/index.wxss
#	new file:   node_modules/lin-ui/dist/loading/index.js
#	new file:   node_modules/lin-ui/dist/loading/index.json
#	new file:   node_modules/lin-ui/dist/loading/index.wxml
#	new file:   node_modules/lin-ui/dist/loading/index.wxss
#	new file:   node_modules/lin-ui/dist/loadmore/index.js
#	new file:   node_modules/lin-ui/dist/loadmore/index.json
#	new file:   node_modules/lin-ui/dist/loadmore/index.wxml
#	new file:   node_modules/lin-ui/dist/loadmore/index.wxss
#	new file:   node_modules/lin-ui/dist/mask/index.js
#	new file:   node_modules/lin-ui/dist/mask/index.json
#	new file:   node_modules/lin-ui/dist/mask/index.wxml
#	new file:   node_modules/lin-ui/dist/mask/index.wxss
#	new file:   node_modules/lin-ui/dist/message/index.js
#	new file:   node_modules/lin-ui/dist/message/index.json
#	new file:   node_modules/lin-ui/dist/message/index.wxml
#	new file:   node_modules/lin-ui/dist/message/index.wxss
#	new file:   node_modules/lin-ui/dist/notice-bar/index.js
#	new file:   node_modules/lin-ui/dist/notice-bar/index.json
#	new file:   node_modules/lin-ui/dist/notice-bar/index.wxml
#	new file:   node_modules/lin-ui/dist/notice-bar/index.wxss
#	new file:   node_modules/lin-ui/dist/popup/index.js
#	new file:   node_modules/lin-ui/dist/popup/index.json
#	new file:   node_modules/lin-ui/dist/popup/index.wxml
#	new file:   node_modules/lin-ui/dist/popup/index.wxss
#	new file:   node_modules/lin-ui/dist/price/index.js
#	new file:   node_modules/lin-ui/dist/price/index.json
#	new file:   node_modules/lin-ui/dist/price/index.wxml
#	new file:   node_modules/lin-ui/dist/price/index.wxss
#	new file:   node_modules/lin-ui/dist/radio-group/index.js
#	new file:   node_modules/lin-ui/dist/radio-group/index.json
#	new file:   node_modules/lin-ui/dist/radio-group/index.wxml
#	new file:   node_modules/lin-ui/dist/radio-group/index.wxss
#	new file:   node_modules/lin-ui/dist/radio/index.js
#	new file:   node_modules/lin-ui/dist/radio/index.json
#	new file:   node_modules/lin-ui/dist/radio/index.wxml
#	new file:   node_modules/lin-ui/dist/radio/index.wxss
#	new file:   node_modules/lin-ui/dist/rate/index.js
#	new file:   node_modules/lin-ui/dist/rate/index.json
#	new file:   node_modules/lin-ui/dist/rate/index.wxml
#	new file:   node_modules/lin-ui/dist/rate/index.wxss
#	new file:   node_modules/lin-ui/dist/search-bar/index.js
#	new file:   node_modules/lin-ui/dist/search-bar/index.json
#	new file:   node_modules/lin-ui/dist/search-bar/index.wxml
#	new file:   node_modules/lin-ui/dist/search-bar/index.wxss
#	new file:   node_modules/lin-ui/dist/segment-item/index.js
#	new file:   node_modules/lin-ui/dist/segment-item/index.json
#	new file:   node_modules/lin-ui/dist/segment-item/index.wxml
#	new file:   node_modules/lin-ui/dist/segment-item/index.wxss
#	new file:   node_modules/lin-ui/dist/segment/index.js
#	new file:   node_modules/lin-ui/dist/segment/index.json
#	new file:   node_modules/lin-ui/dist/segment/index.wxml
#	new file:   node_modules/lin-ui/dist/segment/index.wxss
#	new file:   node_modules/lin-ui/dist/slide-view/index.js
#	new file:   node_modules/lin-ui/dist/slide-view/index.json
#	new file:   node_modules/lin-ui/dist/slide-view/index.wxml
#	new file:   node_modules/lin-ui/dist/slide-view/index.wxss
#	new file:   node_modules/lin-ui/dist/spin/index.js
#	new file:   node_modules/lin-ui/dist/spin/index.json
#	new file:   node_modules/lin-ui/dist/spin/index.wxml
#	new file:   node_modules/lin-ui/dist/spin/index.wxss
#	new file:   node_modules/lin-ui/dist/status-show/image/address.png
#	new file:   node_modules/lin-ui/dist/status-show/image/cart.png
#	new file:   node_modules/lin-ui/dist/status-show/image/data.png
#	new file:   node_modules/lin-ui/dist/status-show/image/error.png
#	new file:   node_modules/lin-ui/dist/status-show/image/network.png
#	new file:   node_modules/lin-ui/dist/status-show/image/order.png
#	new file:   node_modules/lin-ui/dist/status-show/image/product.png
#	new file:   node_modules/lin-ui/dist/status-show/image/success.png
#	new file:   node_modules/lin-ui/dist/status-show/index.js
#	new file:   node_modules/lin-ui/dist/status-show/index.json
#	new file:   node_modules/lin-ui/dist/status-show/index.wxml
#	new file:   node_modules/lin-ui/dist/status-show/index.wxss
#	new file:   node_modules/lin-ui/dist/step/index.js
#	new file:   node_modules/lin-ui/dist/step/index.json
#	new file:   node_modules/lin-ui/dist/step/index.wxml
#	new file:   node_modules/lin-ui/dist/step/index.wxss
#	new file:   node_modules/lin-ui/dist/steps/index.js
#	new file:   node_modules/lin-ui/dist/steps/index.json
#	new file:   node_modules/lin-ui/dist/steps/index.wxml
#	new file:   node_modules/lin-ui/dist/steps/index.wxss
#	new file:   node_modules/lin-ui/dist/tabpanel/index.js
#	new file:   node_modules/lin-ui/dist/tabpanel/index.json
#	new file:   node_modules/lin-ui/dist/tabpanel/index.wxml
#	new file:   node_modules/lin-ui/dist/tabpanel/index.wxss
#	new file:   node_modules/lin-ui/dist/tabs/index.js
#	new file:   node_modules/lin-ui/dist/tabs/index.json
#	new file:   node_modules/lin-ui/dist/tabs/index.wxml
#	new file:   node_modules/lin-ui/dist/tabs/index.wxss
#	new file:   node_modules/lin-ui/dist/tag/index.js
#	new file:   node_modules/lin-ui/dist/tag/index.json
#	new file:   node_modules/lin-ui/dist/tag/index.wxml
#	new file:   node_modules/lin-ui/dist/tag/index.wxss
#	new file:   node_modules/lin-ui/dist/textarea/index.js
#	new file:   node_modules/lin-ui/dist/textarea/index.json
#	new file:   node_modules/lin-ui/dist/textarea/index.wxml
#	new file:   node_modules/lin-ui/dist/textarea/index.wxss
#	new file:   node_modules/lin-ui/dist/toast/index.js
#	new file:   node_modules/lin-ui/dist/toast/index.json
#	new file:   node_modules/lin-ui/dist/toast/index.wxml
#	new file:   node_modules/lin-ui/dist/toast/index.wxss
#	new file:   node_modules/lin-ui/dist/utils/util.js
#	new file:   node_modules/lin-ui/dist/water-flow/index.js
#	new file:   node_modules/lin-ui/dist/water-flow/index.json
#	new file:   node_modules/lin-ui/dist/water-flow/index.wxml
#	new file:   node_modules/lin-ui/dist/water-flow/index.wxss
#	new file:   node_modules/lin-ui/package.json
#	new file:   package-lock.json
#	new file:   package.json
#	modified:   pages/home/home.js
#	modified:   pages/home/home.wxml
#	modified:   pages/home/home.wxss
#	new file:   utils/http.js
#	modified:   utils/util.js
#
# ------------------------ >8 ------------------------
# Do not modify or remove the line above.
# Everything below it will be ignored.
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 0000000..e3b31a6
--- /dev/null
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,21 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="CheckTagEmptyBody" enabled="false" level="WARNING" enabled_by_default="false" />
+    <inspection_tool class="CssInvalidPropertyValue" enabled="false" level="ERROR" enabled_by_default="false" />
+    <inspection_tool class="CssInvalidPseudoSelector" enabled="false" level="ERROR" enabled_by_default="false" />
+    <inspection_tool class="HtmlUnknownAttribute" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="myValues">
+        <value>
+          <list size="1">
+            <item index="0" class="java.lang.String" itemvalue="src" />
+          </list>
+        </value>
+      </option>
+      <option name="myCustomValuesEnabled" value="true" />
+    </inspection_tool>
+    <inspection_tool class="UnterminatedStatementJS" enabled="false" level="WARNING" enabled_by_default="false">
+      <option name="ignoreSemicolonAtEndOfBlock" value="true" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..94a25f7
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
index aaa49e3..0f604ae 100644
--- a/.idea/workspace.xml
+++ b/.idea/workspace.xml
@@ -1,13 +1,37 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="6f3c442f-7b57-4087-a80d-6aa48bcfbc11" name="Default Changelist" comment="" />
+    <list default="true" id="6f3c442f-7b57-4087-a80d-6aa48bcfbc11" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/model/banner.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/model/theme.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/utils/http.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app.json" beforeDir="false" afterPath="$PROJECT_DIR$/app.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/config/config.js" beforeDir="false" afterPath="$PROJECT_DIR$/config/config.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pages/home/home.js" beforeDir="false" afterPath="$PROJECT_DIR$/pages/home/home.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pages/home/home.wxml" beforeDir="false" afterPath="$PROJECT_DIR$/pages/home/home.wxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pages/home/home.wxss" beforeDir="false" afterPath="$PROJECT_DIR$/pages/home/home.wxss" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/utils/util.js" beforeDir="false" afterPath="$PROJECT_DIR$/utils/util.js" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="JavaScript File" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
   <component name="ProjectId" id="1W9OlDReAURSbWXrwarf1QfdrpH" />
+  <component name="ProjectReloadState">
+    <option name="STATE" value="1" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showExcludedFiles" value="true" />
@@ -17,6 +41,8 @@
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="nodejs_package_manager_path" value="npm" />
+    <property name="settings.editor.selected.configurable" value="preferences.fileTypes" />
   </component>
   <component name="ServiceViewManager">
     <option name="viewStates">
@@ -41,10 +67,42 @@
       <option name="presentableId" value="Default" />
       <updated>1578558493732</updated>
       <workItem from="1578558498417" duration="627000" />
+      <workItem from="1578887896445" duration="28000" />
+      <workItem from="1578887959792" duration="26000" />
+      <workItem from="1578888013584" duration="20000" />
+      <workItem from="1578892189221" duration="7000" />
+      <workItem from="1578892198057" duration="5000" />
+      <workItem from="1578892204158" duration="8487000" />
     </task>
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="1" />
   </component>
+  <component name="WindowStateProjectService">
+    <state width="1478" height="278" key="GridCell.Tab.0.bottom" timestamp="1578900466457">
+      <screen x="-65" y="-1057" width="1920" height="1057" />
+    </state>
+    <state width="1478" height="278" key="GridCell.Tab.0.bottom/45.23.1635.1027/-65.-1057.1920.1057@-65.-1057.1920.1057" timestamp="1578900466457" />
+    <state width="1478" height="278" key="GridCell.Tab.0.center" timestamp="1578900466456">
+      <screen x="-65" y="-1057" width="1920" height="1057" />
+    </state>
+    <state width="1478" height="278" key="GridCell.Tab.0.center/45.23.1635.1027/-65.-1057.1920.1057@-65.-1057.1920.1057" timestamp="1578900466456" />
+    <state width="1478" height="278" key="GridCell.Tab.0.left" timestamp="1578900466455">
+      <screen x="-65" y="-1057" width="1920" height="1057" />
+    </state>
+    <state width="1478" height="278" key="GridCell.Tab.0.left/45.23.1635.1027/-65.-1057.1920.1057@-65.-1057.1920.1057" timestamp="1578900466455" />
+    <state width="1478" height="278" key="GridCell.Tab.0.right" timestamp="1578900466456">
+      <screen x="-65" y="-1057" width="1920" height="1057" />
+    </state>
+    <state width="1478" height="278" key="GridCell.Tab.0.right/45.23.1635.1027/-65.-1057.1920.1057@-65.-1057.1920.1057" timestamp="1578900466456" />
+    <state x="448" y="-890" key="SettingsEditor" timestamp="1578892294439">
+      <screen x="-65" y="-1057" width="1920" height="1057" />
+    </state>
+    <state x="448" y="-890" key="SettingsEditor/45.23.1635.1027/-65.-1057.1920.1057@-65.-1057.1920.1057" timestamp="1578892294439" />
+    <state x="604" y="-806" width="670" height="676" key="search.everywhere.popup" timestamp="1578898868243">
+      <screen x="-65" y="-1057" width="1920" height="1057" />
+    </state>
+    <state x="604" y="-806" width="670" height="676" key="search.everywhere.popup/45.23.1635.1027/-65.-1057.1920.1057@-65.-1057.1920.1057" timestamp="1578898868243" />
+  </component>
 </project>
\ No newline at end of file
diff --git a/app.json b/app.json
index d0a8672..574f22d 100644
--- a/app.json
+++ b/app.json
@@ -1,6 +1,7 @@
 {
   "pages": [
-    "pages/home/home"
+    "pages/home/home",
+    "components/category-grid/index"
   ],
   "window": {
     "backgroundTextStyle": "light",
@@ -9,5 +10,9 @@
     "navigationBarTextStyle": "black"
   },
   "style": "v2",
-  "sitemapLocation": "sitemap.json"
+  "sitemapLocation": "sitemap.json",
+  "usingComponents": {
+    "l-grid": "/miniprogram_npm/lin-ui/grid/index",
+    "l-grid-item": "/miniprogram_npm/lin-ui/grid-item/index"
+  }
 }
\ No newline at end of file
diff --git a/components/category-grid/index.js b/components/category-grid/index.js
new file mode 100644
index 0000000..07b6f0e
--- /dev/null
+++ b/components/category-grid/index.js
@@ -0,0 +1,23 @@
+// components/category-grid/index.js
+Component({
+  /**
+   * 组件的属性列表
+   */
+  properties: {
+
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+
+  }
+})
diff --git a/components/category-grid/index.json b/components/category-grid/index.json
new file mode 100644
index 0000000..4a42478
--- /dev/null
+++ b/components/category-grid/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+
+  }
+}
\ No newline at end of file
diff --git a/components/category-grid/index.wxml b/components/category-grid/index.wxml
new file mode 100644
index 0000000..bce41d2
--- /dev/null
+++ b/components/category-grid/index.wxml
@@ -0,0 +1,12 @@
+<view class="container">
+    <l-grid>
+        <block wx:for="{{}}">
+            <l-grid-item>
+                <view>
+                    <image src=""></image>
+                    <text></text>
+                </view>
+            </l-grid-item>
+        </block>
+    </l-grid>
+</view>
\ No newline at end of file
diff --git a/components/category-grid/index.wxss b/components/category-grid/index.wxss
new file mode 100644
index 0000000..21935d5
--- /dev/null
+++ b/components/category-grid/index.wxss
@@ -0,0 +1 @@
+/* components/category-grid/index.wxss */
\ No newline at end of file
diff --git a/config/config.js b/config/config.js
index 3c8d500..069d4a4 100644
--- a/config/config.js
+++ b/config/config.js
@@ -1,6 +1,7 @@
 const config = {
     appKey: 'zPl8STkRSUnGs1ZsColorful3',
-    apiBaseUrl: 'http://se.7yue.pro/v1'
+    apiBaseUrl: 'https://api.sleeve.7yue.pro/v1',
+    clientkey: 'I2Pu5Um6kvDtpb6u'
 }
 
 export { config }
diff --git a/miniprogram_npm/lin-ui/action-sheet/index.js b/miniprogram_npm/lin-ui/action-sheet/index.js
new file mode 100644
index 0000000..7691909
--- /dev/null
+++ b/miniprogram_npm/lin-ui/action-sheet/index.js
@@ -0,0 +1,124 @@
+import zIndex from '../behaviors/zIndex';
+import hover from '../behaviors/hover';
+
+Component({
+  behaviors: [zIndex,hover],
+  externalClasses: ['l-class-title', 'l-class-item', 'l-class-cancel','l-title-class','l-item-class','l-cancel-class'],
+  properties: {
+    locked: Boolean,
+    showCancel: Boolean,
+    show: Boolean,
+    itemList: Array,
+    cancelText: {
+      type: String,
+      value: '取消'
+    },
+    title: String,
+    zIndex:{
+      type:Number,
+      value: 777
+    },
+    openApi: {
+      type: Boolean,
+      value: true,
+    }
+  },
+  data: {
+    success: '',
+    fail: '',
+    isIphoneX: false
+  },
+  attached() {
+    if (this.data.openApi) {
+      this.initActionSheet();
+    }
+    this.initUIAdapter();
+  },
+
+  pageLifetimes: {
+    show() {
+      if (this.data.openApi) {
+        this.initActionSheet();
+      }
+
+    },
+  },
+  methods: {
+    /**
+   * 区分UI尺寸
+   */
+    initUIAdapter() {
+      wx.getSystemInfo({
+        success: (res) => {
+          this.setData({
+            isIphoneX: res.model == 'iPhone X' ? true : false,
+          });
+        }
+      });
+    },
+    initActionSheet() {
+      wx.lin = wx.lin || {};
+      wx.lin.showActionSheet = (options={}) => {
+        const {
+          itemList = [],
+          success = null,
+          fail = null,
+          title = '',
+          locked = false,
+          cancelText = '取消',
+          showCancel = false,
+        } = options;
+        this.setData({
+          itemList: itemList.slice(0, 10),
+          success,
+          fail,
+          title,
+          locked,
+          cancelText,
+          showCancel,
+          show: true,
+        });
+        return this;
+      };
+    },
+    handleClickItem(e) {
+      const {
+        success
+      } = this.data;
+      success && success({ ...e.currentTarget.dataset });
+      this.triggerEvent('linitemtap', { ...e.currentTarget.dataset },{ bubbles: true, composed: true });
+      this._hideActionSheet();
+    },
+
+    _showActionSheet() {
+      this.setData({
+        show: true
+      });
+    },
+
+    _hideActionSheet() {
+      this.setData({
+        show: false
+      });
+    },
+
+    handleClickCancel() {
+      const {
+        fail
+      } = this.data;
+      fail && fail({
+        errMsg: 'showactionsheet:fail cancel'
+      });
+      this.triggerEvent('lincancel', {
+        errMsg: 'showactionsheet:fail cancel'
+      },{ bubbles: true, composed: true });
+      this._hideActionSheet();
+    },
+
+    handleClickPopUp() {
+      if (!this.data.locked) {
+        this.handleClickCancel();
+      }
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/action-sheet/index.json b/miniprogram_npm/lin-ui/action-sheet/index.json
new file mode 100644
index 0000000..248ca90
--- /dev/null
+++ b/miniprogram_npm/lin-ui/action-sheet/index.json
@@ -0,0 +1,8 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-icon":"../icon/index",
+        "l-popup":"../popup/index",
+        "l-button":"../button/index"
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/action-sheet/index.wxml b/miniprogram_npm/lin-ui/action-sheet/index.wxml
new file mode 100644
index 0000000..5bad4e1
--- /dev/null
+++ b/miniprogram_npm/lin-ui/action-sheet/index.wxml
@@ -0,0 +1,26 @@
+<l-popup show="{{show}}" showMask="{{true}}" contentAlign="bottom" locked="{{locked}}" bind:lintap="handleClickPopUp" z-index="{{zIndex}}">
+    <view class='l-action-sheet'>
+        <view  class="l-item-button l-class-title l-title-class" wx:if="{{title}}">
+            {{ title }}
+        </view>
+        <view wx:for="{{ itemList }}" wx:key="{{ item.name }}" hover-class="{{isHover?'list-hover':''}}">
+            <l-button bind:lintap="handleClickItem" data-index="{{ index }}" data-item="{{ item }}" open-type="{{ item.openType }}" icon="{{ item.icon }}" type="ghost" size="large" special="{{true}}" long>
+                <view style="{{ item.color ? 'color: ' + item.color : '' }}" class="l-item-button l-class-item l-item-class {{item.image || item.icon ? 'l-image-button':''}}">
+                    <image wx:if="{{item.image}}" class="l-button-image" src="{{item.image}}" style="{{item.imageStyle}}"/>
+                    <l-icon 
+                        wx:elif="{{ item.icon }}" 
+                        name="{{ item.icon }}" 
+                        l-class="l-item-button"
+                        size="{{ item.iconSize }}"
+                        color="{{item.iconColor?item.iconColor:item.color}}"></l-icon>  
+                    <text class="l-button-text">{{ item.name }}</text>
+                </view>
+            </l-button>
+        </view>
+        <view class="l-cancel l-class-cancel l-cancel-class {{isIphoneX ? 'l-cancel-x':''}}" wx:if="{{ showCancel }}" hover-class="{{isHover?'list-hover':''}}">
+            <l-button type="ghost" size="large" long="true" bind:lintap="handleClickCancel" special="{{true}}">
+                <view class="l-item-button l-cancel-button">{{ cancelText }}</view>
+            </l-button>
+        </view>
+    </view>
+</l-popup>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/action-sheet/index.wxss b/miniprogram_npm/lin-ui/action-sheet/index.wxss
new file mode 100644
index 0000000..fc97542
--- /dev/null
+++ b/miniprogram_npm/lin-ui/action-sheet/index.wxss
@@ -0,0 +1 @@
+.l-action-sheet{background:#f7f7f7}.l-item-button{height:88rpx;line-height:88rpx;text-align:center;background:#fff;border-bottom:2rpx solid #f3f3f3;font-size:28rpx;color:#45526b;display:flex;align-items:center;justify-content:center;width:100%}.l-cancel{margin-top:12rpx}.l-cancel-x .l-item-button{padding-bottom:44rpx}.l-image-button>text{margin-left:20rpx}.list-hover{opacity:.8}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/avatar/index.js b/miniprogram_npm/lin-ui/avatar/index.js
new file mode 100644
index 0000000..cec5f2a
--- /dev/null
+++ b/miniprogram_npm/lin-ui/avatar/index.js
@@ -0,0 +1,70 @@
+Component({
+  externalClasses: [
+    'l-class',
+    'l-class-text',
+    'l-text-class'
+  ],
+  properties: {
+    icon: String,
+    iconColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    text: String,
+    src: String,
+    openData: {
+      type: Array,
+      observer: '_initOpenData'
+    },
+    shape: {
+      type: String,
+      value: 'circle'
+    },
+    mode: {
+      type: String,
+      value: 'scaleToFill'
+    },
+    size: {
+      type: Number,
+      value: 120,
+    },
+    placement: {
+      type: String,
+      value: 'right'
+    },
+  },
+  data: {
+    _isHaveUserNickName: false,
+    _isHaveUserAvatarUrl: false,
+    _iconSize: '',
+    _iconColor: '#ffffff'
+  },
+  methods: {
+    _initOpenData: function (openData) {
+      this._isHaveUserAvatarUrl(openData);
+      this._isHaveUserNickName(openData);
+    },
+
+    _isHaveUserAvatarUrl: function (openData) {
+      this.setData({
+        _isHaveUserAvatarUrl: openData.indexOf('userAvatarUrl') !== -1
+      });
+    },
+
+    _isHaveUserNickName: function (openData) {
+      this.setData({
+        _isHaveUserNickName: openData.indexOf('userNickName') !== -1
+      });
+    },
+    tapAvatar: function (e) {
+      this.triggerEvent('lintap', e, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/avatar/index.json b/miniprogram_npm/lin-ui/avatar/index.json
new file mode 100644
index 0000000..dd10af0
--- /dev/null
+++ b/miniprogram_npm/lin-ui/avatar/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-icon":"../icon/index"
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/avatar/index.wxml b/miniprogram_npm/lin-ui/avatar/index.wxml
new file mode 100644
index 0000000..6703bd1
--- /dev/null
+++ b/miniprogram_npm/lin-ui/avatar/index.wxml
@@ -0,0 +1,12 @@
+
+<view class="l-avatar {{text||_isHaveUserNickName?'l-placement-'+placement:''}}" bindtap="tapAvatar">
+    <view class="l-avatar-image {{shape?'l-'+shape:''}} l-class" wx:if="{{_isHaveUserAvatarUrl||icon||src}}" style="width:{{size}}rpx;height:{{size}}rpx">
+        <open-data wx:if="{{_isHaveUserAvatarUrl}}" type="userAvatarUrl" />
+        <l-icon wx:elif="{{icon}}" size="{{iconSize || size*0.6}}" color="{{iconColor||'#ffffff'}}" name="{{icon}}" />
+        <image wx:elif="{{src}}" src="{{src}}" mode="{{mode}}" style="width:{{size}}rpx;height:{{size}}rpx" />
+    </view>
+    <view class="l-avatar-text l-class-text l-text-class" wx:if="{{text||_isHaveUserNickName}}">
+        <open-data wx:if="{{_isHaveUserNickName}}" type="userNickName" />
+        <text wx:elif="{{text}}">{{text}}</text>
+    </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/avatar/index.wxss b/miniprogram_npm/lin-ui/avatar/index.wxss
new file mode 100644
index 0000000..4efad93
--- /dev/null
+++ b/miniprogram_npm/lin-ui/avatar/index.wxss
@@ -0,0 +1 @@
+.l-avatar{display:inline-flex;justify-content:center;align-items:center}.l-avatar-image{flex:1;display:inline-flex;justify-content:center;align-items:center;background:#ccc;overflow:hidden}.l-avatar-text{display:inline-block;height:max-content;width:max-content;font-size:28rpx;color:#45526b;line-height:40px}open-data{width:100%;height:100%}.l-avatar-text open-data,.l-avatar-text text{font-size:inherit;color:inherit;line-height:inherit}.l-square{border-radius:8rpx}.l-circle{border-radius:50%}.l-placement-left,.l-placement-right{align-items:center;justify-content:center}.l-placement-left{margin-right:24rpx;flex-direction:row-reverse}.l-placement-left .l-avatar-text{margin-right:24rpx}.l-placement-right{flex-direction:row}.l-placement-right .l-avatar-text{margin-left:24rpx}.l-placement-top{flex-direction:column-reverse}.l-placement-top .l-avatar-text{margin-bottom:12rpx}.l-placement-bottom{flex-direction:column}.l-placement-bottom .l-avatar-text{margin-top:12rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/badge/index.js b/miniprogram_npm/lin-ui/badge/index.js
new file mode 100644
index 0000000..0f0a1eb
--- /dev/null
+++ b/miniprogram_npm/lin-ui/badge/index.js
@@ -0,0 +1,87 @@
+Component({
+  externalClasses: ['l-class', 'l-class-self', 'l-self-class'],
+  properties: {
+    // 红点模式
+    dot: {
+      type: Boolean,
+      value: false
+    },
+    shape: {
+      type: String,
+      value: 'horn'
+    },
+    value: {
+      type: String,
+      value: '0'
+    },
+    mode: {
+      type: String,
+      value: 'number'
+    },
+    // 数字最大值
+    maxCount: {
+      type: Number,
+      value: 99
+    },
+    // 数字形式
+    numberType: {
+      type: String,
+      value: 'overflow'
+    },
+    show: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    finalCount: 0
+  },
+  observers: {
+    'value': function () {
+      this.finalCount();
+    }
+  },
+  methods: {
+    // 最终数字
+    finalCount() {
+      if (isNaN(Number(this.data.value)) || (this.data.mode === 'text')) {
+        this.setData({
+          finalCount: this.data.value
+        });
+      } else {
+        this.switchType();
+      }
+    },
+    switchType() {
+      switch (this.data.numberType) {
+      case 'overflow':
+        this.setData({
+          finalCount: Number(this.data.value) > Number(this.data.maxCount) ? `${this.data.maxCount}+` : this.data.value
+        });
+        break;
+      case 'ellipsis':
+        this.setData({
+          finalCount: Number(this.data.value) > Number(this.data.maxCount) ? `...` : this.data.value
+        });
+        break;
+      case 'limit':
+        this.setData({
+          finalCount: Number(this.data.value) > 999 ? `${ Number.isInteger(this.data.value / 1000)? (this.data.value/1000) : (this.data.value/1000).toFixed(1) }k` : this.data.value
+        });
+        break;
+      default:
+        this.setData({
+          finalCount: Number(this.data.value)
+        });
+        break;
+      }
+    },
+    // 点击事件
+    handleTap() {
+      this.triggerEvent('lintap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/badge/index.json b/miniprogram_npm/lin-ui/badge/index.json
new file mode 100644
index 0000000..e56592f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/badge/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+ 
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/badge/index.wxml b/miniprogram_npm/lin-ui/badge/index.wxml
new file mode 100644
index 0000000..2854d24
--- /dev/null
+++ b/miniprogram_npm/lin-ui/badge/index.wxml
@@ -0,0 +1,7 @@
+<view class="l-badge" bindtap="handleTap">
+  <slot/>
+  <block wx:if="{{show}}">
+    <view wx:if="{{dot}}" class="l-badge-dot  l-class l-class-self l-self-class"></view>
+    <view wx:else class="{{'l-badge-content-'+shape}} l-badge-content l-class l-class-self l-self-class">{{finalCount}}</view>
+  </block>
+</view> 
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/badge/index.wxss b/miniprogram_npm/lin-ui/badge/index.wxss
new file mode 100644
index 0000000..5d1021d
--- /dev/null
+++ b/miniprogram_npm/lin-ui/badge/index.wxss
@@ -0,0 +1 @@
+.l-badge{position:relative;display:inline-block;line-height:1;vertical-align:middle}.l-badge-content{max-width:650rpx;left:70%;background-color:#ff474b;color:#fff;position:absolute;font-size:20rpx;display:inline-block;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align:center;box-sizing:border-box;z-index:10;letter-spacing:.5rpx}.l-badge-content-horn{height:28rpx;min-width:54rpx;padding:0 8rpx;border-radius:14rpx 14rpx 14rpx 0rpx;line-height:28rpx;top:-10rpx}.l-badge-content-circle{height:32rpx;min-width:32rpx;padding:0 10rpx;border-radius:16rpx;line-height:32rpx;top:-10rpx}.l-badge-dot{height:16rpx;width:16rpx;transform:translateX(50%);border-radius:50%;background-color:#ff474b;position:absolute;top:-4rpx;right:0rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/behaviors/computeOffset.js b/miniprogram_npm/lin-ui/behaviors/computeOffset.js
new file mode 100644
index 0000000..381f723
--- /dev/null
+++ b/miniprogram_npm/lin-ui/behaviors/computeOffset.js
@@ -0,0 +1,19 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {},
+  data: {
+    distance: 0
+  },
+  attached(){
+    this.offsetMargin();
+  },
+  methods: {
+    offsetMargin() {
+      const { windowHeight, screenHeight } = wx.getSystemInfoSync();
+      this.setData({
+        distance: (screenHeight-windowHeight )
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/behaviors/countdown.js b/miniprogram_npm/lin-ui/behaviors/countdown.js
new file mode 100644
index 0000000..5056f59
--- /dev/null
+++ b/miniprogram_npm/lin-ui/behaviors/countdown.js
@@ -0,0 +1,222 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    time: {
+      type: Date,
+      value: new Date().getTime() + 86400000,
+      observer: function (newVal, oldVal) {
+        if (newVal && !oldVal) {
+          this.getLatestTime();
+        }
+      }
+    },
+    status: {
+      type: Boolean,
+      value: true,
+      observer: function (newVal) {
+        if (newVal) {
+          this.init();
+        } else if (!newVal) {
+          clearInterval(this.data.timer);
+        }
+      }
+    },
+    timeType: {
+      type: String,
+      value: 'datetime'
+    },
+    format: {
+      type: String,
+      value: '{%d}天{%h}时{%m}分{%s}秒'
+    },
+    isZeroPadd: {
+      type: Boolean,
+      value: true,
+    },
+    countdownType: {
+      type: String,
+      value: 'normal'
+    },
+    isClearInterval: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    initAddTime: 0,
+    timer: null,
+    date: [],
+  },
+  ready: function () {
+    this.getLatestTime();
+  },
+
+  detached: function () {
+    if (this.data.isClearInterval) {
+      clearInterval(this.data.timer);
+    }
+  },
+
+  pageLifetimes: {
+    hide() {
+      if (this.data.isClearInterval) {
+        clearInterval(this.data.timer);
+      }
+
+    },
+    show() {
+      if (this.data.isClearInterval) {
+        this.getLatestTime();
+      }
+    }
+  },
+
+  methods: {
+    // 自动补零
+    zeroPadding(num) {
+      num = num.toString();
+      return num[1] ? num : '0' + num;
+    },
+
+    init() {
+      clearInterval(this.data.timer);
+      const timer = setTimeout(() => {
+        this.getLatestTime.call(this);
+      }, 1000);
+      this.setData({
+        timer
+      });
+    },
+
+    getLatestTime() {
+      let {
+        time,
+        status,
+        timeType,
+        initAddTime,
+        countdownType,
+      } = this.data;
+      // IOS不支持2019-04-23 的日期格式
+      let countDownTime = time;
+      if (countdownType === 'normal') {  //当countdownType === normal时，不影响之前的代码
+        if (timeType !== 'second') {
+          countDownTime = typeof time === 'string' ? countDownTime.replace(/-/g, '/') : countDownTime;
+          countDownTime = Math.ceil((new Date(countDownTime).getTime() - new Date().getTime()) / 1000);
+        }
+
+        if (countDownTime < 0 && timeType !== 'second') {
+          this._getTimeValue(0);
+          this.CountdownEnd();
+          return;
+        }
+
+        if (countDownTime - initAddTime > 0) {
+          this.getLatestForCountDown(countDownTime);
+        } else if (countDownTime - initAddTime < 0) {
+          this.getLatestForAddTime(countDownTime);
+        } else if (countDownTime - initAddTime === 0) {
+          if (initAddTime <= 0) {
+            this._getTimeValue(countDownTime);
+          }
+          this.CountdownEnd();
+        }
+
+        if (status && countDownTime - initAddTime !== 0) {
+          this.init.call(this);
+        }
+
+      } else if (countdownType === 'anniversary') { //  当countdownType === anniversary时，为纪念日模式
+        if (timeType === 'second') {    //  纪念日模式不能设置timeType === second
+          console.error(`countdownType为${countdownType}类型时，不可设置timeType值为second`);
+        } else {
+          countDownTime = typeof time === 'string' ? countDownTime.replace(/-/g, '/') : countDownTime;
+          countDownTime = Math.ceil((new Date().getTime() - new Date(countDownTime).getTime()) / 1000);
+          if (countDownTime >= 0) {   //  countDownTime计算结果不能为负数
+            this.getLatestForCountDown(countDownTime);
+            this.init.call(this);
+          } else {
+            console.error('time传值错误');
+          }
+        }
+      } else { //  countdownType 不能设置为 normal，anniversary 以外的值
+        console.error('错误的countdownType类型');
+      }
+    },
+
+    getLatestForAddTime(countDownTime) {
+      let {
+        initAddTime
+      } = this.data;
+      if (initAddTime !== Math.abs(countDownTime)) {
+        initAddTime++;
+        this._getTimeValue(initAddTime);
+        this.setData({
+          initAddTime
+        });
+      }
+    },
+
+    getLatestForCountDown(countDownTime) {
+      this._getTimeValue(countDownTime);
+      this.setData({
+        time: this.data.timeType === 'second' ? --countDownTime : this.data.time,
+      });
+    },
+
+    _getTimeValue(countDownTime) {
+      const {
+        format
+      } = this.data;
+      const date = [];
+      const fomatArray = format.split(/(\{.*?\})/);
+      const formatType = [{
+        key: '{%d}',
+        type: 'day',
+        count: 86400
+      }, {
+        key: '{%h}',
+        type: 'hour',
+        count: 3600
+      }, {
+        key: '{%m}',
+        type: 'minute',
+        count: 60
+      }, {
+        key: '{%s}',
+        type: 'second',
+        count: 1,
+      }];
+      let diffSecond = countDownTime;
+      formatType.forEach(format => {
+        const index = this._findTimeName(fomatArray, format.key);
+        if (index === -1) return;
+        const name = fomatArray[index];
+        const formatItem = {
+          type: format.type,
+          name,
+          value: parseInt(diffSecond / format.count)
+        };
+        if (this.data.isZeroPadd) {
+          formatItem.value = this.zeroPadding(formatItem.value);
+        }
+        diffSecond %= format.count;
+        date.push(formatItem);
+      });
+      this.setData({
+        date
+      });
+      return date;
+    },
+
+    _findTimeName(fomatArray, str) {
+      const index = fomatArray.indexOf(str);
+      if (index === -1) return -1;
+      return index + 1;
+    },
+
+    CountdownEnd() {
+      this.triggerEvent('linend', {});
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/behaviors/hover.js b/miniprogram_npm/lin-ui/behaviors/hover.js
new file mode 100644
index 0000000..1cd5d97
--- /dev/null
+++ b/miniprogram_npm/lin-ui/behaviors/hover.js
@@ -0,0 +1,10 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    isHover:{
+      type: Boolean,
+      value: true
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/behaviors/rules.js b/miniprogram_npm/lin-ui/behaviors/rules.js
new file mode 100644
index 0000000..ef79bc4
--- /dev/null
+++ b/miniprogram_npm/lin-ui/behaviors/rules.js
@@ -0,0 +1,99 @@
+import Schema from '../common/async-validator/index';
+/**
+ * @param tipType String [toast , message , text]
+ */
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    // 校验
+    rules: {
+      type: Object,
+    },
+    tipType: {
+      type: String,
+      value: ''
+    }
+  },
+  data: {
+    schema: '',
+    tipFun: {
+      'message': 'showMessage',
+      'toast': 'showToast',
+    },
+    tipContent: {
+      'message': 'content',
+      'toast': 'title',
+    },
+    errorText: '',
+  },
+
+  methods: {
+    initRules() {
+      const rulesName = this.data.name;
+      const {
+        rules
+      } = this.data;
+      if (!rules) return;
+      const schema = new Schema({
+        [rulesName]: this.data.rules,
+      });
+      this.setData({
+        schema,
+      });
+    },
+    validatorData({
+      value
+    }) {
+      const {
+        rules,
+        tipType,
+        tipFun,
+        tipContent
+      } = this.data;
+
+      if (!rules) return;
+      const validateValue = {
+        [this.data.name]: value
+      };
+      this.data.schema.validate(validateValue, (errors) => {
+
+        this.triggerEvent('linvalidate', {
+          errors,
+          isError: !!errors
+        });
+
+        if (errors && tipType) {
+          const funName = tipFun[tipType];
+          const contentName = tipContent[tipType];
+          if (tipType === 'text') {
+            this.setData({
+              errorText: errors[0].message
+            });
+            return;
+          }
+
+          if (!wx.lin || !wx.lin[funName]) {
+            wx.showToast({
+              icon: 'none',
+              title: `请在页面内引入${tipType}组件`
+            });
+            return;
+          }
+
+          wx.lin[funName] && wx.lin[funName]({
+            [contentName]: errors[0].message,
+            duration: 1500,
+            mask: false,
+          });
+        } else if (!errors && tipType) {
+          this.setData({
+            errorText: ''
+          });
+        }
+
+      });
+
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/behaviors/scrollCenter.js b/miniprogram_npm/lin-ui/behaviors/scrollCenter.js
new file mode 100644
index 0000000..5d54661
--- /dev/null
+++ b/miniprogram_npm/lin-ui/behaviors/scrollCenter.js
@@ -0,0 +1,54 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  methods: {
+    getRect(selector, all = false) {
+      return new Promise((resolve, reject) => {
+        const query = wx.createSelectorQuery().in(this);
+        const type = all ? query.selectAll(selector) : query.select(selector);
+        type.boundingClientRect((res) => {
+          if (!res) return reject('找不到元素');
+          resolve(res);
+        }).exec();
+      });
+    },
+    queryScrollNode(res, currentIndex, type = 'width') {
+      const currentRect = res[currentIndex];
+
+      this.getRect('.l-tabsscroll').then(_ => {
+        const scrollWidth = _[type];
+
+        let transformDistance = res
+          .slice(0, currentIndex)
+          .reduce((prev, curr) => prev + curr[type], 0);
+
+        transformDistance += (currentRect[type] - scrollWidth) / 2;
+
+        if (type === 'width') {
+          this.setData({
+            transformX: transformDistance,
+            transformY: 0
+          });
+        } else {
+          this.setData({
+            transformX: 0,
+            transformY: transformDistance
+          });
+        }
+      });
+    },
+    queryMultipleNodes() {
+      const {
+        placement,
+        currentIndex
+      } = this.data;
+      this.getRect('.l-tabs-item', true)
+        .then((res) => {
+          if (['top', 'bottom'].indexOf(placement) !== -1) {
+            this.queryScrollNode(res, currentIndex);
+          } else {
+            this.queryScrollNode(res, currentIndex, 'height');
+          }
+        });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/behaviors/watchShow.js b/miniprogram_npm/lin-ui/behaviors/watchShow.js
new file mode 100644
index 0000000..d2569e8
--- /dev/null
+++ b/miniprogram_npm/lin-ui/behaviors/watchShow.js
@@ -0,0 +1,26 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  observers: {
+    'show': function (show) {
+      show && this.changeStatus();
+      if (!show) this.setData({
+        status: show
+      });
+    }
+  },
+  methods: {
+    changeStatus() {
+      this.setData({
+        status: true
+      });
+      if (this.data.timer) clearTimeout(this.data.timer);
+      this.data.timer = setTimeout(() => {
+        this.setData({
+          status: false
+        });
+        if (this.data.success) this.data.success();
+        this.data.timer = null;
+      }, this.properties.duration);
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/behaviors/zIndex.js b/miniprogram_npm/lin-ui/behaviors/zIndex.js
new file mode 100644
index 0000000..3e3d941
--- /dev/null
+++ b/miniprogram_npm/lin-ui/behaviors/zIndex.js
@@ -0,0 +1,10 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    zIndex:{
+      type: Number,
+      value: 777
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/button/index.js b/miniprogram_npm/lin-ui/button/index.js
new file mode 100644
index 0000000..201ca03
--- /dev/null
+++ b/miniprogram_npm/lin-ui/button/index.js
@@ -0,0 +1,78 @@
+Component({
+  externalClasses: ['l-class', 'l-hover-class', 'l-img-class','l-icon-class'],
+  properties: {
+    // button组建标识
+    name: {
+      type: String,
+      value: 'lin'
+    },
+    type: {
+      type: String,
+      value: 'default',
+    },
+    plain: Boolean,
+    size: {
+      type: String,
+      value: 'medium',
+    },
+    shape: {
+      type: String,
+      value: 'circle',
+    },
+    disabled: {
+      type: Boolean,
+      value: false,
+    },
+    special: {
+      type: Boolean,
+      value: false,
+    },
+    loading: {
+      type: Boolean,
+      value: false,
+    },
+    // 微信原生接口
+    width: Number,
+    height: Number,
+    icon: String,
+    image: String,
+    bgColor: String,
+    iconColor: String,
+    iconSize: String,
+    openType: String,
+    appParameter: String,
+    lang: String,
+    hoverStopPropagation: Boolean,
+    hoverStartTime: {
+      type: Number,
+      value: 20
+    },
+    hoverStayTime: {
+      type: Number,
+      value: 70
+    },
+    sessionFrom: {
+      type: String,
+      value: ''
+    },
+    sendMessageTitle: String,
+    sendMessagePath: String,
+    sendMessageImg: String,
+    showMessageCard: Boolean,
+    formType: String
+  },
+  methods: {
+    // button点击事件
+    handleTap() {
+      if (this.data.disabled || this.data.loading) return false;
+      this.triggerEvent('lintap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    // 开放能力事件回调
+    openTypeEvent(data) {
+      this.triggerEvent(data.type, data.detail, {});
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/button/index.json b/miniprogram_npm/lin-ui/button/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/miniprogram_npm/lin-ui/button/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/button/index.wxml b/miniprogram_npm/lin-ui/button/index.wxml
new file mode 100644
index 0000000..f8079c2
--- /dev/null
+++ b/miniprogram_npm/lin-ui/button/index.wxml
@@ -0,0 +1,39 @@
+<label for="{{name}}" bindtap="handleTap">
+  <block wx:if="{{special}}">
+    <view class="special-container l-class">
+      <slot/>
+    </view>
+  </block>
+  <block wx:else>
+    <view class="l-btn {{ 'l-btn-' + size }} {{ 'l-btn-' + type }} {{ 'l-btn-' + shape }} {{plain?'l-btn-plain':''}} {{ disabled ? 'l-btn-disabled' : ''}} l-class " 
+          hover-class="btn-hover l-hover-class"
+          hover-stop-propagation="{{hoverStopPropagation}}"
+          hover-start-time="{{hoverStartTime}}"
+          hover-stay-time="{{hoverStayTime}}"
+          style="{{width?'min-width:'+width+'rpx;':''}} {{height?'height:'+height+'rpx;'+'line-height:'+height+'rpx;':''}} {{size=='long'?'border-radius:0;':''}} {{'background-color:'+bgColor}}">
+      <view wx:if="{{loading}}" class="l-btn-loading {{'margin-' + size}} {{ plain ?'l-btn-loading-' + type : '' }}"></view>
+      <l-icon l-class="l-icon-class" class="{{'margin-' + size}}" wx:if="{{icon}}" name="{{icon}}" color="{{iconColor}}" size="{{iconSize}}" />
+      <slot/>
+    </view>
+  </block>
+</label>
+<button style="position: absolute;top: -999px;left: -999px;"
+        wx:if="{{openType}}"
+        id="{{name}}" 
+        lang="{{lang}}" 
+        form-type="{{formType}}" 
+        open-type="{{openType}}" 
+        app-parameter="{{ appParameter }}" 
+        hover-stop-propagation="{{ hoverStopPropagation }}" 
+        hover-start-time="{{ hoverStartTime }}" 
+        hover-stay-time="{{ hoverStayTime }}"
+        session-from="{{ sessionFrom }}" 
+        send-message-title="{{ sendMessageTitle }}" 
+        send-message-path="{{ sendMessagePath }}" 
+        send-message-img="{{ sendMessageImg }}" 
+        show-message-card="{{ showMessageCard }}" 
+        bindcontact="openTypeEvent" 
+        bindgetuserinfo="openTypeEvent"
+        bindgetphonenumber="openTypeEvent" 
+        bindopensetting="openTypeEvent">
+</button>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/button/index.wxss b/miniprogram_npm/lin-ui/button/index.wxss
new file mode 100644
index 0000000..da04df6
--- /dev/null
+++ b/miniprogram_npm/lin-ui/button/index.wxss
@@ -0,0 +1 @@
+.btn-hover{opacity:.8}.special-container{display:flex}.l-btn{display:inline-flex;align-items:center;justify-content:center;white-space:nowrap;font-size:28rpx;position:relative;color:#fff;padding:0 12rpx;box-sizing:border-box}.l-btn-img-mini{width:30rpx;height:30rpx}.l-btn-img-medium{width:36rpx;height:36rpx}.l-btn-img-large{height:44rpx;width:44rpx}.l-btn-long{border-radius:0;margin:0;height:88rpx;width:100%}.l-btn-medium{height:72rpx;min-width:180rpx}.l-btn-large{height:88rpx;min-width:710rpx}.l-btn-mini{height:60rpx;min-width:140rpx;font-size:24rpx}.l-btn-default{background-color:#3963bc}.l-btn-success{background-color:#34bfa3}.l-btn-warning{background-color:#ffe57f;color:#333}.l-btn-error{background-color:#f4516c}.l-btn-square{border-radius:0}.l-btn-semicircle{border-radius:40rpx}.l-btn-large.l-btn-semicircle{border-radius:48rpx}.l-btn-mini.l-btn-semicircle{border-radius:30rpx}.l-btn-circle{border-radius:8rpx}.l-btn-large.l-btn-circle{border-radius:9.6rpx}.l-btn-mini.l-btn-circle{border-radius:6rpx}.l-btn-plain{background-color:#fff;color:#3963bc;border:2rpx solid #3963bc}.l-btn-success.l-btn-plain{background-color:#fff;color:#34bfa3;border:2rpx solid #34bfa3}.l-btn-error.l-btn-plain{background-color:#fff;color:#f4516c;border:2rpx solid #f4516c}.l-btn-warning.l-btn-plain{background-color:#fff;color:#ffe57f;border:2rpx solid #ffe57f}.l-btn-loading{opacity:.6;display:inline-block;vertical-align:middle;width:24rpx;height:24rpx;background:0 0;border-radius:50%;border:4rpx solid #fff;border-color:#fff #fff #fff transparent;animation:btn-spin .6s linear;animation-iteration-count:infinite}.l-btn-loading-default{border:4rpx solid #3963bc;border-color:#3963bc #3963bc #3963bc transparent}.l-btn-loading-success{border:4rpx solid #34bfa3;border-color:#34bfa3 #34bfa3 #34bfa3 transparent}.l-btn-loading-error{border:4rpx solid #f4516c;border-color:#f4516c #f4516c #f4516c transparent}.l-btn-loading-warning{border:4rpx solid #ffe57f;border-color:#ffe57f #ffe57f #ffe57f transparent}.l-btn-disabled{opacity:.8;background-color:#dee2e6}.icon{display:flex!important}.margin-mini{margin-right:10rpx}.margin-medium{margin-right:18rpx}.margin-large{margin-right:24rpx}@keyframes btn-spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/card/index.js b/miniprogram_npm/lin-ui/card/index.js
new file mode 100644
index 0000000..e09695a
--- /dev/null
+++ b/miniprogram_npm/lin-ui/card/index.js
@@ -0,0 +1,42 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-class', 'l-img-class','l-title-class'],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    image: String,
+    title: String,
+    describe: String,
+    plaintext: Boolean,
+    full: Boolean,
+    position:{
+      type:String,
+      value:'left'
+    },
+    imageMode:{
+      type:String,
+      value: 'aspectFit'
+    },
+    type: {
+      type: String,
+      value: 'primary'
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/card/index.json b/miniprogram_npm/lin-ui/card/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/miniprogram_npm/lin-ui/card/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/card/index.wxml b/miniprogram_npm/lin-ui/card/index.wxml
new file mode 100644
index 0000000..7184b79
--- /dev/null
+++ b/miniprogram_npm/lin-ui/card/index.wxml
@@ -0,0 +1,22 @@
+<view class="l-class card-container {{'card-container-' + type}} {{'card-container-' + type + '-' + position}} {{full?'card-container-full':'card-container-unfull'}}">
+  <block wx:if="{{type ==='primary' || type ==='cover'}}">
+    <image wx:if="{{!plaintext}}" class="l-img-class {{full?'cover-img-full':'cover-img-unfull'}} {{ 'card-img-' + type }} {{ 'card-img-' + type + '-' + position }}" mode="aspectFill" lazy-load="{{true}}" src="{{image}}"></image>
+    <view class="card-content">
+      <text class="l-title-class card-title {{'card-title-' + type}}">{{title}}</text>
+      <slot />
+    </view>
+  </block>
+  <block wx:if="{{type ==='avatar'}}">
+    <view class="card-avatar-top">
+      <view class="card-avatar-left">
+        <image lazy-load mode="{{imageMode}}" class="l-img-class {{ 'card-img-' + type }}" src='{{image}}'></image>
+        <view class="card-avatar">
+          <text class="l-title-class card-title {{'card-title-' + type}}">{{title}}</text>
+          <text class="describe">{{describe}}</text>
+        </view>
+      </view>
+      <slot name="more" />
+    </view>
+    <slot />
+  </block>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/card/index.wxss b/miniprogram_npm/lin-ui/card/index.wxss
new file mode 100644
index 0000000..f4f948a
--- /dev/null
+++ b/miniprogram_npm/lin-ui/card/index.wxss
@@ -0,0 +1 @@
+.card-container{margin:0 auto;padding:30rpx;box-sizing:border-box;background:#fff;display:flex}.card-container-full{width:100%}.card-container-unfull{width:92%;box-shadow:0 4rpx 20rpx 0 rgba(212,217,223,.5);border-radius:4px}.card-container-primary-left{flex-direction:row}.card-container-primary-right{flex-direction:row-reverse}.card-container-avatar{flex-direction:column}.card-container-cover{flex-direction:column}.cover-img-full{width:100%;height:260rpx}.cover-img-unfull{width:100%;height:260rpx}.card-img-primary{height:240rpx;width:240rpx;overflow:hidden}.card-img-primary-left{margin-right:40rpx}.card-img-primary-right{margin-left:40rpx}.card-img-avatar{height:60rpx;width:60rpx;border-radius:50%;margin-right:30rpx}.card-img-avatar{height:60rpx;width:60rpx;border-radius:50%;margin-right:30rpx}.card-content{position:relative;display:flex;flex-direction:column;flex:1}.card-title{overflow:hidden;text-overflow:ellipsis;color:#333}.card-title-primary{font-size:32rpx;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.card-title-avatar{font-size:28rpx}.card-title-cover{font-size:30rpx;margin-top:10rpx}.card-title-avatar{font-size:28rpx}.card-avatar-top{display:flex;flex-direction:row;height:100rpx;align-items:center;justify-content:space-between}.card-avatar-left{display:flex;flex-direction:row;align-items:center}.card-avatar{display:flex;flex-direction:column}.describe{color:#666;font-size:24rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/checkbox-group/index.js b/miniprogram_npm/lin-ui/checkbox-group/index.js
new file mode 100644
index 0000000..179372b
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox-group/index.js
@@ -0,0 +1,106 @@
+Component({
+  behaviors: ['wx://form-field'],
+  externalClasses: ['l-class', 'l-error-text', 'l-error-text-class'],
+  relations: {
+    '../checkbox/index': {
+      type: 'child',
+      linked(target) {
+        this.init(target);
+      },
+      linkChanged() {
+      },
+      unlinked() {
+        // this.init(target);
+      }
+    }
+  },
+  properties: {
+    // 选项的排列方式 一行显示 or 多行显示
+    placement: {
+      type: String,
+      value: 'column', //column row
+    },
+    // 最多选中值
+    maxSelected: {
+      type: [Number,null],
+      value: null
+    },
+    minSelected: {
+      type: [Number,null],
+      value: null
+    }
+  },
+  data: {
+  },
+  attached() {
+    let { minSelected, maxSelected} = this.properties;
+    this.checkMax(minSelected, maxSelected);
+  },
+  methods: {
+
+    init(target) {
+      if(this._keys === undefined) this._keys = {};
+      // if(this._selected === undefined) this._selected = {};
+      // this.checkDefaultItem(target);
+      this.checkedKeyRepeat(target);
+    },
+
+    checkedKeyRepeat(target) {
+      let { key } = target.properties;
+      if(this._keys[key]) {
+        throw new Error(`keys有重复元素, chekbox的key属性不能重复：${key}`);
+      } else {
+        this._keys[key] = true;
+      }
+    },
+
+    checkDefaultItem(target) {
+      const { key, checked } = target.properties;
+      if(checked) {
+        this._selected[key] = checked;
+      }
+    },
+
+    checkMax(min, max) {
+      if(min !== null && min < 0) {
+        throw new Error('最小选择个数必须大于等于0');
+      }
+      if(max !== null && max < 0) {
+        throw new Error('最多选择个数必须大于0');
+      }
+      if(max !== null && min !== null && min >= max) {
+        throw new Error('最多选择个数必须大于最小选择个数');
+      }
+    },
+
+    onEmitEventHandle(currentItem) {
+      // currentItem.checked ? this.addSelect(currentItem.key):this.removeSelect(currentItem.key);
+
+      this.triggerEvent('linchange', currentItem, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    onEmitOverflowHandle(data){
+      this.triggerEvent('linout', data, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    removeSelect(key) {
+      delete this._selected[key];
+    },
+    addSelect(key) {
+      this._selected[key] = key;
+    },
+    _selected(){
+      const items = this.getRelationNodes('../checkbox/index');
+      let num = 0;
+      items.map(item=> {
+        item.properties.checked ? num++ : '';
+      });
+      return num;
+    }
+
+  }
+});
diff --git a/miniprogram_npm/lin-ui/checkbox-group/index.json b/miniprogram_npm/lin-ui/checkbox-group/index.json
new file mode 100644
index 0000000..742ff99
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox-group/index.json
@@ -0,0 +1,7 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-error-tip":"../error-tip/index",
+        "l-checkbox": "../checkbox/index"
+    }
+}
diff --git a/miniprogram_npm/lin-ui/checkbox-group/index.wxml b/miniprogram_npm/lin-ui/checkbox-group/index.wxml
new file mode 100644
index 0000000..f5f9375
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox-group/index.wxml
@@ -0,0 +1,4 @@
+<view class="l-class checkbox-group checkbox-group-{{placement}} ">
+  <slot></slot> 
+</view>
+  <l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
diff --git a/miniprogram_npm/lin-ui/checkbox-group/index.wxss b/miniprogram_npm/lin-ui/checkbox-group/index.wxss
new file mode 100644
index 0000000..1cdd3b8
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox-group/index.wxss
@@ -0,0 +1 @@
+.checkbox-group{flex-wrap:wrap}.checkbox-group-row{display:flex;flex-direction:row}.checkbox-group-column{display:flex;flex-direction:column}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/checkbox/index.js b/miniprogram_npm/lin-ui/checkbox/index.js
new file mode 100644
index 0000000..7dc74b7
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox/index.js
@@ -0,0 +1,110 @@
+Component({
+  behaviors: ['wx://form-field'],
+  externalClasses: ['l-class', 'l-disabled-class'],
+  relations: {
+    '../checkbox-group/index': {
+      type: 'parent'
+    }
+  },
+  options: {
+    multipleSlots: true
+  },
+  properties: {
+    // checkbox 按钮的位置
+    placement: {
+      type: String,
+      value: 'left'
+    },
+    //  是否自定义图标内容
+    custom: {
+      type: Boolean,
+      value: false
+    },
+    key: {
+      type: String,
+      value: ''
+    },
+    cell: {
+      type: Object,
+      value: {}
+    },
+    // checkbox的大小
+    size: {
+      type: String,
+      value: '38rpx'
+    },
+    // 不可选状态
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    //  选中后的颜色
+    selectColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    disabledColor: {
+      type: String,
+      value: '#ccc'
+    },
+    color: {
+      type: String,
+      value: '#ccc'
+    },
+    checked: {
+      type: Boolean,
+      value: false
+    }
+  },
+  data: {
+    parentPlacement: ''
+  },
+  ready() {
+    const parent = this.getRelationNodes('../checkbox-group/index')[0];
+    let {placement:parentPlacement} = parent.properties;
+    this.setData({parentPlacement});
+  },
+  methods: {
+    // 点击checkbox
+    onCheckboxChangeTap() {
+      if (this.properties.disabled || this.data.parentDisabled) {
+        return;
+      }
+
+      const parent = this.getRelationNodes('../checkbox-group/index')[0];
+
+      if(this.properties.checked) {
+        if(this.isOverflow('minSelected')) return;
+      } else {
+        if(this.isOverflow('maxSelected')) return;
+      }
+
+      const item = {
+        checked: !this.properties.checked,
+        key: this.properties.key,
+        cell: this.properties.cell
+      };
+      if (parent) {
+        parent.onEmitEventHandle(item);
+      }
+    },
+
+    /**
+     *
+     * @param {*} type (max/min)
+     */
+    isOverflow(type) {
+      const parent = this.getRelationNodes('../checkbox-group/index')[0];
+
+      const limit = parent.properties[type];
+      if (!limit) return false;
+      const selectedLength = parent._selected();
+      let isOverflow = type === 'minSelected' ? selectedLength <= limit : selectedLength >= limit;
+      if (isOverflow) {
+        let backType = type === 'minSelected' ? 'min_selected' : 'max_selected';
+        parent.onEmitOverflowHandle && parent.onEmitOverflowHandle({key: this.properties.key, limitNumber: limit, type: `overflow_${backType}`});
+      }
+      return isOverflow;
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/checkbox/index.json b/miniprogram_npm/lin-ui/checkbox/index.json
new file mode 100644
index 0000000..f6ca6c1
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-button": "../button/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/checkbox/index.wxml b/miniprogram_npm/lin-ui/checkbox/index.wxml
new file mode 100644
index 0000000..e17d439
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox/index.wxml
@@ -0,0 +1,8 @@
+<view bind:tap="onCheckboxChangeTap" 
+      class="label label-{{placement}} label-placement-{{parentPlacement}} {{disabled ? 'label-disabled l-disabled-class' : 'l-class'}}">
+        <view class="checkbox" style="color:{{checked ? selectColor : (disabled ? disabledColor : color)}};font-size: {{size}}">
+            <slot wx:if="{{custom}}" name="icon"/>
+            <view wx:else class="iconfont {{checked? 'icon-select': 'icon-unselect'}}"></view>
+        </view>
+        <slot />
+</view>
diff --git a/miniprogram_npm/lin-ui/checkbox/index.wxss b/miniprogram_npm/lin-ui/checkbox/index.wxss
new file mode 100644
index 0000000..c36bbfe
--- /dev/null
+++ b/miniprogram_npm/lin-ui/checkbox/index.wxss
@@ -0,0 +1 @@
+.label{display:flex;flex:1;align-items:center;font-size:30rpx;color:#333;width:100%;box-sizing:border-box}.label-left{flex-direction:row}.label-right{flex-direction:row-reverse;justify-content:space-between}.label-disabled{color:#ccc}.label-placement-row{padding-right:30rpx}.checkbox{margin-right:20rpx}.iconfont{font-family:iconfont!important;display:inline-flex;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAMMAAsAAAAABxgAAAK9AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBeIFdATYCJAMMCwgABCAFhG0HQBstBlGUzMkA2c8E020e0uBCKA1ReoTOr2jhX60Fez8evvb7nbu7X40GSTTS8S6aRBOpkCB1plMyIWkJb/+nLTemUXn+tjy1proDbGd+u9OXhuW20ygDQoJwOPhjfw50kxP0dlsW4tKSEtLyKhWqIpT/3MKy5KTZgMvpr8TnWZbTWts2jgmYYEBjDHuKrEQCzjUF2R2BWvJ9Am0LeioHm9MVtBXOskC8RIED7VJMUaRiU6i37C3iHV4zvaZPKG/x5+OfLdoktcxZe/S89mH27bv8VD0phAT5ch5Ih8jYBApx3eq7Uktzm2rahqZu1oO6IqSlklVFLDMN9YP+8RJR55R2wSrNJ775IoLvWEgggzoKDoFYipp4U38JhsVnsZqMDSLDTR9O5v6lxM+emWKnJ0j1WkJfv81PpvtdvqfbrTPuXw1+/Yswbx81bvFu4GNdLq7/WnYQrkR7OT7DTrwSHIOw0QhHGI+BEQb/TCiV/n/7MQFAQ9mO3iwSi9Gz9MCEpIu0tWgZiFkilLN8tRFgA1SnfMgz8o0Kgo9Q+Gcx3f/tTgFfe45JtDoVFO7QvAt/8FflYE8xlY49F13my+xAtjTRk6ASOahCOaGxn+mGGVxKaJrlSBrmkTUtkoWziZqOLdQ1baNtw/Zwx4SoidLCuneCMPSBpO8T2dAXWTjfqJnzi7ph1NB2EdwzO5Yj6oaEHCUf3UeMPM6N59RuUn6m4DZ1pKiMuTckZZTE8WBULW4pJ1liQ3kXTFQNGuEMN+QxSlPGQjgmTwehajEdDk3biwYeZ9C1TxCHIj7keoQiHpYz4XDVrb3/jARupRzS09AQv0FEKRodjQ2MAHKry6GGR2FTuhOYUMpAhmAZtCEekro5hor2WTHiUQPhhExhasgGGVQ32N6Q/UCp1ILzXI4UOYrOQ0he4vKDxXk7twIAAAAA') format('woff2')}.icon-unselect:before{content:"\e727"}.icon-select:before{content:"\e725"}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/combined-tabs/index.js b/miniprogram_npm/lin-ui/combined-tabs/index.js
new file mode 100644
index 0000000..1740bc2
--- /dev/null
+++ b/miniprogram_npm/lin-ui/combined-tabs/index.js
@@ -0,0 +1,267 @@
+// components/tabs/index.js
+Component({
+  externalClasses: ['l-class-header', 'l-class-active', 'l-class-inactive', 'l-class-line', 'l-class-tabimage',
+    'l-header-class', 'l-active-class', 'l-inactive-class', 'l-line-class', 'l-tabimage-class'
+  ],
+  relations: {
+    '../tabpanel/index': {
+      type: 'child',
+    },
+    linked() {
+      // 每次有子节点被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+      this.initTabs();
+    },
+    unlinked() {
+      this.initTabs();
+    }
+  },
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  /**
+   * 组件的属性列表
+   */
+  properties: {
+    activeKey: {
+      type: String,
+      value: '',
+      observer: 'changeCurrent'
+    },
+    placement: {
+      type: String,
+      value: 'top',
+    },
+    aminmated: Boolean,
+    scrollable: Boolean,
+    swipeable: {
+      type: Boolean,
+      value: true,
+    },
+    hasLine: {
+      type: Boolean,
+      value: true
+    },
+    activeColor: {
+      type: String,
+      value: '#333333'
+    },
+    inactiveColor: {
+      type: String,
+      value: '#bbbbbb'
+    },
+
+  },
+
+  data: {
+    tabList: [],
+    currentIndex: 0,
+    transformX: 0,
+    transformY: 0,
+  },
+
+  ready() {
+    this.initTabs();
+
+  },
+
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initTabs() {
+      this.initTabList();
+      this.initActiveIndex();
+    },
+    initActiveIndex(val = this.data.activeKey) {
+      let activeKey = val,
+        currentIndex = this.data.currentIndex;
+      this.data.tabList.forEach((item, index) => {
+        activeKey = !val && index == 0 ? item.key : activeKey;
+        currentIndex = item.key === activeKey ? index : currentIndex;
+      });
+      this.setData({
+        activeKey,
+        currentIndex,
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+    },
+
+    initTabList() {
+      let items = this.getRelationNodes('../tabpanel/index');
+      if (items.length > 0) {
+        const tabList = [];
+        items.forEach((item) => {
+          const tabIndex = tabList.findIndex(tabItem => tabItem.tab === item.data.tab);
+          let tab = {};
+          if (tabIndex === -1) {
+            tab = {
+              tab: item.data.tab,
+              key: item.data.key,
+              icon: item.data.icon,
+              iconStyle: item.data.iconStyle,
+              image: item.data.image,
+              subTabs: [],
+            };
+            tabList.push(tab);
+          }
+          const targetTab = tabIndex === -1 ? tab : tabList[tabIndex];
+          if (item.data.subTab) {
+            targetTab.subTabs = targetTab.subTabs || [];
+            const subTabItem = {
+              tab: item.data.subTab,
+              key: item.data.subKey,
+            };
+            targetTab.subTabs.push(subTabItem);
+            targetTab.activeSubKey = this.data.subActiveKey || targetTab.subTabs[0].key;
+            targetTab.subCurrentIndex = 0;
+          }
+        });
+        this.setData({
+          tabList,
+        });
+      }
+    },
+    swiperChange(e) {
+      const {
+        source,
+        current
+      } = e.detail;
+      if (source == 'touch') {
+        const currentIndex = current;
+        const activeKey = this.data.tabList[current].key;
+        const subCurrentIndex = this.data.tabList[currentIndex].subCurrentIndex;
+        const activeSubKey = this.data.tabList[currentIndex].activeSubKey;
+        this._setChangeData({
+          activeKey,
+          currentIndex,
+          subCurrentIndex,
+          activeSubKey,
+        });
+      }
+    },
+    subSwiperChange(e) {
+      const {
+        source,
+        current
+      } = e.detail;
+      if (source == 'touch') {
+        const {
+          currentIndex,
+          activeKey
+        } = this.data;
+        const subCurrentIndex = current;
+        const activeSubKey = this.data.tabList[currentIndex].subTabs[subCurrentIndex].key;
+        const tabs = this.data.tabList[currentIndex];
+        tabs.activeSubKey = activeSubKey;
+        tabs.subCurrentIndex = subCurrentIndex;
+
+        this.setData({
+          [`tabList[${currentIndex}]`]: tabs
+        });
+
+        this._setChangeData({
+          activeKey,
+          currentIndex,
+          activeSubKey,
+          subCurrentIndex
+        });
+      }
+    },
+    handleChange(e) {
+      const isSubHeader = e.currentTarget.dataset.headerType === 'subTab';
+      const {
+        currentIndex,
+        activeKey
+      } = this.data;
+
+      const clickIndex = e.currentTarget.dataset.index;
+      const subCurrentIndex = isSubHeader ? clickIndex : this.data.tabList[clickIndex].subCurrentIndex;
+      const activeSubKey = isSubHeader ? this.data.tabList[currentIndex].subTabs[subCurrentIndex].key : this.data.tabList[clickIndex].activeSubKey;
+      if (isSubHeader) {
+        const tabs = this.data.tabList[currentIndex];
+        tabs.activeSubKey = activeSubKey;
+        tabs.subCurrentIndex = subCurrentIndex;
+        this.setData({
+          [`tabList[${currentIndex}]`]: tabs
+        });
+        this._setChangeData({
+          activeKey,
+          currentIndex,
+          activeSubKey,
+          subCurrentIndex
+        });
+
+      } else {
+        const activeKey = e.currentTarget.dataset.key;
+        this._setChangeData({
+          activeKey,
+          currentIndex: clickIndex,
+          subCurrentIndex,
+          activeSubKey
+        });
+      }
+    },
+
+    _setChangeData({
+      activeKey,
+      currentIndex,
+      activeSubKey = '',
+      subCurrentIndex = null,
+    }) {
+      this.setData({
+        activeKey,
+        currentIndex
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+      this.triggerEvent('linchange', {
+        activeKey,
+        currentIndex,
+        activeSubKey,
+        subCurrentIndex,
+      });
+    },
+
+    queryMultipleNodes() {
+      const {
+        placement,
+        activeKey,
+        tabList
+      } = this.data;
+      this._getRect('#' + activeKey)
+        .then((res) => {
+          if (['top', 'bottom'].indexOf(placement) !== -1) {
+            this.setData({
+              transformX: res.left - tabList.length / 2 * res.width,
+              transformY: 0
+            });
+          } else {
+            this._getRect('.l-tabs-header')
+              .then((navRect) => {
+                const transformY = res.top - navRect.top - navRect.height / 2;
+                this.setData({
+                  transformX: 0,
+                  transformY: transformY
+                });
+              });
+          }
+        });
+    },
+
+    _getRect(selector) {
+      return new Promise((resolve, reject) => {
+        const query = wx.createSelectorQuery().in(this);
+        query.select(selector).boundingClientRect((res) => {
+          if (!res) return reject('找不到元素');
+          resolve(res);
+        }).exec();
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/combined-tabs/index.json b/miniprogram_npm/lin-ui/combined-tabs/index.json
new file mode 100644
index 0000000..398bd03
--- /dev/null
+++ b/miniprogram_npm/lin-ui/combined-tabs/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index",
+    "l-badge":"../badge/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/combined-tabs/index.wxml b/miniprogram_npm/lin-ui/combined-tabs/index.wxml
new file mode 100644
index 0000000..05ce293
--- /dev/null
+++ b/miniprogram_npm/lin-ui/combined-tabs/index.wxml
@@ -0,0 +1,44 @@
+<!-- components/tabs/index.wxml -->
+<view class="l-tabs l-placement-top l-tabs-horizontal {{aminmated ? 'l-aminmated' :''}} {{scrollable ? 'l-tabs-scroll':''}}">
+    <template is="tab-header" data="{{tab:tabList,placemanet,scrollable,transformY,transformX,activeKey,hasLine,activeColor,inactiveColor,headerType:'tab'}}"></template>
+    <view class="l-tabs l-sub-placement-left l-tabs-vertical {{aminmated ? 'l-aminmated' :''}}  {{scrollable ? 'l-tabs-scroll':''}}">
+        <template is="tab-header" wx:if="{{tabList[currentIndex].subTabs.length}}" data="{{tab:tabList[currentIndex].subTabs,placemanet,scrollable,transformY,transformX,activeKey:tabList[currentIndex].activeSubKey,hasLine,activeColor,inactiveColor,headerType:'subTab'}}"></template>
+        <view class="l-tabs-main">
+            <view wx:if="{{!swipeable}}" class="l-tabpanel-content">
+                <view class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':'l-tabpanel-inactive'}}" wx:for="{{tabList}}" wx:key="{{item.key}}" style="{{placement=='left'||placement=='right' ? 'position:absolute;width:100%;height:100%;transform:translate(0,'+ 100 * index +'%) translateZ(0px);':''}}">
+                    <view class="l-subpanel-content" wx:if="{{item.subTabs.length>0}}" style="{{'transform:translate(0,'+ -100 * item.subCurrentIndex +'%) translateZ(0px);'}}">
+                        <view class="l-subpanel" wx:for="{{item.subTabs}}" wx:for-item="tab" wx:key="{{tab.key}}">
+                            <slot name="{{tab.key}}"></slot>
+                        </view>
+                    </view>
+                    <slot name="{{item.key}}" wx:else></slot>
+                </view>
+            </view>
+            <swiper wx:else class="l-tabpanel-content" bindchange="swiperChange" current="{{currentIndex}}">
+                <swiper-item class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':''}}" wx:for="{{tabList}}" wx:key="{{item.key}}">
+                    <view wx:if="{{item.subTabs.length>0}}">
+                        <swiper class="" vertical bindchange="subSwiperChange" current="{{item.subCurrentIndex}}" >
+                            <swiper-item wx:for="{{item.subTabs}}" wx:for-item="tab" wx:key="{{tab.key}}">
+                                <slot name="{{tab.key}}"></slot>
+                            </swiper-item>
+                        </swiper>
+                      
+                    </view>   
+                      <slot name="{{item.key}}" wx:else></slot>    
+                </swiper-item>
+            </swiper>
+        </view>
+    </view>
+</view>
+<template name="tab-header">
+    <scroll-view scroll-x="{{headerType==='tab' && scrollable}}" scroll-y="{{headerType==='subTab' && scrollable}}" scroll-top="{{transformY}}" scroll-left="{{transformX}}" scroll-with-animation class="l-tabsscroll">
+        <view class="l-tabs-header l-class-header l-header-class {{hasLine?'l-tabs-header-line':''}}">
+            <view id="{{item.key}}" class="l-tabs-item {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+item.image.placement}}" style="color:{{item.key===activeKey?activeColor:inactiveColor}}" wx:for="{{tab}}" wx:key="{{item.key}}" data-key="{{item.key}}" data-index="{{index}}" data-header-type="{{headerType}}" bind:tap="handleChange">
+                <image wx:if="{{ item.image.activeImage || item.image.defaultImage }}" src="{{item.key===activeKey? item.image.activeImage:item.image.defaultImage}}" class="l-tab-image l-class-tabimage l-tabimage-class" />
+                <l-icon wx:if="{{item.icon}}" l-class="{{item.key===activeKey ? 'l-icon-active':'l-icon-inactive'}}" name="{{item.icon}}" size="28" color="{{item.key===activeKey?activeColor:inactiveColor}}" />
+                {{item.tab}}
+                <view class="l-tab-line l-class-line l-line-class" wx:if="{{hasLine && item.key===activeKey}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+            </view>
+        </view>
+    </scroll-view>
+</template>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/combined-tabs/index.wxss b/miniprogram_npm/lin-ui/combined-tabs/index.wxss
new file mode 100644
index 0000000..cda6d30
--- /dev/null
+++ b/miniprogram_npm/lin-ui/combined-tabs/index.wxss
@@ -0,0 +1 @@
+.l-tabs{display:flex;border-radius:8rpx;box-sizing:border-box;overflow:hidden;flex-direction:column;background:#fff;height:100%}.l-tabs .l-tabs-header{display:flex;width:100%;flex-direction:row;background:#fff;align-items:center}.l-tabs .l-tabs-header .l-tabs-item{flex:1;font-size:28rpx;text-align:center;box-sizing:border-box;display:flex;justify-content:center;align-items:center}.l-tabs .l-tabs-header .l-icon-active,.l-tabs .l-tabs-header .l-tabs-active{color:#333;font-size:28rpx}.l-tabs .l-tabs-header .l-icon-inactive,.l-tabs .l-tabs-header .l-tabs-inactive{font-size:28rpx;color:#bbb}.l-tabs .l-tabs-header .l-tabsitems-row{flex-direction:row}.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-inactive{margin-right:10rpx}.l-tabs .l-tabs-header .l-tabsitems-row-reverse{flex-direction:row-reverse}.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-inactive{margin-left:10rpx}.l-placement-top .l-tabs-header{height:80rpx}.l-placement-top .l-tabs-header .l-tabs-item{min-height:100%}.l-sub-placement-left{flex-direction:row}.l-sub-placement-left .l-tabs-header{flex-direction:column;width:160rpx}.l-sub-placement-left .l-tabs-header>view{width:100%;height:80rpx;background:#f6f8fa}.l-sub-placement-left .l-tabs-header>.l-tabs-active{background:#fff}.l-sub-placement-left .l-tabs-main .l-tabpanel-content{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;position:relative;will-change:transform;transition:transform .3s cubic-bezier(.645,.045,.355,1)}.l-placement-top .l-tabpanel-content{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.l-subpanel-content{width:100%;height:100%}.l-tabpanel{width:100%;height:100%;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:opacity .45s;transition:opacity .45s;opacity:1;text-overflow:ellipsis}.l-tabpanel-inactive{opacity:0;height:0;padding:0!important;pointer-events:none}.l-subpanel{height:100%}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header{-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header .l-tabs-item{overflow:visible;min-width:160rpx}.l-tabs-scroll.l-tabs-horizontal .l-tabpanel-content{height:150px}.l-tabs-vertical .l-tabsscroll{width:160rpx}.l-tabs-vertical .l-tabs-header{height:100%;min-height:80rpx;-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-vertical .l-tabs-header .l-tabs-item{overflow:visible;min-height:80rpx}.l-tabs-item{position:relative}.l-tab-line{position:absolute;bottom:0;left:0;right:0;width:0;background:#000}.l-tabs-horizontal .l-tab-line{height:4rpx;margin:0 auto}.l-tabs-horizontal .l-tabs-active .l-tab-line{width:100%;transition-delay:.1s}.l-placement-top .l-tab-line{bottom:0}.l-placement-top .l-tabs-header-line{border-bottom:1px solid #f3f3f3}.l-tabs-vertical .l-tabs-active .l-tab-line{width:6rpx!important;height:40rpx!important;border-radius:0 6rpx 6rpx 0;top:0;left:0;margin:auto 0;transition-delay:.1s}.l-sub-placement-left .l-tab-line{left:0;right:auto}.l-sub-placement-left .l-tabs-header-line{border-right:1px solid #f3f3f3}.l-tab-image{width:100rpx;height:100rpx}.l-tab-image-placement-top{flex-direction:column}.l-tab-image-placement-left{flex-direction:row}.l-tabs-main{flex:1}.l-combined-tabs-main{display:flex}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/common/async-validator/index.js b/miniprogram_npm/lin-ui/common/async-validator/index.js
new file mode 100644
index 0000000..dac8802
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/index.js
@@ -0,0 +1,258 @@
+import { format, complementError, asyncMap, warning, deepMerge } from './util.js';
+import validators from './validator/index.js';
+import { messages as defaultMessages, newMessages } from './messages.js';
+
+/**
+ *  Encapsulates a validation schema.
+ *
+ *  @param descriptor An object declaring validation rules
+ *  for this schema.
+ */
+function Schema(descriptor) {
+  this.rules = null;
+  this._messages = defaultMessages;
+  this.define(descriptor);
+}
+
+Schema.prototype = {
+  messages(messages) {
+    if (messages) {
+      this._messages = deepMerge(newMessages(), messages);
+    }
+    return this._messages;
+  },
+  define(rules) {
+    if (!rules) {
+      throw new Error(
+        'Cannot configure a schema with no rules');
+    }
+    if (typeof rules !== 'object' || Array.isArray(rules)) {
+      throw new Error('Rules must be an object');
+    }
+    this.rules = {};
+    let z;
+    let item;
+    for (z in rules) {
+      if (rules.hasOwnProperty(z)) {
+        item = rules[z];
+        this.rules[z] = Array.isArray(item) ? item : [item];
+      }
+    }
+  },
+  validate(source_, o = {}, oc) {
+    let source = source_;
+    let options = o;
+    let callback = oc;
+    if (typeof options === 'function') {
+      callback = options;
+      options = {};
+    }
+    if (!this.rules || Object.keys(this.rules).length === 0) {
+      if (callback) {
+        callback();
+      }
+      return;
+    }
+    function complete(results) {
+      let i;
+      let field;
+      let errors = [];
+      let fields = {};
+
+      function add(e) {
+        if (Array.isArray(e)) {
+          errors = errors.concat.apply(errors, e);
+        } else {
+          errors.push(e);
+        }
+      }
+
+      for (i = 0; i < results.length; i++) {
+        add(results[i]);
+      }
+      if (!errors.length) {
+        errors = null;
+        fields = null;
+      } else {
+        for (i = 0; i < errors.length; i++) {
+          field = errors[i].field;
+          fields[field] = fields[field] || [];
+          fields[field].push(errors[i]);
+        }
+      }
+      callback(errors, fields);
+    }
+
+    if (options.messages) {
+      let messages = this.messages();
+      if (messages === defaultMessages) {
+        messages = newMessages();
+      }
+      deepMerge(messages, options.messages);
+      options.messages = messages;
+    } else {
+      options.messages = this.messages();
+    }
+    let arr;
+    let value;
+    const series = {};
+    const keys = options.keys || Object.keys(this.rules);
+    keys.forEach((z) => {
+      arr = this.rules[z];
+      value = source[z];
+      arr.forEach((r) => {
+        let rule = r;
+        if (typeof (rule.transform) === 'function') {
+          if (source === source_) {
+            source = { ...source };
+          }
+          value = source[z] = rule.transform(value);
+        }
+        if (typeof (rule) === 'function') {
+          rule = {
+            validator: rule,
+          };
+        } else {
+          rule = { ...rule };
+        }
+        rule.validator = this.getValidationMethod(rule);
+        rule.field = z;
+        rule.fullField = rule.fullField || z;
+        rule.type = this.getType(rule);
+        if (!rule.validator) {
+          return;
+        }
+        series[z] = series[z] || [];
+        series[z].push({
+          rule,
+          value,
+          source,
+          field: z,
+        });
+      });
+    });
+    const errorFields = {};
+    asyncMap(series, options, (data, doIt) => {
+      const rule = data.rule;
+      let deep = (rule.type === 'object' || rule.type === 'array') &&
+        (typeof (rule.fields) === 'object' || typeof (rule.defaultField) === 'object');
+      deep = deep && (rule.required || (!rule.required && data.value));
+      rule.field = data.field;
+      function addFullfield(key, schema) {
+        return {
+          ...schema,
+          fullField: `${rule.fullField}.${key}`,
+        };
+      }
+
+      function cb(e = []) {
+        let errors = e;
+        if (!Array.isArray(errors)) {
+          errors = [errors];
+        }
+        if (errors.length) {
+          warning('async-validator:', errors);
+        }
+        if (errors.length && rule.message) {
+          errors = [].concat(rule.message);
+        }
+
+        errors = errors.map(complementError(rule));
+
+        if (options.first && errors.length) {
+          errorFields[rule.field] = 1;
+          return doIt(errors);
+        }
+        if (!deep) {
+          doIt(errors);
+        } else {
+          // if rule is required but the target object
+          // does not exist fail at the rule level and don't
+          // go deeper
+          if (rule.required && !data.value) {
+            if (rule.message) {
+              errors = [].concat(rule.message).map(complementError(rule));
+            } else if (options.error) {
+              errors = [options.error(rule, format(options.messages.required, rule.field))];
+            } else {
+              errors = [];
+            }
+            return doIt(errors);
+          }
+
+          let fieldsSchema = {};
+          if (rule.defaultField) {
+            for (const k in data.value) {
+              if (data.value.hasOwnProperty(k)) {
+                fieldsSchema[k] = rule.defaultField;
+              }
+            }
+          }
+          fieldsSchema = {
+            ...fieldsSchema,
+            ...data.rule.fields,
+          };
+          for (const f in fieldsSchema) {
+            if (fieldsSchema.hasOwnProperty(f)) {
+              const fieldSchema = Array.isArray(fieldsSchema[f]) ?
+                fieldsSchema[f] : [fieldsSchema[f]];
+              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
+            }
+          }
+          const schema = new Schema(fieldsSchema);
+          schema.messages(options.messages);
+          if (data.rule.options) {
+            data.rule.options.messages = options.messages;
+            data.rule.options.error = options.error;
+          }
+          schema.validate(data.value, data.rule.options || options, (errs) => {
+            doIt(errs && errs.length ? errors.concat(errs) : errs);
+          });
+        }
+      }
+
+      const res = rule.validator(
+        rule, data.value, cb, data.source, options);
+      if (res && res.then) {
+        res.then(() => cb(), e => cb(e));
+      }
+    }, (results) => {
+      complete(results);
+    });
+  },
+  getType(rule) {
+    if (rule.type === undefined && (rule.pattern instanceof RegExp)) {
+      rule.type = 'pattern';
+    }
+    if (typeof (rule.validator) !== 'function' &&
+      (rule.type && !validators.hasOwnProperty(rule.type))) {
+      throw new Error(format('Unknown rule type %s', rule.type));
+    }
+    return rule.type || 'string';
+  },
+  getValidationMethod(rule) {
+    if (typeof rule.validator === 'function') {
+      return rule.validator;
+    }
+    const keys = Object.keys(rule);
+    const messageIndex = keys.indexOf('message');
+    if (messageIndex !== -1) {
+      keys.splice(messageIndex, 1);
+    }
+    if (keys.length === 1 && keys[0] === 'required') {
+      return validators.required;
+    }
+    return validators[this.getType(rule)] || false;
+  },
+};
+
+Schema.register = function register(type, validator) {
+  if (typeof validator !== 'function') {
+    throw new Error('Cannot register a validator by type, validator is not a function');
+  }
+  validators[type] = validator;
+};
+
+Schema.messages = defaultMessages;
+
+export default Schema;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/messages.js b/miniprogram_npm/lin-ui/common/async-validator/messages.js
new file mode 100644
index 0000000..5117ce4
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/messages.js
@@ -0,0 +1,56 @@
+export function newMessages() {
+  return {
+    default: 'Validation error on field %s',
+    required: '%s is required',
+    enum: '%s must be one of %s',
+    whitespace: '%s cannot be empty',
+    date: {
+      format: '%s date %s is invalid for format %s',
+      parse: '%s date could not be parsed, %s is invalid ',
+      invalid: '%s date %s is invalid',
+    },
+    types: {
+      string: '%s is not a %s',
+      method: '%s is not a %s (function)',
+      array: '%s is not an %s',
+      object: '%s is not an %s',
+      number: '%s is not a %s',
+      date: '%s is not a %s',
+      boolean: '%s is not a %s',
+      integer: '%s is not an %s',
+      float: '%s is not a %s',
+      regexp: '%s is not a valid %s',
+      email: '%s is not a valid %s',
+      url: '%s is not a valid %s',
+      hex: '%s is not a valid %s',
+    },
+    string: {
+      len: '%s must be exactly %s characters',
+      min: '%s must be at least %s characters',
+      max: '%s cannot be longer than %s characters',
+      range: '%s must be between %s and %s characters',
+    },
+    number: {
+      len: '%s must equal %s',
+      min: '%s cannot be less than %s',
+      max: '%s cannot be greater than %s',
+      range: '%s must be between %s and %s',
+    },
+    array: {
+      len: '%s must be exactly %s in length',
+      min: '%s cannot be less than %s in length',
+      max: '%s cannot be greater than %s in length',
+      range: '%s must be between %s and %s in length',
+    },
+    pattern: {
+      mismatch: '%s value %s does not match pattern %s',
+    },
+    clone() {
+      const cloned = JSON.parse(JSON.stringify(this));
+      cloned.clone = this.clone;
+      return cloned;
+    },
+  };
+}
+
+export const messages = newMessages();
diff --git a/miniprogram_npm/lin-ui/common/async-validator/rule/enum.js b/miniprogram_npm/lin-ui/common/async-validator/rule/enum.js
new file mode 100644
index 0000000..00f0e1c
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/rule/enum.js
@@ -0,0 +1,22 @@
+import * as util from '../util';
+const ENUM = 'enum';
+
+/**
+ *  Rule for validating a value exists in an enumerable list.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function enumerable(rule, value, source, errors, options) {
+  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
+  if (rule[ENUM].indexOf(value) === -1) {
+    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));
+  }
+}
+
+export default enumerable;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/rule/index.js b/miniprogram_npm/lin-ui/common/async-validator/rule/index.js
new file mode 100644
index 0000000..05572e8
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/rule/index.js
@@ -0,0 +1,15 @@
+import required from './required.js';
+import whitespace from './whitespace.js';
+import type from './type.js';
+import range from './range.js';
+import enumRule from './enum.js';
+import pattern from './pattern.js';
+
+export default {
+  required,
+  whitespace,
+  type,
+  range,
+  enum: enumRule,
+  pattern,
+};
diff --git a/miniprogram_npm/lin-ui/common/async-validator/rule/pattern.js b/miniprogram_npm/lin-ui/common/async-validator/rule/pattern.js
new file mode 100644
index 0000000..3dbe780
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/rule/pattern.js
@@ -0,0 +1,36 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating a regular expression pattern.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function pattern(rule, value, source, errors, options) {
+  if (rule.pattern) {
+    if (rule.pattern instanceof RegExp) {
+      // if a RegExp instance is passed, reset `lastIndex` in case its `global`
+      // flag is accidentally set to `true`, which in a validation scenario
+      // is not necessary and the result might be misleading
+      rule.pattern.lastIndex = 0;
+      if (!rule.pattern.test(value)) {
+        errors.push(util.format(options.messages.pattern.mismatch,
+          rule.fullField, value, rule.pattern));
+      }
+    } else if (typeof rule.pattern === 'string') {
+      
+      const _pattern = new RegExp(rule.pattern.replace(/^\/|\/$/g,''));
+      if (!_pattern.test(value)) {
+        errors.push(util.format(options.messages.pattern.mismatch,
+          rule.fullField, value, rule.pattern));
+      }
+    }
+  }
+}
+
+export default pattern;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/rule/range.js b/miniprogram_npm/lin-ui/common/async-validator/rule/range.js
new file mode 100644
index 0000000..2b50a40
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/rule/range.js
@@ -0,0 +1,59 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating minimum and maximum allowed values.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function range(rule, value, source, errors, options) {
+  const len = typeof rule.len === 'number';
+  const min = typeof rule.min === 'number';
+  const max = typeof rule.max === 'number';
+  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）
+  const spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
+  let val = value;
+  let key = null;
+  const num = typeof (value) === 'number';
+  const str = typeof (value) === 'string';
+  const arr = Array.isArray(value);
+  if (num) {
+    key = 'number';
+  } else if (str) {
+    key = 'string';
+  } else if (arr) {
+    key = 'array';
+  }
+  // if the value is not of a supported type for range validation
+  // the validation rule rule should use the
+  // type property to also test for a particular type
+  if (!key) {
+    return false;
+  }
+  if (arr) {
+    val = value.length;
+  }
+  if (str) {
+    // 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
+    val = value.replace(spRegexp, '_').length;
+  }
+  if (len) {
+    if (val !== rule.len) {
+      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));
+    }
+  } else if (min && !max && val < rule.min) {
+    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));
+  } else if (max && !min && val > rule.max) {
+    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));
+  } else if (min && max && (val < rule.min || val > rule.max)) {
+    errors.push(util.format(options.messages[key].range,
+      rule.fullField, rule.min, rule.max));
+  }
+}
+
+export default range;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/rule/required.js b/miniprogram_npm/lin-ui/common/async-validator/rule/required.js
new file mode 100644
index 0000000..4d9b409
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/rule/required.js
@@ -0,0 +1,21 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating required fields.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function required(rule, value, source, errors, options, type) {
+  if (rule.required &&
+    (!source.hasOwnProperty(rule.field) || util.isEmptyValue(value, type || rule.type))) {
+    errors.push(util.format(options.messages.required, rule.fullField));
+  }
+}
+
+export default required;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/rule/type.js b/miniprogram_npm/lin-ui/common/async-validator/rule/type.js
new file mode 100644
index 0000000..d6a50d5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/rule/type.js
@@ -0,0 +1,91 @@
+import * as util from '../util';
+import required from './required';
+
+/* eslint max-len:0 */
+
+const pattern = {
+  // http://emailregex.com/
+  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
+  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$', 'i'),
+  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,
+};
+
+const types = {
+  integer(value) {
+    return types.number(value) && parseInt(value, 10) === value;
+  },
+  float(value) {
+    return types.number(value) && !types.integer(value);
+  },
+  array(value) {
+    return Array.isArray(value);
+  },
+  regexp(value) {
+    if (value instanceof RegExp) {
+      return true;
+    }
+    try {
+      return !!new RegExp(value);
+    } catch (e) {
+      return false;
+    }
+  },
+  date(value) {
+    return typeof value.getTime === 'function' &&
+      typeof value.getMonth === 'function' &&
+      typeof value.getYear === 'function';
+  },
+  number(value) {
+    if (isNaN(value) || value === '') {
+      return false;
+    }
+    return true;
+  },
+  object(value) {
+    return typeof (value) === 'object' && !types.array(value);
+  },
+  method(value) {
+    return typeof (value) === 'function';
+  },
+  email(value) {
+    return typeof (value) === 'string' && !!value.match(pattern.email) && value.length < 255;
+  },
+  url(value) {
+    return typeof (value) === 'string' && !!value.match(pattern.url);
+  },
+  hex(value) {
+    return typeof (value) === 'string' && !!value.match(pattern.hex);
+  },
+};
+
+/**
+ *  Rule for validating the type of a value.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function type(rule, value, source, errors, options) {
+  if (rule.required && value === undefined) {
+    required(rule, value, source, errors, options);
+    return;
+  }
+  const custom = ['integer', 'float', 'array', 'regexp', 'object',
+    'method', 'email', 'number', 'date', 'url', 'hex'
+  ];
+  const ruleType = rule.type;
+  if (custom.indexOf(ruleType) > -1) {
+    if (!types[ruleType](value)) {
+      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
+    }
+    // straight typeof check
+  } else if (ruleType && typeof (value) !== rule.type) {
+    errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
+  }
+}
+
+export default type;
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/common/async-validator/rule/whitespace.js b/miniprogram_npm/lin-ui/common/async-validator/rule/whitespace.js
new file mode 100644
index 0000000..0433723
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/rule/whitespace.js
@@ -0,0 +1,20 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating whitespace.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function whitespace(rule, value, source, errors, options) {
+  if (/^\s+$/.test(value) || value === '') {
+    errors.push(util.format(options.messages.whitespace, rule.fullField));
+  }
+}
+
+export default whitespace;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/util.js b/miniprogram_npm/lin-ui/common/async-validator/util.js
new file mode 100644
index 0000000..6e61cc0
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/util.js
@@ -0,0 +1,176 @@
+const formatRegExp = /%[sdj%]/g;
+
+export let warning = () => {
+};
+
+export function format(...args) {
+  let i = 1;
+  const f = args[0];
+  const len = args.length;
+  if (typeof f === 'function') {
+    return f.apply(null, args.slice(1));
+  }
+  if (typeof f === 'string') {
+    let str = String(f).replace(formatRegExp, (x) => {
+      if (x === '%%') {
+        return '%';
+      }
+      if (i >= len) {
+        return x;
+      }
+      switch (x) {
+      case '%s':
+        return String(args[i++]);
+      case '%d':
+        return Number(args[i++]);
+      case '%j':
+        try {
+          return JSON.stringify(args[i++]);
+        } catch (_) {
+          return '[Circular]';
+        }
+      default:
+        return x;
+      }
+    });
+    for (let arg = args[i]; i < len; arg = args[++i]) {
+      str += ` ${arg}`;
+    }
+    return str;
+  }
+  return f;
+}
+
+function isNativeStringType(type) {
+  return type === 'string' ||
+    type === 'url' ||
+    type === 'hex' ||
+    type === 'email' ||
+    type === 'pattern';
+}
+
+export function isEmptyValue(value, type) {
+  if (value === undefined || value === null) {
+    return true;
+  }
+  if (type === 'array' && Array.isArray(value) && !value.length) {
+    return true;
+  }
+  if (isNativeStringType(type) && typeof value === 'string' && !value) {
+    return true;
+  }
+  return false;
+}
+
+export function isEmptyObject(obj) {
+  return Object.keys(obj).length === 0;
+}
+
+function asyncParallelArray(arr, func, callback) {
+  const results = [];
+  let total = 0;
+  const arrLength = arr.length;
+
+  function count(errors) {
+    results.push.apply(results, errors);
+    total++;
+    if (total === arrLength) {
+      callback(results);
+    }
+  }
+
+  arr.forEach((a) => {
+    func(a, count);
+  });
+}
+
+function asyncSerialArray(arr, func, callback) {
+  let index = 0;
+  const arrLength = arr.length;
+
+  function next(errors) {
+    if (errors && errors.length) {
+      callback(errors);
+      return;
+    }
+    const original = index;
+    index = index + 1;
+    if (original < arrLength) {
+      func(arr[original], next);
+    } else {
+      callback([]);
+    }
+  }
+
+  next([]);
+}
+
+function flattenObjArr(objArr) {
+  const ret = [];
+  Object.keys(objArr).forEach((k) => {
+    ret.push.apply(ret, objArr[k]);
+  });
+  return ret;
+}
+
+export function asyncMap(objArr, option, func, callback) {
+  if (option.first) {
+    const flattenArr = flattenObjArr(objArr);
+    return asyncSerialArray(flattenArr, func, callback);
+  }
+  let firstFields = option.firstFields || [];
+  if (firstFields === true) {
+    firstFields = Object.keys(objArr);
+  }
+  const objArrKeys = Object.keys(objArr);
+  const objArrLength = objArrKeys.length;
+  let total = 0;
+  const results = [];
+  const next = (errors) => {
+    results.push.apply(results, errors);
+    total++;
+    if (total === objArrLength) {
+      callback(results);
+    }
+  };
+  objArrKeys.forEach((key) => {
+    const arr = objArr[key];
+    if (firstFields.indexOf(key) !== -1) {
+      asyncSerialArray(arr, func, next);
+    } else {
+      asyncParallelArray(arr, func, next);
+    }
+  });
+}
+
+export function complementError(rule) {
+  return (oe) => {
+    if (oe && oe.message) {
+      oe.field = oe.field || rule.fullField;
+      return oe;
+    }
+    return {
+      message: oe,
+      field: oe.field || rule.fullField,
+    };
+  };
+}
+
+export function deepMerge(target, source) {
+  if (source) {
+    for (const s in source) {
+      if (source.hasOwnProperty(s)) {
+        const value = source[s];
+        if (typeof value === 'object' && typeof target[s] === 'object') {
+          target[s] = {
+            ...target[s],
+            ...value,
+          };
+        } else {
+          target[s] = value;
+        }
+      }
+    }
+  }
+  return target;
+}
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/array.js b/miniprogram_npm/lin-ui/common/async-validator/validator/array.js
new file mode 100644
index 0000000..5755124
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/array.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+/**
+ *  Validates an array.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function array(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, 'array') && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options, 'array');
+    if (!isEmptyValue(value, 'array')) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default array;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/boolean.js b/miniprogram_npm/lin-ui/common/async-validator/validator/boolean.js
new file mode 100644
index 0000000..74daa78
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/boolean.js
@@ -0,0 +1,29 @@
+import { isEmptyValue } from '../util';
+import rules from '../rule/index.js';
+
+/**
+ *  Validates a boolean.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function boolean(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default boolean;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/date.js b/miniprogram_npm/lin-ui/common/async-validator/validator/date.js
new file mode 100644
index 0000000..9ac063a
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/date.js
@@ -0,0 +1,32 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+function date(rule, value, callback, source, options) {
+  // console.log('integer rule called %j', rule);
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  // console.log('validate on %s value', value);
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (!isEmptyValue(value)) {
+      let dateObject;
+
+      if (typeof value === 'number') {
+        dateObject = new Date(value);
+      } else {
+        dateObject = value;
+      }
+
+      rules.type(rule, dateObject, source, errors, options);
+      if (dateObject) {
+        rules.range(rule, dateObject.getTime(), source, errors, options);
+      }
+    }
+  }
+  callback(errors);
+}
+
+export default date;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/enum.js b/miniprogram_npm/lin-ui/common/async-validator/validator/enum.js
new file mode 100644
index 0000000..20e1a2c
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/enum.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+const ENUM = 'enum';
+
+/**
+ *  Validates an enumerable list.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function enumerable(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value) {
+      rules[ENUM](rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default enumerable;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/float.js b/miniprogram_npm/lin-ui/common/async-validator/validator/float.js
new file mode 100644
index 0000000..13b4993
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/float.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a number is a floating point number.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function floatFn(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default floatFn;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/index.js b/miniprogram_npm/lin-ui/common/async-validator/validator/index.js
new file mode 100644
index 0000000..148bca5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/index.js
@@ -0,0 +1,33 @@
+import string from './string';
+import method from './method';
+import number from './number';
+import boolean from './boolean';
+import regexp from './regexp';
+import integer from './integer';
+import float from './float';
+import array from './array';
+import object from './object';
+import enumValidator from './enum';
+import pattern from './pattern';
+import date from './date';
+import required from './required';
+import type from './type';
+
+export default {
+  string,
+  method,
+  number,
+  boolean,
+  regexp,
+  integer,
+  float,
+  array,
+  object,
+  enum: enumValidator,
+  pattern,
+  date,
+  url: type,
+  hex: type,
+  email: type,
+  required,
+};
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/integer.js b/miniprogram_npm/lin-ui/common/async-validator/validator/integer.js
new file mode 100644
index 0000000..5444e30
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/integer.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a number is an integer.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function integer(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default integer;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/method.js b/miniprogram_npm/lin-ui/common/async-validator/validator/method.js
new file mode 100644
index 0000000..9ef0cbe
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/method.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a function.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function method(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default method;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/number.js b/miniprogram_npm/lin-ui/common/async-validator/validator/number.js
new file mode 100644
index 0000000..c7b2a19
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/number.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a number.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function number(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default number;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/object.js b/miniprogram_npm/lin-ui/common/async-validator/validator/object.js
new file mode 100644
index 0000000..93afef5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/object.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates an object.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function object(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default object;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/pattern.js b/miniprogram_npm/lin-ui/common/async-validator/validator/pattern.js
new file mode 100644
index 0000000..f1b980c
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/pattern.js
@@ -0,0 +1,32 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a regular expression pattern.
+ *
+ *  Performs validation when a rule only contains
+ *  a pattern property but is not declared as a string type.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function pattern(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, 'string') && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (!isEmptyValue(value, 'string')) {
+      rules.pattern(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default pattern;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/regexp.js b/miniprogram_npm/lin-ui/common/async-validator/validator/regexp.js
new file mode 100644
index 0000000..c68883b
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/regexp.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates the regular expression type.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function regexp(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (!isEmptyValue(value)) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default regexp;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/required.js b/miniprogram_npm/lin-ui/common/async-validator/validator/required.js
new file mode 100644
index 0000000..00e6d01
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/required.js
@@ -0,0 +1,10 @@
+import rules from '../rule/index.js';
+
+function required(rule, value, callback, source, options) {
+  const errors = [];
+  const type = Array.isArray(value) ? 'array' : typeof value;
+  rules.required(rule, value, source, errors, options, type);
+  callback(errors);
+}
+
+export default required;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/string.js b/miniprogram_npm/lin-ui/common/async-validator/validator/string.js
new file mode 100644
index 0000000..411fee7
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/string.js
@@ -0,0 +1,34 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Performs validation for string types.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function string(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, 'string') && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options, 'string');
+    if (!isEmptyValue(value, 'string')) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+      rules.pattern(rule, value, source, errors, options);
+      if (rule.whitespace === true) {
+        rules.whitespace(rule, value, source, errors, options);
+      }
+    }
+  }
+  callback(errors);
+}
+
+export default string;
diff --git a/miniprogram_npm/lin-ui/common/async-validator/validator/type.js b/miniprogram_npm/lin-ui/common/async-validator/validator/type.js
new file mode 100644
index 0000000..79a05fa
--- /dev/null
+++ b/miniprogram_npm/lin-ui/common/async-validator/validator/type.js
@@ -0,0 +1,20 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+function type(rule, value, callback, source, options) {
+  const ruleType = rule.type;
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, ruleType) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options, ruleType);
+    if (!isEmptyValue(value, ruleType)) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default type;
diff --git a/miniprogram_npm/lin-ui/count-selector/index.js b/miniprogram_npm/lin-ui/count-selector/index.js
new file mode 100644
index 0000000..c037e05
--- /dev/null
+++ b/miniprogram_npm/lin-ui/count-selector/index.js
@@ -0,0 +1,158 @@
+Component({
+  externalClasses: [
+    'l-class',
+    'l-symbol-class',
+    'l-count-class',
+    'l-disabled-class'
+  ],
+  properties: {
+    count: {
+      type: Number,
+      value: 1
+    },
+    max: {
+      type: Number,
+      value: 9999
+    },
+    min: {
+      type: Number,
+      value: 1
+    },
+    step: {
+      type: Number,
+      value: 1
+    },
+    disabled: Boolean,
+    iconSize: String,
+    iconColor: String
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    focus: false,
+    result: 1
+  },
+
+  observers: {
+    'count,min,max': function () {
+      this.valueRange(this.data.count, 'parameter');
+    }
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    doNothing(e) {
+      const { type } = e.currentTarget.dataset;
+      this.triggerEvent('linout', { type, way: 'icon' }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    onCount() {
+      this.setData({
+        focus: true
+      });
+    },
+
+    onBlur(e) {
+      this.setData({
+        focus: false
+      });
+      let {
+        value
+      } = e.detail;
+      setTimeout(() => {
+        this.blurCount(Number(value), () => {
+          this.data.count = this.data.result;
+          this.triggerEvent('lintap', {
+            count: this.data.result,
+            type: 'blur'
+          }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      }, 50);
+    },
+
+    blurCount(value, callback) {
+      if (value) {
+        this.valueRange(value);
+      } else {
+        this.setData({
+          result: this.properties.count
+        });
+      }
+      callback && callback();
+    },
+
+    valueRange(value, way = 'input') {
+      if (value > this.properties.max) {
+        this.setData({
+          result: this.properties.max
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_max', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else if (value < this.properties.min) {
+        this.setData({
+          result: this.properties.min
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_min', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else {
+        this.setData({
+          result: value
+        });
+      }
+    },
+
+    reduceTap() {
+      let distance = this.data.count - this.properties.step;
+      if (distance <= this.properties.min) {
+        this.data.count = this.properties.min;
+      } else {
+        this.data.count -= this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'reduce'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    addTap() {
+      let distance = this.data.count + this.properties.step;
+      if (distance >= this.properties.max) {
+        this.data.count = this.properties.max;
+      } else {
+        this.data.count += this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'add'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/count-selector/index.json b/miniprogram_npm/lin-ui/count-selector/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/miniprogram_npm/lin-ui/count-selector/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/count-selector/index.wxml b/miniprogram_npm/lin-ui/count-selector/index.wxml
new file mode 100644
index 0000000..7a399ab
--- /dev/null
+++ b/miniprogram_npm/lin-ui/count-selector/index.wxml
@@ -0,0 +1,22 @@
+<view class="l-class container-count">
+  <view class="symbol {{result<=min|| disabled?'disabled  l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result<=min|| disabled?'doNothing':'reduceTap'}}"
+        data-type="overflow_min"
+        hover-class="count-hover">
+    <view class="l-icon l-icon-reduce" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+  <input  wx:if="{{focus}}"
+          class="l-count-class count" 
+          disabled="{{disabled}}" 
+          type="number"
+          focus="{{focus}}" 
+          value="{{result}}"
+          bindblur="onBlur"></input>
+  <view wx:else class="l-count-class count" bindtap="onCount">{{result}}</view>        
+  <view class="symbol {{result>=max|| disabled?'disabled l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result>=max|| disabled?'doNothing':'addTap'}}"
+        data-type="overflow_max"
+        hover-class="count-hover">
+       <view class="l-icon l-icon-add" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/count-selector/index.wxss b/miniprogram_npm/lin-ui/count-selector/index.wxss
new file mode 100644
index 0000000..929666b
--- /dev/null
+++ b/miniprogram_npm/lin-ui/count-selector/index.wxss
@@ -0,0 +1 @@
+.container-count{display:flex;flex-direction:row;width:170rpx;height:56rpx}.symbol{height:100%;width:56rpx;font-size:28rpx;color:#596c8e;display:flex;align-items:center;justify-content:center}.disabled{background-color:#f3f3f3;color:#c4c9d2}.abled{background-color:#ecf1f8;color:#596c8e}.count{height:100%;flex:1;min-height:56rpx;line-height:56rpx;font-size:24rpx;color:#596c8e;background:#f6f7f9;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALEAAsAAAAABqwAAAJ3AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBFIEWATYCJAMMCwgABCAFhG0HNxvdBcgekiSBqhRCJKIogADMEYRr5GySu0dQoBAloETFRVKmqpWoK1wVG1th2Ij732n7N5fsqTh2xyneKfa2N3/anZKGvYXFohGGrUFIEA6JogD/fZ7L6U2gA7nGtyynNW3s8fyoF2AcUEBjbYqsRALxFtlF3ImLOE6g3ZheoYOxmRVIKtC4QLww9QYkCxFFMfKtQt2wtIjXKq3pZfrEq+j78d9qJEmqDE09fTTahoFf6deHfNxwgxOiBHl1hYx5oBC3GjMXIsLgItpN0e7yWhHSXPEmkcq31Dv94yWihmo7wbQcS/yiMoJf9yskkEFdzE0Diwo7eF2IkexeNr35cvtSjmQ/fjt5zeTy++93z1I4x8LHT3u9VVdH6SHr0r8+OjOTtCopyONe0uFsIlZDiaMZyTdAmzFfZzrm0+EOQPOcP/IeANGP4rNA8KN0+V8rbPwlMwX83P7UK0Wa5wJwS+sZvMEfUwMbiq9F1lxcFVWFvmwE4ErICtOvARTo9zPeMgROEVoL2hG+FqMeslbjZGHnUemwjlqrbbSbM766wwAuIkobZl1ICL0ekXT7jqzXF1nYb1SG/aLWGxG0O4uBLTtMhpne59gQ2CbNHWK2mEeJXaTj+iXUN5wGz2sjfg15YMaJJqvl/Dh6yOeYEWzqFSEooZy5ZEw6DR2HEZ8zC1tCNoTwq4pCm94kt5gLafs41CCgNqJpB2FqYTyUtxbSlc8vQboNjgbeIejJr0FcwOyc0MhUADlu8kCCe3klsElXIQgUQXGMixiTBiGHgyH85kEW1CLIjBEpX5WCm1GoSV7f4n7fNmiH9syRIkeR77bbiWdmwzMaDAAA') format('woff2')}.l-icon-add:before{content:"\e602"}.l-icon-reduce:before{content:"\e69c"}.l-icon{font-family:iconfont;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.l-icon::before{display:inline-flex}.count-hover{opacity:.8}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/countdown/index.js b/miniprogram_npm/lin-ui/countdown/index.js
new file mode 100644
index 0000000..5bf852d
--- /dev/null
+++ b/miniprogram_npm/lin-ui/countdown/index.js
@@ -0,0 +1,18 @@
+import countDownBehavios from '../behaviors/countdown';
+Component({
+  externalClasses: [
+    'l-class',
+    'l-class-time',
+    'l-time-class'
+  ],
+  behaviors:[countDownBehavios],
+  properties: {
+    doneText:{
+      type:String,
+      value:'已结束'
+    }
+  },
+  methods: {
+        
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/countdown/index.json b/miniprogram_npm/lin-ui/countdown/index.json
new file mode 100644
index 0000000..a32a128
--- /dev/null
+++ b/miniprogram_npm/lin-ui/countdown/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+       
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/countdown/index.wxml b/miniprogram_npm/lin-ui/countdown/index.wxml
new file mode 100644
index 0000000..9e1db30
--- /dev/null
+++ b/miniprogram_npm/lin-ui/countdown/index.wxml
@@ -0,0 +1,3 @@
+<view class="l-countdown l-class">
+    <view class="l-countdown-item" wx:for="{{date}}" wx:key="{{index}}"><text class="l-class-time l-time-class l-countdown-time">{{item.value}}</text>{{item.name}}</view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/countdown/index.wxss b/miniprogram_npm/lin-ui/countdown/index.wxss
new file mode 100644
index 0000000..da50268
--- /dev/null
+++ b/miniprogram_npm/lin-ui/countdown/index.wxss
@@ -0,0 +1 @@
+.l-countdown{font-size:28rpx;line-height:40px}.l-countdown-item{display:inline-block;color:inherit}.l-countdown-time{display:inline-flex;width:56rpx;height:56rpx;background:#45526b;border-radius:4rpx;color:#fff;align-items:center;justify-content:center;margin:0 16rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/counter/index.js b/miniprogram_npm/lin-ui/counter/index.js
new file mode 100644
index 0000000..99bc9ab
--- /dev/null
+++ b/miniprogram_npm/lin-ui/counter/index.js
@@ -0,0 +1,161 @@
+import hover from '../behaviors/hover';
+
+Component({
+  behaviors:[hover],
+  externalClasses: [
+    'l-class',
+    'l-symbol-class',
+    'l-count-class',
+    'l-disabled-class'
+  ],
+  properties: {
+    count: {
+      type: Number,
+      value: 1
+    },
+    max: {
+      type: Number,
+      value: 9999
+    },
+    min: {
+      type: Number,
+      value: 1
+    },
+    step: {
+      type: Number,
+      value: 1
+    },
+    disabled: Boolean,
+    iconSize: String,
+    iconColor: String
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    focus: false,
+    result: 1
+  },
+
+  observers: {
+    'count,min,max': function () {
+      this.valueRange(this.data.count, 'parameter');
+    }
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    doNothing(e) {
+      const { type } = e.currentTarget.dataset;
+      this.triggerEvent('linout', { type, way: 'icon' }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    onCount() {
+      this.setData({
+        focus: true
+      });
+    },
+
+    onBlur(e) {
+      this.setData({
+        focus: false
+      });
+      let {
+        value
+      } = e.detail;
+      setTimeout(() => {
+        this.blurCount(Number(value), () => {
+          this.data.count = this.data.result;
+          this.triggerEvent('lintap', {
+            count: this.data.result,
+            type: 'blur'
+          }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      }, 50);
+    },
+
+    blurCount(value, callback) {
+      if (value) {
+        this.valueRange(value);
+      } else {
+        this.setData({
+          result: this.properties.count
+        });
+      }
+      callback && callback();
+    },
+
+    valueRange(value, way = 'input') {
+      if (value > this.properties.max) {
+        this.setData({
+          result: this.properties.max
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_max', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else if (value < this.properties.min) {
+        this.setData({
+          result: this.properties.min
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_min', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else {
+        this.setData({
+          result: value
+        });
+      }
+    },
+
+    reduceTap() {
+      let distance = this.data.count - this.properties.step;
+      if (distance <= this.properties.min) {
+        this.data.count = this.properties.min;
+      } else {
+        this.data.count -= this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'reduce'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    addTap() {
+      let distance = this.data.count + this.properties.step;
+      if (distance >= this.properties.max) {
+        this.data.count = this.properties.max;
+      } else {
+        this.data.count += this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'add'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/counter/index.json b/miniprogram_npm/lin-ui/counter/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/miniprogram_npm/lin-ui/counter/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/counter/index.wxml b/miniprogram_npm/lin-ui/counter/index.wxml
new file mode 100644
index 0000000..964a441
--- /dev/null
+++ b/miniprogram_npm/lin-ui/counter/index.wxml
@@ -0,0 +1,22 @@
+<view class="l-class container-count">
+  <view class="symbol {{result<=min|| disabled?'disabled  l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result<=min|| disabled?'doNothing':'reduceTap'}}"
+        data-type="overflow_min"
+        hover-class="{{isHover?'count-hover':''}}">
+    <view class="l-icon l-icon-reduce" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+  <input  wx:if="{{focus}}"
+          class="l-count-class count" 
+          disabled="{{disabled}}" 
+          type="number"
+          focus="{{focus}}" 
+          value="{{result}}"
+          bindblur="onBlur"></input>
+  <view wx:else class="l-count-class count" bindtap="onCount">{{result}}</view>        
+  <view class="symbol {{result>=max|| disabled?'disabled l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result>=max|| disabled?'doNothing':'addTap'}}"
+        data-type="overflow_max"
+        hover-class="{{isHover?'count-hover':''}}">
+       <view class="l-icon l-icon-add" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/counter/index.wxss b/miniprogram_npm/lin-ui/counter/index.wxss
new file mode 100644
index 0000000..929666b
--- /dev/null
+++ b/miniprogram_npm/lin-ui/counter/index.wxss
@@ -0,0 +1 @@
+.container-count{display:flex;flex-direction:row;width:170rpx;height:56rpx}.symbol{height:100%;width:56rpx;font-size:28rpx;color:#596c8e;display:flex;align-items:center;justify-content:center}.disabled{background-color:#f3f3f3;color:#c4c9d2}.abled{background-color:#ecf1f8;color:#596c8e}.count{height:100%;flex:1;min-height:56rpx;line-height:56rpx;font-size:24rpx;color:#596c8e;background:#f6f7f9;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALEAAsAAAAABqwAAAJ3AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBFIEWATYCJAMMCwgABCAFhG0HNxvdBcgekiSBqhRCJKIogADMEYRr5GySu0dQoBAloETFRVKmqpWoK1wVG1th2Ij732n7N5fsqTh2xyneKfa2N3/anZKGvYXFohGGrUFIEA6JogD/fZ7L6U2gA7nGtyynNW3s8fyoF2AcUEBjbYqsRALxFtlF3ImLOE6g3ZheoYOxmRVIKtC4QLww9QYkCxFFMfKtQt2wtIjXKq3pZfrEq+j78d9qJEmqDE09fTTahoFf6deHfNxwgxOiBHl1hYx5oBC3GjMXIsLgItpN0e7yWhHSXPEmkcq31Dv94yWihmo7wbQcS/yiMoJf9yskkEFdzE0Diwo7eF2IkexeNr35cvtSjmQ/fjt5zeTy++93z1I4x8LHT3u9VVdH6SHr0r8+OjOTtCopyONe0uFsIlZDiaMZyTdAmzFfZzrm0+EOQPOcP/IeANGP4rNA8KN0+V8rbPwlMwX83P7UK0Wa5wJwS+sZvMEfUwMbiq9F1lxcFVWFvmwE4ErICtOvARTo9zPeMgROEVoL2hG+FqMeslbjZGHnUemwjlqrbbSbM766wwAuIkobZl1ICL0ekXT7jqzXF1nYb1SG/aLWGxG0O4uBLTtMhpne59gQ2CbNHWK2mEeJXaTj+iXUN5wGz2sjfg15YMaJJqvl/Dh6yOeYEWzqFSEooZy5ZEw6DR2HEZ8zC1tCNoTwq4pCm94kt5gLafs41CCgNqJpB2FqYTyUtxbSlc8vQboNjgbeIejJr0FcwOyc0MhUADlu8kCCe3klsElXIQgUQXGMixiTBiGHgyH85kEW1CLIjBEpX5WCm1GoSV7f4n7fNmiH9syRIkeR77bbiWdmwzMaDAAA') format('woff2')}.l-icon-add:before{content:"\e602"}.l-icon-reduce:before{content:"\e69c"}.l-icon{font-family:iconfont;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.l-icon::before{display:inline-flex}.count-hover{opacity:.8}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/custom-tab-bar/index.js b/miniprogram_npm/lin-ui/custom-tab-bar/index.js
new file mode 100644
index 0000000..b010c7c
--- /dev/null
+++ b/miniprogram_npm/lin-ui/custom-tab-bar/index.js
@@ -0,0 +1,121 @@
+Component({
+  properties: {
+    position: {
+      type: String,
+      value: 'bottom'
+    },
+    show: {
+      type: Boolean,
+      value: true
+    },
+    selected: {
+      type: Number,
+      value: 0
+    },
+    color: {
+      type: String,
+      value: '#707070'
+    },
+    selectedColor: {
+      type: String,
+      value: '3963BC'
+    },
+    borderStyle: {
+      type: String,
+      value: '#f6f6f6'
+    },
+    backgroundColor: {
+      type: String,
+      value: '#fff'
+    },
+    backgroundImg: {
+      type: String,
+      value: ''
+    },
+    fontSize: {
+      type: Number,
+      value: 24
+    },
+    isRedirectToTab: {
+      type: Boolean,
+      value: true
+    },
+    // 是否跳转
+    isNav: {
+      type: Boolean,
+      value: true
+    },
+    list: {
+      type: Array,
+      value: []
+    }
+  },
+  data: {},
+  attached() {},
+
+  methods: {
+    switchTab(e) {
+      const data = e.currentTarget.dataset;
+      const url = data.path;
+      if (this.data.isNav) {
+        if (this.data.isRedirectToTab) {
+          wx.switchTab({
+            url
+          });
+        } else {
+          wx.switchTab({
+            url
+          });
+        }
+      }
+
+
+      this.showItem(data.index);
+    },
+    show() {
+      this.setData({
+        show: true
+      });
+    },
+    hide() {
+      this.setData({
+        show: false
+      });
+    },
+    showItem(idx) {
+      this.setData({
+        selected: idx
+      });
+      let detail = {
+        idx,
+        path:this.route
+      };
+      let option = { bubbles: true, composed: true };
+      this.triggerEvent('lintap', detail, option);
+    },
+    showRedDot(idx) {
+      const redDot = `list[${idx}].redDot`;
+      this.setData({
+        [redDot]: true
+      });
+    },
+    hideRedDot(idx) {
+      const redDot = `list[${idx}].redDot`;
+      this.setData({
+        [redDot]: false
+      });
+    },
+    setTabBarBadge(idx, text) {
+      const badge = `list[${idx}].badge`;
+      this.setData({
+        [badge]: text
+      });
+    },
+    removeTabBarBadge(idx) {
+      const badge = `list[${idx}].badge`;
+      this.setData({
+        [badge]: ''
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/custom-tab-bar/index.json b/miniprogram_npm/lin-ui/custom-tab-bar/index.json
new file mode 100644
index 0000000..32640e0
--- /dev/null
+++ b/miniprogram_npm/lin-ui/custom-tab-bar/index.json
@@ -0,0 +1,3 @@
+{
+  "component": true
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/custom-tab-bar/index.wxml b/miniprogram_npm/lin-ui/custom-tab-bar/index.wxml
new file mode 100644
index 0000000..48bf52b
--- /dev/null
+++ b/miniprogram_npm/lin-ui/custom-tab-bar/index.wxml
@@ -0,0 +1,33 @@
+<!--miniprogram/custom-tab-bar/index.wxml-->
+<view
+  wx:if="{{show}}"
+  class="tab-bar tab-bar-{{position}}"
+  style='background: {{backgroundImg? "url("+ backgroundImg+ ")" : backgroundColor}}'>
+  <view class="tab-bar-border" style='background: {{borderStyle}}' ></view>
+  <view
+    wx:for="{{list}}"
+    wx:for-index="idx"
+    wx:key="index"
+    class="tab-bar-item {{item.style === 'circle' ? 'circle': ''}}"
+    data-path="{{item.pagePath}}"
+    data-index="{{idx}}"
+    bindtap="switchTab">
+    <view  wx:if="{{item.style === 'circle'}}" class='item-circle'></view>
+    <image
+      class='tab-bar-item-image'
+      wx:if="{{item.style != 'circle'}}"
+      style='height: {{item.iconSize}}rpx; width: {{item.iconSize}}rpx'
+      src="{{selected === idx ? item.selectedIconPath : item.iconPath}}"></image>
+      <image
+        wx:else
+        class='tab-bar-item-image'></image>
+      <image
+        class='center-circle'
+        wx:if="{{item.style === 'circle'}}"
+        src="{{selected === idx ? item.selectedIconPath : item.iconPath}}" ></image>
+    <view
+      style="font-size: {{fontSize}}rpx ;color: {{selected === idx ? selectedColor : color}}">{{item.text}}</view>
+    <view wx:if="{{item.redDot}}" class='reddot'></view>
+    <view wx:if="{{item.badge}}" class='badge'>{{item.badge}}</view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/custom-tab-bar/index.wxss b/miniprogram_npm/lin-ui/custom-tab-bar/index.wxss
new file mode 100644
index 0000000..b12c574
--- /dev/null
+++ b/miniprogram_npm/lin-ui/custom-tab-bar/index.wxss
@@ -0,0 +1 @@
+.tab-bar{position:relative;height:110rpx;width:750rpx;background:#fff;display:flex;flex-direction:row;background-position:center center;background-size:100% 100%;padding-bottom:env(safe-area-inset-bottom)}.tab-bar-bottom{position:fixed!important;bottom:0;left:0;right:0}.tab-bar-border{position:absolute;left:0;top:0;width:100%;display:flex;flex-direction:row;height:1rpx;background:#f6f6f6;box-shadow:0 -1px 3px 1px #f6f6f6}.tab-bar-item{position:relative;flex:1;text-align:center;display:flex;justify-content:center;align-items:center;flex-direction:column}.item-circle{width:120rpx;height:60rpx;background-color:#fff;border-radius:200rpx 200rpx 0 0;border-bottom:none;background:#fff;position:absolute;top:-40rpx;box-shadow:0 -1px 1px 0 #f6f6f6}.tab-bar-item-image{width:64rpx;height:64rpx}.tab-bar-item view{font-size:24rpx}.reddot{height:20rpx;width:20rpx;background:red;border-radius:50%;position:absolute;top:15rpx;margin-left:25rpx}.badge{height:32rpx;line-height:32rpx;padding:0rpx 6rpx;background:red;border-radius:16rpx;position:absolute;font-size:18rpx;color:#fff;top:10rpx;margin-left:25rpx;box-sizing:border-box}.center-circle{height:100rpx;width:100rpx;border-radius:50%;position:absolute;top:-30rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/dialog/index.js b/miniprogram_npm/lin-ui/dialog/index.js
new file mode 100644
index 0000000..d7a5a63
--- /dev/null
+++ b/miniprogram_npm/lin-ui/dialog/index.js
@@ -0,0 +1,187 @@
+import computeOffset from '../behaviors/computeOffset';
+import zIndex from '../behaviors/zIndex';
+import hover from '../behaviors/hover';
+
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [computeOffset,zIndex,hover],
+  externalClasses: ['l-class', 'l-title-class', 'l-content-class', 'l-confirm-class', 'l-cancel-class', 'l-bg-class'],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 类型 【 alert: 提示框， confrim: 确认框 】
+    type: {
+      type: String,
+      value: 'alert'
+    },
+    // 标题文字
+    title: {
+      type: String,
+      value: '提示'
+    },
+    // 是否显示标题
+    showTitle: {
+      type: Boolean,
+      value: true
+    },
+    // 内容
+    content: {
+      type: String,
+      value: ''
+    },
+    // 锁定
+    locked: {
+      type: Boolean,
+      value: true
+    },
+    // 确定按钮的文本
+    confirmText: {
+      type: String,
+      value: '确定'
+    },
+    // 确定按钮的颜色
+    confirmColor: {
+      type: String,
+      value: '#3683d6'
+    },
+    // 取消按钮的文本
+    cancelText: {
+      type: String,
+      value: '取消'
+    },
+    cancelColor: {
+      type: String,
+      value: '#45526b'
+    },
+    titleColor: String,
+    contentColor: {
+      type: String,
+      value: 'rgba(89,108,142,1)'
+    },
+    openApi: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    success: null,
+    fail: null,
+  },
+  /**
+   * 组件的初始数据
+   */
+  attached() {
+    if (this.data.openApi) {
+      this.initDialog();
+    }
+  },
+
+  pageLifetimes: {
+    show() {
+      if (this.data.openApi) {
+        this.initDialog();
+      }
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initDialog() {
+      wx.lin = wx.lin || {};
+      wx.lin.showDialog = (options) => {
+        const {
+          type = 'alert',
+          title = '提示',
+          showTitle = true,
+          content = '',
+          locked = true,
+          confirmText = '确定',
+          contentColor = 'rgba(89,108,142,1)',
+          cancelColor = '#45526b',
+          cancelText = '取消',
+          confirmColor = '#3683d6',
+          success = null,
+          fail = null,
+        } = options;
+        this.setData({
+          type,
+          title,
+          showTitle,
+          content,
+          locked,
+          confirmText,
+          cancelColor,
+          cancelText,
+          confirmColor,
+          contentColor,
+          show: true,
+          fail,
+          success
+        });
+        return this;
+      };
+    },
+
+    // 确定按钮
+    onConfirmTap() {
+      let detail = 'confirm';
+      let option = { bubbles: true, composed: true };
+
+      const {
+        success
+      } = this.data;
+      success && success({
+        confirm: true,
+        cancel: false,
+        errMsg: 'showDialog: success'
+      });
+      this.setData({
+        show: !this.data.show
+      });
+      this.triggerEvent('linconfirm', detail, option);
+
+    },
+
+    // 取消按钮
+    onCancelTap() {
+
+      let detail = 'cancel';
+      let option = { bubbles: true, composed: true };
+
+      const {
+        success
+      } = this.data;
+      success && success({
+        confirm: false,
+        cancel: true,
+        errMsg: 'showDialog: success'
+      });
+      this.setData({
+        show: !this.data.show
+      });
+
+      this.triggerEvent('lincancel', detail, option);
+    },
+
+    // 背景点击事件
+    onDialogTap() {
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+
+      if (this.data.locked !== true) {
+        this.setData({
+          show: !this.data.show
+        });
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/dialog/index.json b/miniprogram_npm/lin-ui/dialog/index.json
new file mode 100644
index 0000000..e72f4f5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/dialog/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-popup": "../popup/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/dialog/index.wxml b/miniprogram_npm/lin-ui/dialog/index.wxml
new file mode 100644
index 0000000..cc57891
--- /dev/null
+++ b/miniprogram_npm/lin-ui/dialog/index.wxml
@@ -0,0 +1,33 @@
+<!-- popup.wxml -->
+<l-popup
+    show="{{show}}"
+    animation="show"
+    contentAlign="center"
+    locked="{{true}}" 
+    bind:lintap="onDialogTap"
+    l-bg-class="l-bg-class"
+    z-index="{{zIndex}}"
+>
+    <view class="dialog-container l-class" style="margin-bottom:{{distance}}px">
+        <view class="dialog-title l-title-class" style="color:{{titleColor}}" wx:if="{{showTitle}}">{{title}}</view>
+        <view class="dialog-content l-content-class" style="color:{{contentColor}}">
+            <slot />
+            {{content}}
+        </view>
+        <view class="dialog-btn-group">
+            <view
+                class="dialog-btn-cancel l-cancel-class"
+                style="color: {{cancelColor}}"
+                catchtap="onCancelTap"
+                hover-class="{{isHover?'group-hover':''}}"
+                wx:if="{{type=='confirm'}}"
+                >{{cancelText}}</view>
+            <view
+                class="dialog-btn-confirm l-confirm-class"
+                style="color: {{confirmColor}}"
+                hover-class="{{isHover?'group-hover':''}}"
+                catchtap="onConfirmTap"
+            >{{confirmText}}</view>
+        </view>
+    </view>
+</l-popup>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/dialog/index.wxss b/miniprogram_npm/lin-ui/dialog/index.wxss
new file mode 100644
index 0000000..fb6a7a5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/dialog/index.wxss
@@ -0,0 +1 @@
+.dialog-container{display:flex;flex-direction:column;align-items:center;width:520rpx;background:#fff;border-radius:12rpx}.dialog-title{font-size:32rpx;font-family:PingFangSC-Regular;color:#45526b;line-height:44rpx;margin-top:30rpx;padding:0 25rpx;text-align:center}.dialog-content{font-size:28rpx;font-family:PingFangSC-Regular;line-height:40rpx;margin-top:30rpx;margin-bottom:30rpx;display:flex;flex-direction:column;align-items:center;padding:0 25rpx}.dialog-btn-group{width:100%;height:80rpx;display:flex;flex-direction:row;justify-content:space-between;align-items:center;border-top:2rpx solid #f3f3f3}.dialog-btn-cancel{font-size:28rpx;height:80rpx;width:259rpx;border-right:2rpx solid #f3f3f3;display:flex;flex-direction:row;align-items:center;justify-content:center}.dialog-btn-confirm{font-size:28rpx;flex:1;color:#3963bc;height:80rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.active{color:#3683d6}.leave{color:#45526b}.group-hover{opacity:.8}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/error-tip/index.js b/miniprogram_npm/lin-ui/error-tip/index.js
new file mode 100644
index 0000000..85db9da
--- /dev/null
+++ b/miniprogram_npm/lin-ui/error-tip/index.js
@@ -0,0 +1,24 @@
+Component({
+  /**
+     * 组件的属性列表
+     */
+  externalClasses: ['l-error-text', 'l-error-text-class'],
+
+  properties: {
+    errorText:String
+  },
+  
+  /**
+     * 组件的初始数据
+     */
+  data: {
+  
+  },
+  
+  /**
+     * 组件的方法列表
+     */
+  methods: {
+  
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/error-tip/index.json b/miniprogram_npm/lin-ui/error-tip/index.json
new file mode 100644
index 0000000..a1d9113
--- /dev/null
+++ b/miniprogram_npm/lin-ui/error-tip/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+     
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/error-tip/index.wxml b/miniprogram_npm/lin-ui/error-tip/index.wxml
new file mode 100644
index 0000000..0ce9d31
--- /dev/null
+++ b/miniprogram_npm/lin-ui/error-tip/index.wxml
@@ -0,0 +1 @@
+<view class="error-text l-error-text l-error-text-class" wx:if="{{errorText}}">{{errorText}}</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/error-tip/index.wxss b/miniprogram_npm/lin-ui/error-tip/index.wxss
new file mode 100644
index 0000000..38f29e3
--- /dev/null
+++ b/miniprogram_npm/lin-ui/error-tip/index.wxss
@@ -0,0 +1 @@
+.error-text{font-size:22rpx;color:#f4516c;margin-right:20rpx;line-height:2}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/filter/array.wxs b/miniprogram_npm/lin-ui/filter/array.wxs
new file mode 100644
index 0000000..745c6fd
--- /dev/null
+++ b/miniprogram_npm/lin-ui/filter/array.wxs
@@ -0,0 +1,174 @@
+var is = require("./is.wxs");
+
+function _isArray(targetArray, funName) {
+    if (!is.isArray(targetArray)) {
+        console.log('[WXS:Array]' + funName + ',targetArray must be array');
+        return false;
+    };
+    return true;
+}
+
+/**
+ * concat 合并数组
+ * @param {Array} targetArray 目标数组
+ */
+function concat() {
+    var length = arguments.length;
+    var result = [];
+    var validatorArray = _isArray(arguments[0], 'concat');
+    if (validatorArray) {
+        for (var i = 1; i < length; i++) {
+            result = arguments[0].concat(arguments[i])
+        }
+        return result
+    }
+}
+
+/**
+ * join 数组转成字符串
+ * @param {Array} targetArray 目标数组
+ * @param {String} spearator 连接符
+ */
+function join(targetArray, spearator) {
+    var validatorArray = _isArray(arguments[0], 'concat');
+    if (validatorArray) return targetArray.join(spearator);
+}
+
+/**
+ * pop 移除最后一个数组元素，并返回移除后的数组和溢出的值
+ * @param {Array} targetArray 目标数组
+ */
+function pop(targetArray) {
+    var validatorArray = _isArray(arguments[0], 'pop');
+    if (validatorArray) {
+        var result = targetArray.pop();
+        return {
+            newArray: targetArray,
+            item: result
+        }
+    }
+}
+
+/**
+ * shift 移除第一个数组元素，并返回移除后的数组和溢出的值
+ * @param {Array} targetArray 目标数组
+ */
+function shift(targetArray) {
+    var validatorArray = _isArray(arguments[0], 'shift');
+    if (validatorArray) {
+        var result = targetArray.shift();
+        return {
+            newArray: targetArray,
+            item: result
+        }
+    }
+}
+
+/**
+ * push 从后追加数组元素，并返回新的数组
+ * @param {Array} targetArray 目标数组
+ */
+function push() {
+    var length = arguments.length;
+    var validatorArray = _isArray(arguments[0], 'push');
+    if (validatorArray) {
+        for (var i = 1; i < length; i++) {
+            arguments[0].push(arguments[i])
+        }
+        return arguments[0]
+    }
+}
+
+/**
+ * unshift 从前追加数组元素，并返回新的数组
+ * @param {Array} targetArray 目标数组
+ */
+function unshift(targetArray) {
+    var length = arguments.length;
+    var validatorArray = _isArray(arguments[0], 'unshift');
+    if (validatorArray) {
+        for (var i = length - 1; i > 0; i--) {
+            arguments[0].unshift(arguments[i])
+        }
+        return arguments[0]
+    }
+}
+/**
+ * reverse 倒序
+ * @param {Array} targetArray 目标数组
+ */
+function reverse(targetArray) {
+    var validatorArray = _isArray(targetArray, 'reverse');
+    if (validatorArray) return targetArray.reverse();
+}
+
+/**
+ * slice 截取数组
+ * @param {Array} targetArray 目标数组
+ * @param {Number} beginSlice 从该索引（以 0 为基数）处开始提取目标数组中的元素
+ * @param {Number} endSlice 在该索引（以 0 为基数）处结束提取数组元素
+ */
+function slice(targetArray, beginSlice, endSlice) {
+    var validatorArray = _isArray(targetArray, 'slice');
+    if (validatorArray) return targetArray.slice(beginSlice, endSlice);
+}
+
+/**
+ * splice 截取数组
+ * @param {Array} targetArray 目标数组
+ * @param {Number} start
+ * @param {Number} deleteCount 
+ */
+function splice(targetArray, start, deleteCount) {
+    var validatorArray = _isArray(targetArray, 'splice');
+    if (validatorArray) {
+        if (arguments.length < 4) {
+            targetArray.splice(start, deleteCount);
+        } else {
+            targetArray.splice(start, deleteCount, arguments[3]);
+            var length = arguments.length;
+            for (var i = 4; i < length; i++) {
+                arguments[i] && targetArray.splice(++start, 0, arguments[i])
+            }
+        }
+        return targetArray
+    }
+}
+
+/**
+ * indexOf 查找数组
+ * @param {Array} targetArray 目标数组
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置
+ * 
+ */
+function indexOf(targetArray, searchValue, fromIndex = 0) {
+    var validatorArray = _isArray(targetArray, 'indexOf');
+    if (validatorArray) return targetArray.indexOf(searchValue, fromIndex);
+}
+
+/**
+ * lastIndexOf 查找字符串最后出现的位置
+ * @param {Array} targetArray 目标数组
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置，str.length
+ * 
+ */
+function lastIndexOf(targetArray, searchValue, fromIndex = 0) {
+    var validatorArray = _isArray(targetArray, 'lastIndexOf');
+    if (validatorArray) return targetArray.lastIndexOf(searchValue, fromIndex || targetArray.length);
+}
+
+module.exports = {
+    concat: concat,
+    join: join,
+    pop: pop,
+    shift: shift,
+    push: push,
+    unshift: unshift,
+    reverse: reverse,
+    slice: slice,
+    splice: splice,
+    indexOf:indexOf,
+    lastIndexOf:lastIndexOf
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/filter/classnames.wxs b/miniprogram_npm/lin-ui/filter/classnames.wxs
new file mode 100644
index 0000000..a83cbe0
--- /dev/null
+++ b/miniprogram_npm/lin-ui/filter/classnames.wxs
@@ -0,0 +1,33 @@
+var is = require('./is.wxs');
+var object = require('./object.wxs');
+
+function apply(fun, args) {
+  return args.map(function (item) {
+    return fun(item)
+  })
+}
+
+function classnames() {
+  var classes = [];
+  for (var i = 0; i < arguments.length; i++) {
+    var arg = arguments[i];
+    if (!arg) continue;
+    if (is.isString(arg) || is.isNumber(arg)) {
+      classes.push(arg);
+    } else if (is.isArray(arg) && arg.length) {
+      var inner = apply(classnames, arg);
+      if (inner) {
+        classes.push(inner);
+      }
+    } else if (is.isObject(arg)) {
+      object.keys(arg).forEach(function (key) {
+        if (arg[key]) {
+          classes.push(key);
+        }
+      })
+    }
+  }
+  return classes.join(' ');
+}
+
+module.exports = classnames;
diff --git a/miniprogram_npm/lin-ui/filter/is.wxs b/miniprogram_npm/lin-ui/filter/is.wxs
new file mode 100644
index 0000000..9841e59
--- /dev/null
+++ b/miniprogram_npm/lin-ui/filter/is.wxs
@@ -0,0 +1,70 @@
+var TYPE = {
+    NULL: 'null',
+    UNDEFINED: 'undefined',
+    NUMBER: 'Number',
+    STRING: 'String',
+    BOOLEAN: 'Boolean',
+    OBJECT: 'Object',
+    FUNCTION: 'Function',
+    ARRAY: 'Array',
+    DATE: 'Date',
+    REGEXP: 'RegExp',
+}
+
+function isUndefined(val) {
+    return TYPE.UNDEFINED === typeof val;
+}
+
+function isNull(val) {
+    return val === TYPE.NULL;
+}
+
+function _jadgeFun(val, type) {
+    if (isUndefined(val) || isNull(val)) return false;
+    return TYPE[type] === val.constructor;
+}
+
+function isNumber(val) {
+    return _jadgeFun(val, 'NUMBER');
+}
+
+function isString(val) {
+    return _jadgeFun(val, 'STRING');
+}
+
+function isBoolean(val) {
+    return _jadgeFun(val, 'BOOLEAN');
+}
+
+function isObject(val) {
+    return _jadgeFun(val, 'OBJECT');
+}
+
+function isFunction(val) {
+    return _jadgeFun(val, 'FUNCTION');
+}
+
+function isArray(val) {
+    return _jadgeFun(val, 'ARRAY');
+}
+
+function isDate(val) {
+    return _jadgeFun(val, 'DATE');
+}
+
+function isRegExp(val) {
+    return _jadgeFun(val, 'REGEXP');
+}
+
+module.exports = {
+    isNull: isNull,
+    isUndefined: isUndefined,
+    isNumber: isNumber,
+    isString: isString,
+    isBoolean: isBoolean,
+    isObject: isObject,
+    isFunction: isFunction,
+    isArray: isArray,
+    isDate: isDate,
+    isRegExp: isRegExp
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/filter/object.wxs b/miniprogram_npm/lin-ui/filter/object.wxs
new file mode 100644
index 0000000..244fe4f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/filter/object.wxs
@@ -0,0 +1,12 @@
+var REGEXP = getRegExp('{|}|"', 'g');
+
+function keys(obj) {
+  return JSON.stringify(obj)
+    .replace(REGEXP, '')
+    .split(',')
+    .map(function(item) {
+      return item.split(':')[0];
+    });
+}
+
+module.exports.keys = keys;
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/filter/string.wxs b/miniprogram_npm/lin-ui/filter/string.wxs
new file mode 100644
index 0000000..e6ce0dc
--- /dev/null
+++ b/miniprogram_npm/lin-ui/filter/string.wxs
@@ -0,0 +1,178 @@
+var is = require("./is.wxs");
+
+function _isString(targetString, funName) {
+    if (!is.isString(targetString)) {
+        console.log('[WXS:String]' + funName + ',targetString must be string');
+        return false;
+    };
+    return true;
+}
+/**
+ * toString 返回指定对象的字符串形式
+ * @param {String} targetString 目标字符串
+ */
+
+function toString(targetString) {
+    return targetString && targetString.toString();
+}
+
+/**
+ * valueOf 返回指定对象的value
+ * @param {String} targetString 目标字符串
+ */
+
+function valueOf(targetString) {
+    return targetString && targetString.valueOf();
+}
+
+/**
+ * charAt 一个字符串中返回指定的字符。
+ * @param {String} targetString 目标字符串
+ * @param {Number} index 返回指定字符的位置
+ * 
+ */
+function charAt(targetString, index = 0) {
+    var validatorString = _isString(targetString, 'charAt');
+    if (validatorString) return targetString.charAt(index);
+}
+
+/**
+ * charCodeAt 返回0到65535之间的整数，表示给定索引处的UTF-16代码单元
+ * @param {String} targetString 目标字符串
+ * @param {Number} index 返回指定字符的位置
+ * 
+ */
+function charCodeAt(targetString, index = 0) {
+    var validatorString = _isString(targetString, 'charCodeAt');
+    if (validatorString) return targetString.charCodeAt(index);
+}
+
+/**
+ * indexOf 查找字符串
+ * @param {String} targetString 目标字符串
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置
+ * 
+ */
+function indexOf(targetString, searchValue, fromIndex = 0) {
+    var validatorString = _isString(targetString, 'indexOf');
+    if (validatorString) return targetString.indexOf(searchValue, fromIndex);
+}
+
+/**
+ * lastIndexOf 查找字符串最后出现的位置
+ * @param {String} targetString 目标字符串
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置，str.length
+ * 
+ */
+function lastIndexOf(targetString, searchValue, fromIndex = 0) {
+    var validatorString = _isString(targetString, 'lastIndexOf');
+    if (validatorString) return targetString.lastIndexOf(searchValue, fromIndex || targetString.length);
+}
+
+/**
+ * slice 取一个字符串的一部分，并返回一新的字符串
+ * @param {String} targetString 目标字符串
+ * @param {Number} beginSlice 从该索引（以 0 为基数）处开始提取原字符串中的字符
+ * @param {Number} endSlice 在该索引（以 0 为基数）处结束提取字符
+ * 
+ */
+function slice(targetString, beginSlice, endSlice) {
+    var validatorString = _isString(targetString, 'slice');
+    if (validatorString) return targetString.slice(beginSlice, endSlice || targetString.length);
+}
+
+/**
+ * split 分割字符串
+ * @param {String} targetString 目标字符串
+ * @param {String} separator 从该索引（以 0 为基数）处开始提取原字符串中的字符
+ * @param {Number} limit 
+ * 
+ */
+function split(targetString, separator, limit) {
+    var validatorString = _isString(targetString, 'split');
+    if (validatorString) return targetString.split(separator, limit);
+}
+
+/**
+ * substring 取一个字符串的一部分，并返回一新的字符串
+ * @param {String} targetString 目标字符串
+ * @param {Number} indexStart 需要截取的第一个字符的索引，该字符作为返回的字符串的首字母。
+ * @param {Number} indexEnd 一个 0 到字符串长度之间的整数，以该数字为索引的字符不包含在截取的字符串内。
+ * 
+ */
+function substring(targetString, indexStart, indexEnd) {
+    var validatorString = _isString(targetString, 'substring');
+    if (validatorString) return targetString.substring(indexStart, indexEnd);
+}
+
+/**
+ * toLowerCase 字符串值转为小写形式
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toLowerCase(targetString) {
+    var validatorString = _isString(targetString, 'toLowerCase');
+    if (validatorString) return targetString.toLowerCase();
+}
+
+/**
+ * toLocaleLowerCase 字符串值转为小写形式
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toLocaleLowerCase(targetString) {
+    var validatorString = _isString(targetString, 'toLocaleLowerCase');
+    if (validatorString) return targetString.toLocaleLowerCase();
+}
+
+/**
+ * toUpperCase 字符串值转为大写形式
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toUpperCase(targetString) {
+    var validatorString = _isString(targetString, 'toUpperCase');
+    if (validatorString) return targetString.toUpperCase();
+}
+
+/**
+ * toLocaleUpperCase 根据任何特定于语言环境的案例映射，返回调用字符串值转换为大写的值。
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toLocaleUpperCase(targetString) {
+    var validatorString = _isString(targetString, 'toLocaleUpperCase');
+    if (validatorString) return targetString.toLocaleUpperCase();
+}
+
+/**
+ * trim 从一个字符串的两端删除空白字符
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function trim(targetString) {
+    var validatorString = _isString(targetString, 'trim');
+    if (validatorString) return targetString.trim();
+}
+
+
+
+
+module.exports = {
+    indexOf: indexOf,
+    charAt: charAt,
+    charCodeAt: charCodeAt,
+    toString: toString,
+    valueOf: valueOf,
+    lastIndexOf: lastIndexOf,
+    slice: slice,
+    split: split,
+    substring: substring,
+    toLowerCase: toLowerCase,
+    toLocaleLowerCase: toLocaleLowerCase,
+    toUpperCase: toUpperCase,
+    toLocaleUpperCase: toLocaleUpperCase,
+    trim: trim
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/filter/zero-padding.wxs b/miniprogram_npm/lin-ui/filter/zero-padding.wxs
new file mode 100644
index 0000000..a6b4eb0
--- /dev/null
+++ b/miniprogram_npm/lin-ui/filter/zero-padding.wxs
@@ -0,0 +1,8 @@
+function zeroPadding(num, length = 2) {
+    if((num + "").length >= length) {
+        return num;
+    }
+    return zeroPadding("0" + num, length)
+}
+
+module.exports = zeroPadding;
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/grid-item/index.js b/miniprogram_npm/lin-ui/grid-item/index.js
new file mode 100644
index 0000000..031c0e6
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid-item/index.js
@@ -0,0 +1,46 @@
+Component({
+  relations: {
+    '../grid/index': {
+      type: 'parent'
+    },
+  },
+  externalClasses: ['l-grid-item', 'l-grid-item-class'],
+  properties: {
+    key: String,
+    cell:{
+      type:Object,
+      value:{}
+    },
+  },
+  data: {
+    index:0,
+  },
+  attached() {
+
+  },
+  observers: {
+    'key': function() {
+      const parent = this.getRelationNodes('../grid/index')[0];
+      if (parent) {
+        parent.setData({
+          gridItems: [],
+          childNum: 0
+        });
+        parent.initGrids();
+      }
+    }
+  },
+
+  lifetimes: {
+    show() {
+
+    },
+  },
+  methods: {
+    tapGridItem() {
+      this.triggerEvent('linitemtap', {
+        ...this.data
+      }, { bubbles: true, composed: true });
+    },
+  }
+});
diff --git a/miniprogram_npm/lin-ui/grid-item/index.json b/miniprogram_npm/lin-ui/grid-item/index.json
new file mode 100644
index 0000000..7a47d16
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid-item/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+  
+    }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/grid-item/index.wxml b/miniprogram_npm/lin-ui/grid-item/index.wxml
new file mode 100644
index 0000000..49a59ea
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid-item/index.wxml
@@ -0,0 +1,3 @@
+<view class="l-grid-item l-grid-item-class grid-item" bindtap="tapGridItem">
+    <slot></slot>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/grid-item/index.wxss b/miniprogram_npm/lin-ui/grid-item/index.wxss
new file mode 100644
index 0000000..f7b1273
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid-item/index.wxss
@@ -0,0 +1 @@
+.grid-item{max-width:initial;max-height:initial;display:flex;justify-content:center;align-items:center;flex-direction:column}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/grid/index.js b/miniprogram_npm/lin-ui/grid/index.js
new file mode 100644
index 0000000..872c6cd
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid/index.js
@@ -0,0 +1,85 @@
+import hover from '../behaviors/hover';
+
+Component({
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  behaviors: [hover],
+  relations: {
+    '../grid-item/index': {
+      type: 'child',
+      linked() {
+        this.initGrids();
+
+      },
+      unlinked() {
+        this.initGrids();
+      }
+    },
+
+  },
+  externalClasses: ['l-class', 'l-class-grid', 'l-grid-class'],
+  properties: {
+    rowNum: {
+      type: String,
+      value: 3,
+    },
+    showBorder: Boolean,
+    showColBorder: Boolean,
+    showRowBorder: Boolean,
+  },
+  data: {
+    gridItems: [],
+    childNum: 0,
+    currentIndex: -1,
+    currentCell: -1,
+  },
+  ready() {
+    this.initGrids();
+  },
+
+  lifetimes: {
+    show() {
+
+    },
+  },
+  methods: {
+    initGrids() {
+      let items = this.getRelationNodes('../grid-item/index');
+      if (this.data.childNum === items.length) return;
+      const gridItems = items.map((item, index) => {
+        item.setData({
+          index,
+        });
+        return {
+          index:index,
+          key: item.data.key,
+          cell: item.data.cell
+        };
+      });
+      this.setData({
+        gridItems: gridItems,
+        childNum: items.length
+      });
+    },
+    tapGridItem(e) {
+      const { gridIndex } = e.target.dataset;
+      this.setData({
+        currentIndex: gridIndex,
+        currentCell: this.data.gridItems[gridIndex].cell
+      });
+    },
+
+    tapGrid() {
+      this.triggerEvent('lintap', {
+        index: this.data.currentIndex,
+        cell: this.data.currentCell
+      }, { bubbles: true, composed: true });
+
+      this.setData({
+        currentIndex: -1,
+        currentCell: -1
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/grid/index.json b/miniprogram_npm/lin-ui/grid/index.json
new file mode 100644
index 0000000..93860ea
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+      "l-grid-item":"../grid-item/index"
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/grid/index.wxml b/miniprogram_npm/lin-ui/grid/index.wxml
new file mode 100644
index 0000000..3adb13f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid/index.wxml
@@ -0,0 +1,11 @@
+<view class="l-grid l-class" bindtap="tapGrid">
+    <view bindtap="tapGridItem" 
+          hover-class="{{isHover?'l-gird-hover':''}}" 
+          hover-start-time="20"
+          hover-stay-time="50" 
+          data-grid-index="{{item.index}}" 
+          class="l-grid-item l-class-grid l-grid-class {{index%rowNum !== rowNum-1 &&(showBorder||showColBorder) ? 'side-grid':''}} {{(index<gridItems.length-(gridItems.length%rowNum||rowNum)) &&(showBorder||showRowBorder)? 'center-grid':''}}" wx:for="{{gridItems}}" wx:key="{{item.key}}" 
+          style="min-width:{{100/rowNum}}%;">
+        <slot name="{{item.key}}"></slot>
+    </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/grid/index.wxss b/miniprogram_npm/lin-ui/grid/index.wxss
new file mode 100644
index 0000000..56f29f5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/grid/index.wxss
@@ -0,0 +1 @@
+.l-grid{display:flex;width:inherit;flex-wrap:wrap}.l-grid .l-grid-item{display:flex;justify-content:center;align-items:center;flex-direction:column;text-align:center;box-sizing:border-box;border-style:solid;border-color:#ededed;border-width:0}.l-grid .center-grid{border-bottom-width:2rpx}.l-grid .side-grid{border-right-width:2rpx}.l-gird-hover{opacity:.8}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/icon/index.js b/miniprogram_npm/lin-ui/icon/index.js
new file mode 100644
index 0000000..027b2fa
--- /dev/null
+++ b/miniprogram_npm/lin-ui/icon/index.js
@@ -0,0 +1,26 @@
+Component({
+  externalClasses: ['l-class', 'l-class-self', 'l-self-class'],
+  options: {
+    addGlobalClass: true
+  },
+  properties: {
+    name: String,
+    color: String,
+    size: String,
+  },
+
+  data: {
+    default: {
+      size: 40,
+      color: '#45526B',
+    },
+  },
+
+  ready: function () {
+    if (!this.data.name) {
+      console.error('请传入Icon组件的name属性');
+    }
+  },
+  methods: {
+  }
+});
diff --git a/miniprogram_npm/lin-ui/icon/index.json b/miniprogram_npm/lin-ui/icon/index.json
new file mode 100644
index 0000000..8bc8f18
--- /dev/null
+++ b/miniprogram_npm/lin-ui/icon/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+   
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/icon/index.wxml b/miniprogram_npm/lin-ui/icon/index.wxml
new file mode 100644
index 0000000..5140cde
--- /dev/null
+++ b/miniprogram_npm/lin-ui/icon/index.wxml
@@ -0,0 +1 @@
+<view class="l-class l-class-self l-self-class l-icon {{ name === '' ? '' : 'l-icon-' +  name }}" style="{{ size ? 'font-size:'+size+'rpx;':''}}{{ color ? 'color:' + color+';' : '' }}" />
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/icon/index.wxss b/miniprogram_npm/lin-ui/icon/index.wxss
new file mode 100644
index 0000000..5bb74c1
--- /dev/null
+++ b/miniprogram_npm/lin-ui/icon/index.wxss
@@ -0,0 +1 @@
+.l-icon{font-family:l-iconfont;font-size:40rpx;color:#3963bc;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@font-face{font-family:l-iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,') format('woff2')}.l-icon-error:before{content:"\e605"}.l-icon-duihao:before{content:"\e63c"}.l-icon-video:before{content:"\e609"}.l-icon-fork:before{content:"\e632"}.l-icon-address:before{content:"\e606"}.l-icon-backward:before{content:"\e607"}.l-icon-add:before{content:"\e608"}.l-icon-cart:before{content:"\e60a"}.l-icon-close:before{content:"\e60b"}.l-icon-checked:before{content:"\e60c"}.l-icon-comment:before{content:"\e60d"}.l-icon-down:before{content:"\e60e"}.l-icon-customer-service:before{content:"\e60f"}.l-icon-delete:before{content:"\e610"}.l-icon-edit:before{content:"\e611"}.l-icon-download:before{content:"\e612"}.l-icon-ellipsis:before{content:"\e613"}.l-icon-favor:before{content:"\e614"}.l-icon-favor-fill:before{content:"\e631"}.l-icon-forward:before{content:"\e615"}.l-icon-help:before{content:"\e616"}.l-icon-eye:before{content:"\e617"}.l-icon-history:before{content:"\e618"}.l-icon-left:before{content:"\e619"}.l-icon-like:before{content:"\e61a"}.l-icon-notification:before{content:"\e61b"}.l-icon-order:before{content:"\e61c"}.l-icon-loading:before{content:"\e61d"}.l-icon-password:before{content:"\e61e"}.l-icon-more:before{content:"\e61f"}.l-icon-picture:before{content:"\e620"}.l-icon-pull-down:before{content:"\e621"}.l-icon-right:before{content:"\e622"}.l-icon-research:before{content:"\e623"}.l-icon-phone:before{content:"\e624"}.l-icon-setting:before{content:"\e625"}.l-icon-scan:before{content:"\e626"}.l-icon-share:before{content:"\e627"}.l-icon-success:before{content:"\e628"}.l-icon-soud:before{content:"\e629"}.l-icon-time:before{content:"\e62a"}.l-icon-warning:before{content:"\e62b"}.l-icon-to-top:before{content:"\e62c"}.l-icon-up:before{content:"\e62d"}.l-icon-WiFi:before{content:"\e62e"}.l-icon-user:before{content:"\e62f"}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/image-picker/image/add.png b/miniprogram_npm/lin-ui/image-picker/image/add.png
new file mode 100644
index 0000000..4253bd3
Binary files /dev/null and b/miniprogram_npm/lin-ui/image-picker/image/add.png differ
diff --git a/miniprogram_npm/lin-ui/image-picker/index.js b/miniprogram_npm/lin-ui/image-picker/index.js
new file mode 100644
index 0000000..63d22f5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/image-picker/index.js
@@ -0,0 +1,254 @@
+// mask
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-class', 'l-item-class'],
+  behaviors: ['wx://form-field'],
+  properties: {
+    urls: {
+      type: Array,
+      value: []
+    },
+    // 最多可以选择的图片张数
+    count: {
+      type: [String, Number],
+      value: 9
+    },
+    // 清除urls
+    clear: {
+      type: Boolean,
+      value: false,
+      observer: function (newVal) {
+        if (newVal) {
+          this.handleClear();
+        }
+      }
+    },
+    // 每行可显示的个数
+    size: {
+      type: [String, Number],
+      value: 3
+    },
+    // 所选的图片的尺寸 ['original', 'compressed']
+    sizeType: {
+      type: String,
+      value: 'original',
+    },
+    // 图片裁剪、缩放的模式
+    mode: {
+      type: String,
+      value: 'aspectFit', // 参考微信小程序 image 组件的mode属性列表
+    },
+    // 设置是否传入slot
+    custom: {
+      type: Boolean,
+      value: false
+    },
+    // 是否可以预览
+    preview: {
+      type: Boolean,
+      value: true
+    },
+    // 所选图片最大限制，单位字节
+    maxImageSize: {
+      type: Number,
+      value: 10000000,
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    showBtn: true,
+    tempFilePath: '',
+  },
+
+  lifetimes: {
+    attached: function () {
+      // 在组件实例进入页面节点树时执行
+      const newOrOld = this.judgeNewOrOld();
+      this.setData({
+        newOrOld
+      });
+      if (newOrOld == 'old') {
+        console.warn('image-picker组件已经升级，建议使用最新版本，当前用法会在后续版本中暂停支持');
+      }
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    handleClear() {
+      let urls = this.data.urls;
+      this.setData({
+        urls: [],
+        clear: false,
+        showBtn: true
+      });
+      let info = {
+        all: urls,
+        current: urls,
+      };
+
+      let option = {};
+      this.triggerEvent('linclear', info, option);
+    },
+
+    // 预览 preview
+    onPreviewTap(e) {
+      const index = e.currentTarget.dataset.index;
+      const urls = this.data.urls;
+      let tempFilePath = '';
+      let previewImageList = [];
+      const newOrOld = this.data.newOrOld;
+
+      if (newOrOld == 'old') {
+        tempFilePath = this.data.urls[index];
+        previewImageList = this.data.urls;
+
+      } else {
+        tempFilePath = this.data.urls[index].url;
+        for (let i = 0; i < urls.length; i++) {
+          previewImageList.push(urls[i].url);
+        }
+      }
+
+
+      let detail = {
+        index, // 下标
+        current: urls[index], // 当前显示图片的http链接
+        all: urls // 需要预览的图片http链接列表
+      };
+      let option = {};
+      if (this.data.preview === true) {
+        wx.previewImage({
+          current: tempFilePath, // 当前显示图片的http链接
+          urls: previewImageList // 需要预览的图片http链接列表
+        });
+      }
+      this.triggerEvent('linpreview', detail, option);
+    },
+
+
+    // 增加 add
+    onAddTap() {
+      const that = this;
+      const count = this.data.count - this.data.urls.length;
+      if (count === 0) {
+        return;
+      }
+      const newOrOld = this.data.newOrOld;
+      wx.chooseImage({
+        count,
+        sizeType: this.data.sizeType,
+        sourceType: ['album', 'camera'],
+        success(res) {
+          // tempFilePath可以作为img标签的src属性显示图片
+          let tempFilePath = [];
+          if (newOrOld == 'old') {
+            tempFilePath = res.tempFilePaths;
+          } else {
+            for (let i = 0; i < res.tempFilePaths.length; i++) {
+              tempFilePath.push({
+                url: res.tempFilePaths[i],
+                // key: null
+                imageSize: res.tempFiles[i].size
+              });
+              if (res.tempFiles[i].size > that.data.maxImageSize) {
+                tempFilePath[i].overSize = true;
+              } else {
+                tempFilePath[i].overSize = false;
+              }
+            }
+          }
+          const newtempFilePaths = that.data.urls.concat(tempFilePath);
+          // 判断是否还能继续添加图片 
+          if (newtempFilePaths.length === parseInt(that.data.count)) {
+            that.setData({
+              showBtn: false
+            });
+          }
+          that.setData({
+            urls: newtempFilePaths,
+            value: newtempFilePaths,
+            tempFilePath
+          });
+          let detail = {
+            current: tempFilePath,
+            all: newtempFilePaths
+          };
+          let option = {};
+
+          that.triggerEvent('linchange', detail, option);
+          that.triggerEvent('linpush', detail, option);
+
+          // 超过大小的image集合
+          let overSizeList = [];
+          for (let n = 0; n < newtempFilePaths.length; n++) {
+            if (newtempFilePaths[n].overSize) {
+              overSizeList.push(newtempFilePaths[n]);
+            }
+          }
+
+          if (overSizeList.length > 0) {
+            let detail = {
+              current: tempFilePath,
+              all: newtempFilePaths,
+              overSizeList: overSizeList,
+            };
+            that.triggerEvent('linoversize', detail, option);
+          }
+        }
+      });
+
+    },
+
+    // 删除 remove
+    onDelTap(e) {
+      const index = e.currentTarget.dataset.index;
+      const urls = this.data.urls;
+      const tempFilePath = urls[index];
+      const tempFilePaths = this.handleSplice(urls, tempFilePath);
+      // 判断是否还能继续添加图片 
+      if (tempFilePaths.length < parseInt(this.data.count)) {
+        this.setData({
+          showBtn: true
+        });
+      }
+      this.setData({
+        tempFilePath,
+        urls: tempFilePaths,
+        value: tempFilePaths,
+      });
+      let detail = {
+        index,
+        current: tempFilePath,
+        all: tempFilePaths
+      };
+      let option = {};
+
+      this.triggerEvent('linremove', detail, option);
+
+    },
+    handleSplice(arr, current) {
+      const newArr = arr.filter(item => item !== current);
+      return newArr;
+    },
+
+    judgeNewOrOld: function () {
+      const urls = this.data.urls;
+      if (urls.length != 0) {
+        if (typeof (urls[0]) != 'object') {
+          return 'old';
+        }
+        return 'new';
+      }
+      return 'new';
+    }
+
+  },
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/image-picker/index.json b/miniprogram_npm/lin-ui/image-picker/index.json
new file mode 100644
index 0000000..af2d0be
--- /dev/null
+++ b/miniprogram_npm/lin-ui/image-picker/index.json
@@ -0,0 +1,8 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-grid-item": "../grid-item/index",
+    "l-grid": "../grid/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/image-picker/index.wxml b/miniprogram_npm/lin-ui/image-picker/index.wxml
new file mode 100644
index 0000000..d7c9b22
--- /dev/null
+++ b/miniprogram_npm/lin-ui/image-picker/index.wxml
@@ -0,0 +1,21 @@
+<!-- image-picker.wxml -->
+<l-grid row-num="{{ size }}" l-class="l-class">
+  <l-grid-item wx:for="{{ urls }}" wx:key="{{ index }}" key="{{ index }}" slot="{{ index }}">
+    <view class="item l-item-class" catchtap="onPreviewTap" data-index="{{ index }}">
+      <view class="close" data-index="{{ index }}" catchtap="onDelTap">
+        <l-icon name="close" color="#fff" size="22" l-self-class="close-icon" />
+      </view>
+      <image class="{{size == 3? 'img': 'min-img'}}" mode="{{ mode }}" src="{{newOrOld=='old'? item:item.url }}" />
+    </view>
+  </l-grid-item>
+  <!-- add 按钮 -->
+  <l-grid-item wx:if="{{ showBtn }}">
+    <!-- 自定义图片选择按钮 -->
+    <view class="item l-item-class {{size == 3? 'img': 'min-img'}}" catchtap="onAddTap" wx:if="{{ custom }}">
+      <slot></slot>
+    </view>
+    <view class="item l-item-class {{size == 3? 'img': 'min-img'}}" catchtap="onAddTap" wx:else>
+      <image class="add-icon" src="./image/add.png" />
+    </view>
+  </l-grid-item>
+</l-grid>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/image-picker/index.wxss b/miniprogram_npm/lin-ui/image-picker/index.wxss
new file mode 100644
index 0000000..a4b4d8a
--- /dev/null
+++ b/miniprogram_npm/lin-ui/image-picker/index.wxss
@@ -0,0 +1 @@
+.item{position:relative}.close{position:absolute;right:10rpx;top:10rpx;height:40rpx;width:40rpx;border-radius:50%;background:rgba(0,0,0,.4);display:flex;flex-direction:row;align-items:center;justify-content:center;box-sizing:border-box;z-index:99}.add{height:220rpx;width:220rpx;border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.add-icon{height:100rpx;width:100rpx}.img{height:220rpx;width:220rpx;margin-bottom:10rpx;border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.min-img{height:160rpx;width:160rpx;margin-bottom:10rpx;border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.flex{border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/input/index.js b/miniprogram_npm/lin-ui/input/index.js
new file mode 100644
index 0000000..e5f21b3
--- /dev/null
+++ b/miniprogram_npm/lin-ui/input/index.js
@@ -0,0 +1,161 @@
+// input/input.js
+import rules from '../behaviors/rules';
+
+Component({
+  /**
+   * 组件的属性列表
+   */
+  options: {
+    multipleSlots: true,
+  },
+  behaviors: ['wx://form-field', rules],
+  externalClasses: ['l-class', 'l-label-class','l-error-text','l-error-text-class'],
+  properties: {
+    // 表单标题（label）的文本
+    label: {
+      type: String,
+      value: ''
+    },
+    // 是否隐藏label
+    hideLabel:{
+      type: Boolean,
+      value: false
+    },
+    // 是否自定义label部分
+    labelCustom: {
+      type: Boolean,
+      value: false
+    },
+    // 是否显示下划线
+    showRow: {
+      type: Boolean,
+      value: true
+    },
+    // 是否必选
+    required: {
+      type: Boolean,
+      value: false
+    },
+    // 占位文本
+    placeholder: {
+      type: String,
+      value: ''
+    },
+    // 输入框类型
+    type: {
+      type: String,
+      value: 'text'
+    },
+    // 输入框的值
+    value: {
+      type: String,
+      value: ''
+    },
+    // 是否需要冒号
+    colon: {
+      type: Boolean,
+      value: false
+    },
+    // 获取焦点
+    focus: {
+      type: Boolean,
+      value: false
+    },
+    // 是否显示清除按钮
+    clear: {
+      type: Boolean,
+      value: false
+    },
+    // 最大输入长度
+    maxlength: {
+      type: Number,
+      value: 140
+    },
+    // 表单项的宽度，单位rpx
+    width: {
+      type: Number,
+      value: 750
+    },
+    // 表单项标题部分的宽度，单位rpx
+    labelWidth: {
+      type: Number,
+      value: 200
+    },
+    // label标题的显示位置 left top right
+    labelLayout: {
+      type: String,
+      value: 'left'
+    },
+    // 是否禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 占位文字的样式  
+    placeholderStyle: {
+      type: String,
+      value: ''
+    },
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+  attached() {
+    this.initRules();
+  },
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+
+    handleInputChange(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('lininput', event.detail);
+    },
+
+    handleInputFocus(event) {
+      this.triggerEvent('linfocus', event.detail);
+    },
+
+    handleInputBlur(event) {
+      this.validatorData({
+        value: event.detail.value
+      });
+      this.triggerEvent('linblur', event.detail);
+    },
+    handleInputConfirm(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('linconfirm', event.detail);
+    },
+    onClearTap(event) {
+      this.setData({
+        value: ''
+      });
+      this.triggerEvent('linclear', event.detail);
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/input/index.json b/miniprogram_npm/lin-ui/input/index.json
new file mode 100644
index 0000000..fe1a1ff
--- /dev/null
+++ b/miniprogram_npm/lin-ui/input/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-error-tip":"../error-tip/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/input/index.wxml b/miniprogram_npm/lin-ui/input/index.wxml
new file mode 100644
index 0000000..a11f090
--- /dev/null
+++ b/miniprogram_npm/lin-ui/input/index.wxml
@@ -0,0 +1,37 @@
+<!--  input/input.wxml -->
+<label
+  class='form-item {{disabled? "disabled": ""}} l-class form-item-{{labelLayout}}'
+  style="width:{{width}}rpx">
+  <view class='mask' wx:if="{{disabled}}"></view>
+  <view class='row' hidden="{{ showRow ? '' : 'hidden' }}" style="width:{{width}}rpx;"></view>
+  <view wx:if="{{label && !labelCustom}}" hidden="{{hideLabel}}" class='form-label l-label-class form-label-{{labelLayout}}' style='{{labelLayout !== "top" ? "width:"+ labelWidth+ "rpx;" : "" }} height:{{labelLayout== "top" ? labelWidth + "rpx" : "" }}'>
+    <text><text class='text-require' wx:if="{{required}}">* </text>{{label}}<text wx:if="{{colon}}">：</text>
+    </text>
+  </view>
+  <view wx:else hidden="{{hideLabel}}" class='form-label l-label-class form-label-{{labelLayout}}' style='{{labelLayout !== "top" ? "width:"+ labelWidth+ "rpx;" : "" }} height:{{labelLayout== "top" ? labelWidth + "rpx" : "" }}'>
+    <slot name="left" />
+  </view>
+  <!-- 小程序表单组件 -->
+  <input
+    class="input {{hideLabel?'hideLabel':''}}"
+    value="{{ value }}"
+    type="{{type}}"
+    password="{{type==='password'}}"
+    placeholder="{{placeholder}}"
+    maxlength="{{maxlength}}"
+    placeholder-class="pls-class"
+    placeholder-style="{{placeholderStyle}}"
+    disabled="{{disabled}}"
+    focus="{{focus}}"
+    bindinput="handleInputChange"
+    bindfocus="handleInputFocus"
+    bindblur="handleInputBlur"
+    bindconfirm="handleInputConfirm" />
+  <view class="close" wx:if="{{clear&&value}}" bindtap="onClearTap">
+    <view  class="close-icon">
+      <l-icon  name="close" color="#fff" size="16" />
+    </view>
+  </view>
+  <slot name="right"/>
+  <l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
+</label>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/input/index.wxss b/miniprogram_npm/lin-ui/input/index.wxss
new file mode 100644
index 0000000..9ccc460
--- /dev/null
+++ b/miniprogram_npm/lin-ui/input/index.wxss
@@ -0,0 +1 @@
+.form-item{position:relative;font-size:28rpx;color:#333;width:750rpx;height:88rpx;display:flex;flex-direction:row;align-items:center;padding-right:25rpx;box-sizing:border-box}.row{position:absolute;bottom:0;right:0;height:2rpx;width:730rpx;background:#f3f3f3}.text-require{color:#e23;vertical-align:middle}.form-label{display:flex;flex-direction:row;align-items:center;height:88rpx;padding-left:25rpx;padding-right:15rpx;box-sizing:border-box}.disabled{color:#9a9a9a!important}.mask{position:absolute;z-index:999;height:100%;width:100%}.form-label-right{justify-content:flex-end}.form-label-left{justify-content:flex-start}.input{height:100%;line-height:100%;flex:1}.close{height:36rpx;width:36rpx;background:#ddd;display:flex;flex-direction:row;align-items:center;justify-content:center;border-radius:50%;margin-right:20rpx}.pls-class{color:#9a9a9a}.hideLabel{padding-left:25rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/list/index.js b/miniprogram_npm/lin-ui/list/index.js
new file mode 100644
index 0000000..72b360f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/list/index.js
@@ -0,0 +1,106 @@
+import hover from '../behaviors/hover';
+
+Component({
+  behaviors:[hover],
+  relations: {
+    '../list/index': {
+      type: 'parent', // 关联的目标节点应为子节点
+      linked() {
+        // 每次有custom-li被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+      },
+      linkChanged() {
+        // 每次有custom-li被移动后执行，target是该节点实例对象，触发在该节点moved生命周期之后
+      },
+      unlinked() {
+        // 每次有custom-li被移除时执行，target是该节点实例对象，触发在该节点detached生命周期之后
+      }
+    }
+  },
+
+  options: {
+    multipleSlots: true
+  },
+  externalClasses: [
+    'l-class',
+    'l-class-icon',
+    'l-icon-class',
+    'l-class-image',
+    'l-image-class',
+    'l-class-right',
+    'l-right-class',
+    'l-class-content',
+    'l-content-class',
+    'l-class-desc',
+    'l-desc-class'
+  ],
+  properties: {
+    icon: String,
+    iconColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    image: String,
+    title: String,
+    desc: String,
+    tagPosition: {
+      type: String,
+      value: 'left'
+    },
+    tagContent: String,
+    tagShape: {
+      type: String,
+      value: 'square'
+    },
+    tagColor: String,
+    tagPlain: Boolean,
+    badgePosition: {
+      type: String,
+      value: 'left'
+    },
+    dotBadge: Boolean,
+    badgeCount: Number,
+    badgeMaxCount: {
+      type: Number,
+      value: 99
+    },
+    badgeCountType: {
+      type: String,
+      value: 'overflow'
+    },
+    rightDesc: String,
+    gap: Number,
+    leftGap: Number,
+    rightGap: Number,
+    isLink: {
+      type: Boolean,
+      value: true,
+    },
+    linkType: {
+      type: String,
+      value: 'navigateTo'
+    },
+    url: String
+
+  },
+
+  methods: {
+    tapcell: function (e) {
+      const {
+        linkType,
+        url
+      } = e.currentTarget.dataset;
+      if (url) {
+        wx[linkType]({
+          url
+        });
+      }
+      this.triggerEvent('lintap', {
+        e
+      }, { bubbles: true, composed: true });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/list/index.json b/miniprogram_npm/lin-ui/list/index.json
new file mode 100644
index 0000000..0dd8908
--- /dev/null
+++ b/miniprogram_npm/lin-ui/list/index.json
@@ -0,0 +1,8 @@
+{
+    "component": true,
+    "usingComponents": {
+      "l-icon":"../icon/index",
+      "l-badge":"../badge/index",
+      "l-tag":"../tag/index"
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/list/index.wxml b/miniprogram_npm/lin-ui/list/index.wxml
new file mode 100644
index 0000000..28d98fd
--- /dev/null
+++ b/miniprogram_npm/lin-ui/list/index.wxml
@@ -0,0 +1,34 @@
+<view class="l-list l-class" hover-class="{{isHover?'l-list-hover':''}}" hover-start-time="20" hover-stay-time="50"  style="{{gap?'padding:0 '+gap+'rpx;':''}} {{leftGap?'padding-left:'+leftGap+'rpx':''}} {{rightGap?'padding-right:'+rightGap+'rpx':''}}" bind:tap="tapcell" data-url="{{url}}" data-link-type="{{linkType}}">
+    <!-- left -->
+    <l-badge wx:if="{{(badgeCount > 0 || dotBadge ) && badgePosition ==='left'}}" value="{{badgeCount}}" dot="{{dotBadge}}" max-count="{{badgeMaxCount}}" number-type="{{badgeCountType}}">
+        <template is="cell-left-main" data="{{image,icon,title,desc,tagContent,tagPosition,tagColor,tagShape,tagPlain}}" />
+    </l-badge>
+    <template is="cell-left-main" data="{{image,icon,title,desc,tagContent,tagPosition,tagColor,tagShape,tagPlain}}" wx:else />
+    <!-- right -->
+    <l-badge l-class="badge-right" wx:if="{{(badgeCount > 0 || dotBadge ) && badgePosition ==='right'}}" value="{{badgeCount}}" dot="{{dotBadge}}" max-count="{{badgeMaxCount}}" number-type="{{badgeCountType}}">
+        <template is="cell-right-main" data="{{rightDesc,tagContent,tagPosition,isLink,tagColor,tagShape,tagPlain}}" />
+    </l-badge>
+    <template is="cell-right-main" data="{{rightDesc,tagContent,tagPosition,isLink,tagColor,tagShape,tagPlain}}" wx:else />
+</view>
+<template name="cell-left-main">
+    <view class="left-section ">
+        <image wx:if="{{image}}" class="l-image l-class-image l-image-class" src="{{image}}" mode="aspectFit|aspectFill|widthFix" />
+        <l-icon wx:elif="{{icon}}" l-self-class="l-icon" l-class="l-class-icon l-icon-class" name="{{icon}}" size="{{iconSize}}" color="{{iconColor}}" />
+        <view class="l-text">
+            <view class="l-content l-class-content l-content-class">{{title}}</view>
+            <view class="l-desc l-class-desc l-desc-class" wx:if="{{desc}}">{{desc}}</view>
+        </view>
+        <l-tag size="mini"  shape="{{tagShape}}" bg-color="{{tagColor}}" l-class="cell-tag" wx:if="{{tagContent && tagPosition ==='left' && !tagPlain}}">{{tagContent}}</l-tag>
+        <l-tag size="mini" shape="{{tagShape}}" plain="{{tagPlain}}" font-color="{{tagColor}}" l-class="cell-tag" wx:elif="{{tagContent && tagPosition ==='left' && tagPlain}}">{{tagContent}}</l-tag>
+        <slot name="left-section"></slot>
+    </view>
+</template>
+<template name="cell-right-main">
+    <view class="right-section l-class-right l-right-class">
+        <slot name="right-section"></slot>
+        <l-tag size="mini" shape="{{tagShape}}" bg-color="{{tagColor}}" l-class="cell-tag" wx:if="{{tagContent && tagPosition ==='right' && !tagPlain }}">{{tagContent}}</l-tag>
+        <l-tag size="mini" shape="{{tagShape}}" plain="{{tagPlain}}" font-color="{{tagColor}}" l-class="cell-tag" wx:if="{{tagContent && tagPosition ==='right' && tagPlain }}">{{tagContent}}</l-tag>
+        <view class="l-text" wx:if="{{rightDesc}}">{{rightDesc}}</view>
+        <l-icon l-self-class="l-arrow" name="right" wx:if="{{isLink}}" />
+    </view>
+</template>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/list/index.wxss b/miniprogram_npm/lin-ui/list/index.wxss
new file mode 100644
index 0000000..49ca7fa
--- /dev/null
+++ b/miniprogram_npm/lin-ui/list/index.wxss
@@ -0,0 +1 @@
+.l-list{width:100%;min-height:88rpx;display:flex;justify-content:space-between;align-items:center;color:#333;font-size:28rpx;border-bottom:1px solid #f3f3f3;box-sizing:border-box}.l-list-hover{opacity:.8}.l-list .left-section{display:flex;justify-content:space-between;align-items:center}.l-list .left-section .l-icon{margin-right:20rpx}.l-list .left-section .l-desc{color:#d1d3d7;font-size:24rpx}.l-list .left-section .cell-tag{margin-left:20rpx}.l-list .left-section .l-image{width:44rpx;height:44rpx;margin-right:20rpx}.l-list .right-section{display:flex;justify-content:space-between;align-items:center;line-height:1.2}.l-list .right-section .l-arrow{color:#8c98ae;font-size:26rpx}.l-list .right-section .l-text{margin-right:20rpx}.l-list .right-section .cell-tag{margin-right:20rpx}.l-list .badge-right{border-radius:28rpx;min-width:28rpx;left:-20rpx;right:auto;top:0;bottom:0;transform:translate(-100%,2rpx)}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/loading/index.js b/miniprogram_npm/lin-ui/loading/index.js
new file mode 100644
index 0000000..a087f10
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loading/index.js
@@ -0,0 +1,90 @@
+import computeOffset from '../behaviors/computeOffset';
+Component({
+  behaviors: [computeOffset],
+  externalClasses: ['l-container-class', 'l-class'],
+  options: {
+    multipleSlots: true
+  },
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    opacity:{
+      type: String,
+      value: '1'
+    },
+    bgColor: {
+      type: String,
+      value: '#fff'
+    },
+    zIndex:{
+      type: Number,
+      value: 776
+    },
+    // 类型
+    type: {
+      type: String,
+      value: 'rotate'
+    },
+    // 动画颜色
+    color: {
+      type: String,
+      value: ''
+    },
+    // loading 动画大小
+    size: {
+      type: String,
+      value: 'medium',
+    },
+    // 自定义
+    custom: Boolean,
+    // 全屏模式
+    fullScreen: Boolean
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showLoading = (options) => {
+        const {
+          custom = false,
+          fullScreen = false,
+          color = '',
+          type = 'rotate',
+          size = 'medium',
+          opacity = '1'
+        } = { ...options };
+        this.setData({
+          custom,
+          fullScreen,
+          color,
+          type,
+          size,
+          opacity,
+          show: true
+        });
+      };
+      wx.lin.hideLoading = () => {
+        this.setData({
+          show: false
+        });
+      };
+    },
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+  }
+});
diff --git a/miniprogram_npm/lin-ui/loading/index.json b/miniprogram_npm/lin-ui/loading/index.json
new file mode 100644
index 0000000..4a42478
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loading/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/loading/index.wxml b/miniprogram_npm/lin-ui/loading/index.wxml
new file mode 100644
index 0000000..4de3bd5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loading/index.wxml
@@ -0,0 +1,77 @@
+<view class="container-loading l-container-class {{fullScreen ? 'content': ''}}" wx:if="{{show && fullScreen}}" style="background:{{bgColor}};opacity:{{opacity}};z-index:{{zIndex}}" catchtouchmove="doNothingMove">
+  <view wx:if="{{show}}"
+        class="l-class {{type + '-spinner'}} {{type=='change'||custom?'':'spinner-' + type + '-' + size}}"
+        style="margin-bottom:{{distance}}px">
+    <block wx:if="{{custom}}">
+      <slot />
+    </block>
+    <block wx:else>
+      <view wx:if="{{type=='flash' || type=='change' || type=='flip'}}"  style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce1'}}   {{'spinner-'+ type + '-' + size}}"></view>
+      <view wx:if="{{type=='flash' || type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce2'}} {{'spinner-'+ type + '-' + size}}"></view>
+      <view wx:if="{{type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce3'}}   {{'spinner-'+ type + '-' + size}}"></view>
+      <view class="spinner-circle {{'spinner-circle-' + size}}" wx:if="{{ type === 'circle'}}">
+        <view class="spinner-container container1">
+          <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+        </view>
+        <view class="spinner-container container2">
+          <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+        </view>
+        <view class="spinner-container container3">
+          <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+        </view>
+      </view>
+      <view wx:if="{{ type === 'rotate'}}">
+        <view class="rotate rotate-{{size}}" style="border-color: {{color}};"></view>
+      </view>
+    </block>
+  </view>
+</view>
+<view wx:if="{{!fullScreen}}" class="l-container-class" style="position: relative">
+    <slot name="content"/>
+    <view wx:if="{{show}}" class="inner-loading-container" style="background:{{bgColor}};opacity:{{opacity}};z-index:{{zIndex}}"></view>
+    <view wx:if="{{show}}" class="l-class loading-icon-container" style="z-index:{{zIndex + 1}}">
+        <view class="{{type + '-spinner'}} {{type=='change'||custom?'':'spinner-' + type + '-' + size}}">
+            <block wx:if="{{custom}}">
+                <slot />
+            </block>
+            <block wx:else>
+                <view wx:if="{{type=='flash' || type=='change' || type=='flip'}}"  style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce1'}}   {{'spinner-'+ type + '-' + size}}"></view>
+                <view wx:if="{{type=='flash' || type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce2'}} {{'spinner-'+ type + '-' + size}}"></view>
+                <view wx:if="{{type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce3'}}   {{'spinner-'+ type + '-' + size}}"></view>
+                <view wx:if="{{ type === 'circle'}}" class="spinner-circle {{'spinner-circle-' + size}}">
+                    <view class="spinner-container container1">
+                        <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+                    </view>
+                    <view class="spinner-container container2">
+                        <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+                    </view>
+                    <view class="spinner-container container3">
+                        <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+                    </view>
+                </view>
+                <view wx:if="{{ type === 'rotate'}}">
+                    <view class="rotate rotate-{{size}}" style="border-color: {{color}};"></view>
+                </view>
+            </block>
+        </view>
+    </view>
+</view>
+
diff --git a/miniprogram_npm/lin-ui/loading/index.wxss b/miniprogram_npm/lin-ui/loading/index.wxss
new file mode 100644
index 0000000..9b45683
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loading/index.wxss
@@ -0,0 +1 @@
+.container-loading{position:fixed;height:100%;width:100%;top:0;left:0}.content{display:flex;flex-direction:column;align-items:center;justify-content:center;background:#fff;height:100%}.spinner-flash-medium{width:60rpx;height:60rpx}.spinner-flash-mini{width:40rpx;height:40rpx}.spinner-flash-large{width:80rpx;height:80rpx}.spinner-flip-medium{width:60rpx;height:60rpx}.spinner-flip-mini{width:40rpx;height:40rpx}.spinner-flip-large{width:80rpx;height:80rpx}.spinner-change-medium{width:30rpx;height:30rpx}.spinner-change-mini{width:20rpx;height:20rpx}.spinner-change-large{width:50rpx;height:50rpx}.flash-spinner{position:relative}.flash-bounce1,.flash-bounce2{width:100%;height:100%;border-radius:50%;background-color:#3963bc;opacity:.6;position:absolute;top:0;left:0;-webkit-animation:bounce 2s infinite ease-in-out;animation:bounce 2s infinite ease-in-out}.flash-bounce2{-webkit-animation-delay:-1s;animation-delay:-1s}@-webkit-keyframes bounce{0%,100%{-webkit-transform:scale(0)}50%{-webkit-transform:scale(1)}}@keyframes bounce{0%,100%{transform:scale(0);-webkit-transform:scale(0)}50%{transform:scale(1);-webkit-transform:scale(1)}}.flip-bounce1{background-color:#3963bc;-webkit-animation:rotateplane 1.2s infinite ease-in-out;animation:rotateplane 1.2s infinite ease-in-out}@-webkit-keyframes rotateplane{0%{-webkit-transform:perspective(120px)}50%{-webkit-transform:perspective(120px) rotateY(180deg)}100%{-webkit-transform:perspective(120px) rotateY(180deg) rotateX(180deg)}}@keyframes rotateplane{0%{transform:perspective(120px) rotateX(0) rotateY(0);-webkit-transform:perspective(120px) rotateX(0) rotateY(0)}50%{transform:perspective(120px) rotateX(-180.1deg) rotateY(0);-webkit-transform:perspective(120px) rotateX(-180.1deg) rotateY(0)}100%{transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg);-webkit-transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)}}.change-spinner{width:240rpx;text-align:center}.change-bounce1{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.32s;animation-delay:-.32s}.change-bounce2{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.16s;animation-delay:-.16s}.change-bounce3{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}@-webkit-keyframes bouncedelay{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes bouncedelay{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}.spinner-circle{position:relative}.spinner-circle-mini{width:40rpx;height:40rpx}.spinner-circle-medium{width:60rpx;height:60rpx}.spinner-circle-large{width:70rpx;height:70rpx}.container1>view,.container2>view,.container3>view{border-radius:50%;position:absolute;background-color:#3963bc;-webkit-animation:bouncedelay4 1.2s infinite ease-in-out;animation:bouncedelay4 1.2s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}.circle-mini{width:12rpx;height:12rpx}.circle-medium{width:15rpx;height:15rpx}.circle-large{width:20rpx;height:20rpx}.spinner-circle .spinner-container{position:absolute;width:100%;height:100%}.container2{-webkit-transform:rotateZ(45deg);transform:rotateZ(45deg)}.container3{-webkit-transform:rotateZ(90deg);transform:rotateZ(90deg)}.circle1{top:0;left:0}.circle2{top:0;right:0}.circle3{right:0;bottom:0}.circle4{left:0;bottom:0}.container2 .circle1{-webkit-animation-delay:-1.1s;animation-delay:-1.1s}.container3 .circle1{-webkit-animation-delay:-1s;animation-delay:-1s}.container1 .circle2{-webkit-animation-delay:-.9s;animation-delay:-.9s}.container2 .circle2{-webkit-animation-delay:-.8s;animation-delay:-.8s}.container3 .circle2{-webkit-animation-delay:-.7s;animation-delay:-.7s}.container1 .circle3{-webkit-animation-delay:-.6s;animation-delay:-.6s}.container2 .circle3{-webkit-animation-delay:-.5s;animation-delay:-.5s}.container3 .circle3{-webkit-animation-delay:-.4s;animation-delay:-.4s}.container1 .circle4{-webkit-animation-delay:-.3s;animation-delay:-.3s}.container2 .circle4{-webkit-animation-delay:-.2s;animation-delay:-.2s}.container3 .circle4{-webkit-animation-delay:-.1s;animation-delay:-.1s}@-webkit-keyframes bouncedelay4{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes bouncedelay4{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}.rotate{border-radius:50%;animation:rotate .7s linear infinite}.rotate-mini{height:40rpx;width:40rpx;border-top:6rpx solid #3963bc;border-right:6rpx solid transparent!important;border-bottom:6rpx solid #3963bc;border-left:6rpx solid #3963bc}.rotate-medium{height:50rpx;width:50rpx;border-top:6rpx solid #3963bc;border-right:6rpx solid transparent!important;border-bottom:6rpx solid #3963bc;border-left:6rpx solid #3963bc}.rotate-large{height:70rpx;width:70rpx;border-top:8rpx solid #3963bc;border-right:8rpx solid transparent!important;border-bottom:8rpx solid #3963bc;border-left:8rpx solid #3963bc}@keyframes rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}.inner-loading-container{position:absolute;width:100%;left:0;height:100%;top:0}.loading-icon-container{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/loadmore/index.js b/miniprogram_npm/lin-ui/loadmore/index.js
new file mode 100644
index 0000000..157225f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loadmore/index.js
@@ -0,0 +1,80 @@
+Component({
+  externalClasses: ['l-class','l-loading-class','l-end-class','l-line-class'],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    show: Boolean,
+    custom: Boolean,
+    line: Boolean,
+    color: String,
+    size: {
+      type: String,
+      value: '28'
+    },
+    type: {
+      type: String,
+      value: 'loading'
+    },
+    endText: {
+      type: String,
+      value: '我是有底线的~'
+    },
+    loadingText: {
+      type: String,
+      value: '加载中...'
+    }
+  },
+
+  data: {
+
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showLoadmore = (options) => {
+        const {
+          custom = false,
+          line = false,
+          color = '',
+          size = '28',
+          type = 'loading',
+          endText = '我是有底线的',
+          loadingText = '加载中...'
+        } = { ...options };
+        this.setData({
+          custom,
+          line,
+          color,
+          size,
+          type,
+          endText,
+          loadingText,
+          show: true
+        });
+      };
+      wx.lin.hideLoadmore = () => {
+        this.setData({
+          show: false
+        });
+      };
+    },
+    onLoadmore() {
+      this.triggerEvent('lintap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/loadmore/index.json b/miniprogram_npm/lin-ui/loadmore/index.json
new file mode 100644
index 0000000..270874f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loadmore/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-loading":"../loading/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/loadmore/index.wxml b/miniprogram_npm/lin-ui/loadmore/index.wxml
new file mode 100644
index 0000000..d702f4e
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loadmore/index.wxml
@@ -0,0 +1,19 @@
+<!-- 内容插槽 -->
+<slot name="content" />
+<view bindtap="onLoadmore" wx:if="{{show}}">
+  <view wx:if="{{custom && type==='end'}}">
+    <slot name="end" />
+  </view>
+  <view wx:elif="{{custom && type==='loading'}}">
+    <slot name="loading" />
+  </view>
+  <view class="loading l-class" wx:else>
+    <view class="line" 
+          style="{{'background-color:'+color}}" 
+          wx:if="{{line}}"></view>
+    <view class="rotate" style="border-color: {{color}};width:{{size}}rpx;height:{{size}}rpx" wx:if="{{type=='loading'}}"></view>
+    <view class="loading-text l-loading-class" style="color:{{color}};font-size:{{size}}rpx" wx:if="{{type=='loading'}}">{{loadingText}}</view>
+    <view class="loading-text l-end-class" style="{{'color:'+color}};font-size:{{size}}rpx" wx:if="{{type=='end'}}">{{endText}}</view>
+    <view class="line l-line-class" style="{{'background-color:'+color}}" wx:if="{{line}}"></view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/loadmore/index.wxss b/miniprogram_npm/lin-ui/loadmore/index.wxss
new file mode 100644
index 0000000..50d25b9
--- /dev/null
+++ b/miniprogram_npm/lin-ui/loadmore/index.wxss
@@ -0,0 +1 @@
+.loadmore-container{display:flex;flex-direction:column;background-color:transparent}.loading{display:flex;flex-direction:row;width:100%;height:72rpx;align-items:center;justify-content:center;background-color:transparent}.loading view:nth-child(2){margin-left:36rpx}.loading-text{color:#bbb;font-size:28rpx;margin:0 12rpx}.line{width:80rpx;height:2rpx;background-color:#d1d3d7}.rotate{border-radius:50%;animation:rotate .7s linear infinite;height:28rpx;width:28rpx;border-top:4rpx solid #bbb;border-right:4rpx solid transparent!important;border-bottom:4rpx solid #bbb;border-left:4rpx solid #bbb;margin-left:12rpx}@keyframes rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/mask/index.js b/miniprogram_npm/lin-ui/mask/index.js
new file mode 100644
index 0000000..ff93938
--- /dev/null
+++ b/miniprogram_npm/lin-ui/mask/index.js
@@ -0,0 +1,84 @@
+import zIndex from '../behaviors/zIndex';
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [zIndex],
+  externalClasses: ['l-class','l-mask-class'],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 不透明度
+    opacity: {
+      type: [String, Number],
+      value: .4
+    },
+    // mask的z-index值
+    zIndex: {
+      type: Number,
+      value: 99,
+
+    },
+    // slot是否居中
+    center: {
+      type: Boolean,
+      value: false,
+    },
+    // 锁定
+    locked: {
+      type: Boolean,
+      value: true
+    },
+    // 全屏幕模式 暂不可用
+    fullScreen: {
+      type: String,
+      value: ''
+    },
+    // 导航栏颜色
+    NavColor: {
+      type: String,
+      value: ''
+    },
+
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+
+    // 点击事件
+    onMaskTap() {
+
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+
+      if (this.data.locked !== true) {
+        this.setData({
+          // fullScreen: 'hide',
+          show: false,
+        });
+      }
+      this.triggerEvent('lintap', detail, option);
+    }
+  },
+
+  attached: function () {
+  },
+
+
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/mask/index.json b/miniprogram_npm/lin-ui/mask/index.json
new file mode 100644
index 0000000..4a42478
--- /dev/null
+++ b/miniprogram_npm/lin-ui/mask/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/mask/index.wxml b/miniprogram_npm/lin-ui/mask/index.wxml
new file mode 100644
index 0000000..18383c1
--- /dev/null
+++ b/miniprogram_npm/lin-ui/mask/index.wxml
@@ -0,0 +1,13 @@
+<!-- mask.wxml -->
+<view
+  class="container-mask  {{center? 'center' : ''}} l-class"
+  hidden="{{ show? '' :  'hidden'}}"
+  catchtouchmove="doNothingMove"
+  catchtap="onMaskTap"
+  style="z-index:{{zIndex}}; {{show? 'background: rgba(0,0,0,' + opacity+ ')' :  ''}}"
+>
+  <!-- <view class="mask-bg" catchtap="onMaskTap" ></view> -->
+  <view class="mask-content l-mask-class" >
+    <slot></slot>
+  </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/mask/index.wxss b/miniprogram_npm/lin-ui/mask/index.wxss
new file mode 100644
index 0000000..f2dbe42
--- /dev/null
+++ b/miniprogram_npm/lin-ui/mask/index.wxss
@@ -0,0 +1 @@
+.container-mask{position:fixed;top:0;left:0;width:100%;height:100%;transition:all .3s}.mask-bg{height:100%;width:100%;background:#fff;z-index:99}.mask-content{display:inline-block;z-index:101;overflow:hidden}.center{display:flex;flex-direction:row;align-items:center;justify-content:center}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/message/index.js b/miniprogram_npm/lin-ui/message/index.js
new file mode 100644
index 0000000..1bbca43
--- /dev/null
+++ b/miniprogram_npm/lin-ui/message/index.js
@@ -0,0 +1,82 @@
+import zIndex from '../behaviors/zIndex';
+import watchShow from '../behaviors/watchShow';
+Component({
+  behaviors: [zIndex, watchShow],
+  externalClasses: ['l-class', 'l-image-class'],
+  properties: {
+    show: Boolean,
+    icon: String,
+    iconColor: {
+      type: String,
+      value: '#fff'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    image: String,
+    content: String,
+    type: {
+      type: String,
+      value: 'primary'
+    },
+    duration: {
+      type: Number,
+      value: 1500
+    },
+    openApi: {
+      type: Boolean,
+      value: true
+    }
+  },
+
+  data: {
+    status: false
+  },
+
+  // 解决 addListener undefined 的错误
+  observers: {
+    'icon': function () {}
+  },
+
+  attached() {
+    this.initMessage();
+  },
+
+  pageLifetimes: {
+    show() {
+      this.initMessage();
+    },
+  },
+
+  methods: {
+    initMessage() {
+      wx.lin = wx.lin || {};
+      wx.lin.showMessage = (options = {}) => {
+        const {
+          content = '',
+          icon = '',
+          image = '',
+          type = 'primary',
+          duration = 1500,
+          success = null
+        } = options;
+        this.data.success = success;
+        this.setData({
+          content,
+          icon,
+          image,
+          duration,
+          type
+        });
+        this.changeStatus();
+        return this;
+      };
+      wx.lin.hideMessage = ()=>{
+        this.setData({
+          status: false
+        });
+      };
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/message/index.json b/miniprogram_npm/lin-ui/message/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/miniprogram_npm/lin-ui/message/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/message/index.wxml b/miniprogram_npm/lin-ui/message/index.wxml
new file mode 100644
index 0000000..da126e4
--- /dev/null
+++ b/miniprogram_npm/lin-ui/message/index.wxml
@@ -0,0 +1,10 @@
+<view class="l-message l-class {{'l-message-'+type}} {{status?'l-message-show':''}}" style="z-index:{{zIndex}}">
+  <block wx:if="{{status}}">
+    <view style="margin-right:15rpx">
+      <l-icon name="{{icon?icon:type}}" size="{{iconSize}}" color="{{type=='warning'?'#333':iconColor}}" />
+    </view>
+    <image wx:if="{{image}}" src="{{image}}" class="l-message-image l-class-image"/>
+    {{content}}
+    <slot /> 
+  </block>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/message/index.wxss b/miniprogram_npm/lin-ui/message/index.wxss
new file mode 100644
index 0000000..4d1308f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/message/index.wxss
@@ -0,0 +1 @@
+.l-message{width:750rpx;height:72rpx;border-radius:0rpx 0rpx 16rpx 16rpx;display:flex;justify-content:center;align-items:center;position:fixed;top:0rpx;left:50%;font-size:28rpx;color:#fff;opacity:0;box-shadow:0rpx 6rpx 16rpx 0rpx rgba(217,212,191,.5);transform:translateX(-50%) translateZ(0) translateY(-100%);transition:all .4s ease-in-out}.l-message-success{background-color:#34bfa3}.l-message-error{background-color:#f4516c}.l-message-warning{background-color:#ffe57f;color:#333}.l-message-primary{background-color:#3963bc}.l-message-show{transform:translateX(-50%) translateZ(0) translateY(0);opacity:1}.l-message-image{width:30rpx;height:30rpx;margin-right:15rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/notice-bar/index.js b/miniprogram_npm/lin-ui/notice-bar/index.js
new file mode 100644
index 0000000..f6f5d2a
--- /dev/null
+++ b/miniprogram_npm/lin-ui/notice-bar/index.js
@@ -0,0 +1,152 @@
+Component({
+  externalClasses: ['l-class'],
+
+  properties: {
+    type: {
+      type: String,
+      value: 'still'
+    },
+    // 轮播数组
+    swipArr: Array,
+    // 前置图标
+    frontIconName: {
+      type: String,
+      value: ''
+    },
+    frontIconSize: {
+      type: Number,
+      value: 28
+    },
+    frontIconColor: {
+      type: String,
+      value: '#3683D6'
+    },
+    endIconName: {
+      type: String,
+      value: ''
+    },
+    endIconSize: {
+      type: Number,
+      value: 28
+    },
+    endIconColor: {
+      type: String,
+      value: '#3683D6'
+    },
+    // 背景颜色
+    backgroundcolor: {
+      type: String,
+      value: '#DFEDFF'
+    },
+    // 字体及图标颜色
+    color: {
+      type: String,
+      value: '#3683D6'
+    },
+    // 滚动速度
+    speed: {
+      type: Number,
+      value: 1500
+    },
+    show: {
+      type: Boolean,
+      value: true
+    },
+    close: {
+      type: Boolean,
+      value: false
+    }
+  },
+
+  data: {
+    wrapWidth: 0,
+    width: 0,
+    duration: 0,
+    animation: null,
+    timer: null,
+  },
+
+  detached() {
+    this.destroyTimer();
+  },
+
+  ready() {
+    if (this.properties.type == 'roll' && this.properties.show) {
+      this.initAnimation();
+    }
+  },
+
+  methods: {
+    initAnimation() {
+      wx.createSelectorQuery().in(this).select('.l-noticebar-content-wrap').boundingClientRect((wrapRect) => {
+        wx.createSelectorQuery().in(this).select('.l-noticebar-content').boundingClientRect((rect) => {
+          const duration = rect.width / 40 * this.data.speed;
+          const animation = wx.createAnimation({
+            duration: duration,
+            timingFunction: 'linear',
+          });
+          this.setData({
+            wrapWidth: wrapRect.width,
+            width: rect.width,
+            duration: duration,
+            animation: animation
+          }, () => {
+            this.startAnimation();
+          });
+        }).exec();
+
+      }).exec();
+    },
+    startAnimation() {
+      //reset
+      if (this.data.animation.option.transition.duration !== 0) {
+        this.data.animation.option.transition.duration = 0;
+        const resetAnimation = this.data.animation.translateX(this.data.wrapWidth).step();
+        this.setData({
+          animationData: resetAnimation.export()
+        });
+      }
+      this.data.animation.option.transition.duration = this.data.duration;
+      const animationData = this.data.animation.translateX(-this.data.width).step();
+      setTimeout(() => {
+        this.setData({
+          animationData: animationData.export()
+        });
+      }, 100);
+      const timer = setTimeout(() => {
+        this.startAnimation();
+      }, this.data.duration);
+      this.setData({
+        timer,
+      });
+    },
+    destroyTimer() {
+      if (this.data.timer) {
+        clearTimeout(this.data.timer);
+      }
+    },
+    handleTap() {
+      this.triggerEvent('lintap',{},{ bubbles: true, composed: true });
+      this.setData({
+        timer: null
+      });
+    },
+    onSwip(e) {
+      this.triggerEvent('lintap', {
+        ...e.currentTarget.dataset
+      },{ bubbles: true, composed: true });
+    },
+    onIconTap(){
+      this.triggerEvent('linicontap',{},{ bubbles: true, composed: true });
+      this.setData({
+        timer: null
+      });
+    },
+    onClose() {
+      this.setData({
+        timer: null,
+        show: false
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/notice-bar/index.json b/miniprogram_npm/lin-ui/notice-bar/index.json
new file mode 100644
index 0000000..b5e3f56
--- /dev/null
+++ b/miniprogram_npm/lin-ui/notice-bar/index.json
@@ -0,0 +1,8 @@
+{
+    "component": true,
+    "usingComponents":
+    {
+        "l-icon": "../icon/index"
+    }
+}
+
diff --git a/miniprogram_npm/lin-ui/notice-bar/index.wxml b/miniprogram_npm/lin-ui/notice-bar/index.wxml
new file mode 100644
index 0000000..33df6f2
--- /dev/null
+++ b/miniprogram_npm/lin-ui/notice-bar/index.wxml
@@ -0,0 +1,17 @@
+<view wx:if="{{ show }}" class="l-class l-noticebar" style="color: {{ color }}; background-color: {{ backgroundcolor }}">
+  <l-icon wx:if="{{ frontIconName }}" size="{{frontIconSize}}" color="{{frontIconColor}}" name="{{ frontIconName }}" class="l-noticebar-icon" />
+  <swiper autoplay vertical interval="{{4*speed}}" class="l-noticebar-content-wrap" wx:if="{{type=='swip'}}">
+    <block wx:for="{{swipArr}}" wx:key="swip">
+      <swiper-item data-index="{{index}}" bindtap="onSwip">
+        {{item}}
+      </swiper-item>
+    </block>
+  </swiper>
+  <view class="l-noticebar-content-wrap" wx:else>
+    <view class="l-noticebar-content"  bindtap="handleTap" animation="{{ animationData }}">
+      <slot></slot>
+    </view>
+  </view>
+  <l-icon wx:if="{{ endIconName && !close }}" size="{{endIconSize}}" color="{{endIconColor}}" class="l-noticebar-operation" name="{{ endIconName }}" bindtap="onIconTap"  />
+  <l-icon wx:if="{{close}}" class="l-noticebar-operation" name="close" size="{{endIconSize}}" color="{{endIconColor}}" bindtap="onClose"/>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/notice-bar/index.wxss b/miniprogram_npm/lin-ui/notice-bar/index.wxss
new file mode 100644
index 0000000..7180b0e
--- /dev/null
+++ b/miniprogram_npm/lin-ui/notice-bar/index.wxss
@@ -0,0 +1 @@
+.l-noticebar{display:flex;height:72rpx;width:750rpx;line-height:72rpx;font-size:28rpx;color:#3963bc;background-color:#dfedff;overflow:hidden;box-shadow:0 2px 5px 0 rgba(218,224,233,.4);border-radius:0 0 8px 8px}.l-noticebar-icon{display:flex;margin-left:20rpx;margin-right:18rpx;align-items:center}.l-noticebar-icon+view{margin-left:5rpx}.l-noticebar-operation{display:flex;margin-right:16rpx;margin-left:8rpx;align-items:center}.l-noticebar-content-wrap{display:flex;margin-left:5rpx;flex:1;height:72rpx;position:relative;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.l-noticebar-content-wrap .l-noticebar-content{position:absolute;transition-duration:20s}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/popup/index.js b/miniprogram_npm/lin-ui/popup/index.js
new file mode 100644
index 0000000..6c21518
--- /dev/null
+++ b/miniprogram_npm/lin-ui/popup/index.js
@@ -0,0 +1,117 @@
+import zIndex from '../behaviors/zIndex';
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [zIndex],
+  externalClasses: ['l-bg-class'],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 动画效果的显示和隐藏
+    animation: {
+      type: Boolean,
+      value: true
+    },
+    // slot的位置
+    contentAlign: {
+      type: String,
+      value: 'center'
+    },
+    // 锁定
+    locked: {
+      type: Boolean,
+      value: false
+    }
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    status: 'show'
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showPopup = (options) => {
+        const {
+          zIndex = 99,
+          animation = true,
+          contentAlign = 'center',
+          locked = false
+        } = { ...options };
+        this.setData({
+          zIndex,
+          animation,
+          contentAlign,
+          locked,
+          show: true
+        });
+      };
+      wx.lin.hidePopup = () => {
+        this.setData({
+          status: 'hide'
+        });
+        setTimeout(()=>{
+          this.setData({
+            show: false,
+            status: 'show'
+          });
+        },300);
+      };
+    },
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+    doNothingTap() {
+      // do nathing
+    },
+
+    // 点击事件
+    onPupopTap() {
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+      if (this.data.locked !== true) {
+        if(!this.data.show) {
+          this.setData({
+            show: true,
+            status: 'show'
+          });
+        } else {
+          this.setData({
+            status: 'hide'
+          });
+          setTimeout(()=>{
+            this.setData({
+              show: false,
+              status: 'show'
+            });
+          },300);
+        }
+        // this.setData({
+        //   show: !this.data.show
+        // });
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/popup/index.json b/miniprogram_npm/lin-ui/popup/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/miniprogram_npm/lin-ui/popup/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/popup/index.wxml b/miniprogram_npm/lin-ui/popup/index.wxml
new file mode 100644
index 0000000..6ba2c25
--- /dev/null
+++ b/miniprogram_npm/lin-ui/popup/index.wxml
@@ -0,0 +1,11 @@
+<!-- popup.wxml -->
+<view class='container-popup {{ show ? "popup-show" : "" }}   {{ "l-popup-" + contentAlign }}  ' style="z-index:{{zIndex}}; " catchtouchmove="doNothingMove">
+  <view class='container-bg l-bg-class'></view>
+  <view
+    wx:if="{{show}}"
+    class="popup-content {{ show ? contentAlign : ''}}   popup-fade-{{contentAlign}}-active-{{animation ? status:''}}" catchtap='onPupopTap'>
+    <view catchtap="doNothingTap">
+      <slot></slot>
+    </view>
+  </view>
+</view>
diff --git a/miniprogram_npm/lin-ui/popup/index.wxss b/miniprogram_npm/lin-ui/popup/index.wxss
new file mode 100644
index 0000000..616b7e5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/popup/index.wxss
@@ -0,0 +1 @@
+.container-popup{visibility:hidden;position:fixed;top:0;left:0;right:0;bottom:0}.popup-show{visibility:visible}.popup-show .container-bg{display:block;opacity:1}.container-bg{opacity:0;position:fixed;top:0;left:0;right:0;bottom:0;z-index:6;background:rgba(0,0,0,.4);transition:all .3s ease-in-out}.popup-bg{height:100%;width:100%;position:absolute;z-index:90}.popup-content{position:absolute;z-index:100;width:100%;max-width:100%;height:100%}.center{display:flex;height:100%;width:100%;flex-direction:row;align-items:center;justify-content:center}.left{display:flex;flex-direction:row;height:100%}.right{display:flex;flex-direction:row;justify-content:flex-end;height:100%}.bottom{display:flex;flex-direction:column-reverse;width:100%}.popup-fade-center-active-show{animation:popup-center-fadein .4s}.popup-fade-center-active-hide{animation:popup-center-fadeout .4s}.popup-fade-top-active-show{animation:popup-top-fadein .3s ease-in-out}.popup-fade-top-active-hide{animation:popup-top-fadeout .3s ease-in-out}.popup-fade-right-active-show{animation:popup-right-fadein .3s ease-in-out}.popup-fade-right-active-hide{animation:popup-right-fadeout .3s ease-in-out}.popup-fade-left-active-show{animation:popup-left-fadein .3s ease-in-out}.popup-fade-left-active-hide{animation:popup-left-fadeout .3s ease-in-out}.popup-fade-bottom-active-show{animation:popup-bottom-fadein .3s ease-in-out}.popup-fade-bottom-active-hide{animation:popup-bottom-fadeout .3s ease-in-out}@keyframes popup-center-fadein{0%{transform:scale(.8);opacity:0}50%{transform:scale(1.1)}100%{transform:scale(1);opacity:1}}@keyframes popup-center-fadeout{0%{transform:scale(1);opacity:1}50%{transform:scale(1.1)}100%{transform:scale(.8);opacity:0}}@keyframes popup-top-fadein{0%{transform:translate3d(0,-100%,0);opacity:.1}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes popup-top-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(0,-100%,0);opacity:.1}}@keyframes popup-left-fadein{0%{transform:translate3d(-100%,0,0);opacity:.1}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes popup-left-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(-100%,0,0);opacity:.1}}@keyframes popup-right-fadein{0%{transform:translate3d(100%,0,0);opacity:.1}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes popup-right-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(100%,0,0);opacity:.1}}@keyframes popup-bottom-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(0,100%,0);opacity:.1}}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/price/index.js b/miniprogram_npm/lin-ui/price/index.js
new file mode 100644
index 0000000..6ceadff
--- /dev/null
+++ b/miniprogram_npm/lin-ui/price/index.js
@@ -0,0 +1,78 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-deleted-class', 'l-unit-class', 'l-value-class', 'l-class'],
+  properties: {
+    unit: {
+      type: String,
+      value: '￥'
+    },
+    size: {
+      type: String,
+      value: '28'
+    },
+    color: {
+      type: String,
+      value: '#3963BC'
+    },
+    bold: {
+      type: String,
+      value: '500'
+    },
+    unitColor: String,
+    unitSize: String,
+    unitBold: String,
+    value: {
+      type: String,
+      value: '0.00'
+    },
+    mode: {
+      type: String,
+      value: 'number'
+    },
+    valueColor: String,
+    valueSize: String,
+    valueBold: String,
+    deleted: Boolean,
+    delColor: String,
+    reserveDigit: {
+      type: Number,
+      value: 2
+    },
+    autofix: Boolean
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  observers: {
+    'value': function () {
+      this.reserveNumber();
+    }
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    reserveNumber() {
+      const countToNumber = Number(this.data.value);
+      const isText = isNaN(Number(countToNumber)) || (this.data.mode === 'text');
+      if (!isText && this.data.autofix) {
+        const result = countToNumber.toFixed(this.data.reserveDigit);
+        this.setData({
+          result
+        });
+      } else {
+        this.setData({
+          result: this.data.value
+        });
+      }
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/price/index.json b/miniprogram_npm/lin-ui/price/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/miniprogram_npm/lin-ui/price/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/price/index.wxml b/miniprogram_npm/lin-ui/price/index.wxml
new file mode 100644
index 0000000..8f5f00e
--- /dev/null
+++ b/miniprogram_npm/lin-ui/price/index.wxml
@@ -0,0 +1,6 @@
+<view class='price-container l-class {{deleted ? "price-del l-deleted-class" : ""}}' style='color: {{delColor?delColor:color}}'>
+  <!-- unit -->
+  <text class="l-unit-class" style="color: {{unitColor?unitColor:color}}; font-size: {{unitSize?unitSize:size}}rpx; font-weight: {{unitBold?unitBold:bold}}">{{unit}}</text>
+  <!-- count -->
+  <text class="l-value-class" style="color: {{valueColor?valueColor:color}}; font-size: {{valueSize?valueSize:size}}rpx; font-weight: {{valueBold?valueBold:bold}}">{{result}}</text>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/price/index.wxss b/miniprogram_npm/lin-ui/price/index.wxss
new file mode 100644
index 0000000..892dfbd
--- /dev/null
+++ b/miniprogram_npm/lin-ui/price/index.wxss
@@ -0,0 +1 @@
+.price-del{text-decoration:line-through!important}.price-container{display:inline-block;text-align:center;color:#3963bc;font-size:28rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/radio-group/index.js b/miniprogram_npm/lin-ui/radio-group/index.js
new file mode 100644
index 0000000..aaf20f8
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio-group/index.js
@@ -0,0 +1,101 @@
+Component({
+  externalClasses: ['l-class', 'l-error-text', 'l-error-text-class'],
+  behaviors: ['wx://form-field'],
+  relations: {
+    '../radio/index': {
+      type: 'child',
+      linked() {
+        // const currentLength = this.add();
+        // if (currentLength === this.properties.length) {
+        this.init();
+        // }
+      },
+      linkChanged() {
+      },
+      unlinked() {
+        this.init();
+      }
+    }
+  },
+  properties: {
+    current: {
+      type: String
+    },
+    noneChecked: {
+      type: Boolean,
+      value: true
+    },
+    placement: {
+      type: String,
+      value: 'column', //column row
+    },
+  },
+  data: {
+    currentLength: 0
+  },
+
+  methods: {
+    // add() {
+    //   if (this.properties.length <= 0) {
+    //     throw new Error('为提高性能，请主动设置radio-group的length属性');
+    //   }
+    //   return this.data.currentLength += 1;
+    // },
+    // reduce() {
+    //   this.length -= 1;
+    //   return this.data.currentLength -= 1;
+    // },
+
+    checkedKeyRepeat(items) {
+      let keys = items.map(item => {
+        return item.data.key;
+      });
+      const repeat = this.isRepeat(keys);
+      if (repeat !== false) {
+        throw new Error(`keys有重复元素, radio的key属性不能重复：${repeat}`);
+      }
+    },
+
+    isRepeat(arr) {
+      let hash = {};
+      for (let i in arr) {
+        if (hash[arr[i]]) //hash 哈希
+          return arr[i];
+        hash[arr[i]] = true;
+      }
+      return false;
+    },
+
+    init() {
+      const items = this.getRelationNodes('../radio/index');
+      this.checkedKeyRepeat(items);
+      this.onChangeHandle(items);
+    },
+
+    onChangeHandle(items) {
+      items.forEach((item) => {
+        let checked = this.properties.current == item.data.key;
+        item.setChecked(checked, item.data.key);
+      });
+    },
+
+    onEmitEventHandle(currentItem, select) {
+      this.properties.current = select?currentItem.key:null;
+      const items = this.getRelationNodes('../radio/index');
+      this.onChangeHandle(items);
+      // currentItem.currentKey = this.properties.current
+      Object.assign(currentItem, {
+        currentKey: this.properties.current
+      });
+      this.triggerEvent('linchange', currentItem, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  },
+  observers: {
+    'current': function() {
+      this.init();
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/radio-group/index.json b/miniprogram_npm/lin-ui/radio-group/index.json
new file mode 100644
index 0000000..9b5b1c5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio-group/index.json
@@ -0,0 +1,7 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-error-tip": "../error-tip/index",
+        "l-radio":"../radio/index"
+    }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/radio-group/index.wxml b/miniprogram_npm/lin-ui/radio-group/index.wxml
new file mode 100644
index 0000000..f22eb96
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio-group/index.wxml
@@ -0,0 +1,4 @@
+<view class="l-class radio-group radio-group-{{placement}}">
+    <slot></slot>
+</view>
+<l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
diff --git a/miniprogram_npm/lin-ui/radio-group/index.wxss b/miniprogram_npm/lin-ui/radio-group/index.wxss
new file mode 100644
index 0000000..ab2973e
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio-group/index.wxss
@@ -0,0 +1 @@
+.radio-group{width:100%}.radio-group-row{display:flex;flex-direction:row}.radio-group-column{display:flex;flex-direction:column}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/radio/index.js b/miniprogram_npm/lin-ui/radio/index.js
new file mode 100644
index 0000000..b8d2365
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio/index.js
@@ -0,0 +1,90 @@
+Component({
+  externalClasses: ['l-class', 'l-disabled-class'],
+  behaviors: ['wx://form-field'],
+  relations: {
+    '../radio-group/index': {
+      type: 'parent'
+    }
+  },
+  properties: {
+    key: String,
+    cell: Object,
+    // radio的大小
+    size: {
+      type: String,
+      value: '38rpx'
+    },
+    disabled: {
+      type: Boolean
+    },
+    custom: Boolean,
+    color: {
+      type: String,
+      value: '#ccc'
+    },
+    //  选中后的颜色
+    selectColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    disabledColor: {
+      type: String,
+      value: '#ccc'
+    },
+    placement: {
+      type: String,
+      value: 'left'
+    },
+    transition: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    checked: false
+  },
+  methods: {
+    setChecked(checked) {
+      this.setData({
+        checked,
+      });
+    },
+    // 点击radio
+    onRadioChangeTap() {
+      if (this.properties.disabled) {
+        return;
+      }
+      const parent = this.getRelationNodes('../radio-group/index')[0];
+      const noneChecked = parent.properties.noneChecked;
+      const isCurrent = this.isCurrentSelectedKey(parent);
+      let select = true;
+      if (isCurrent) {
+        select = false;
+        if (!noneChecked) {
+          return;
+        }
+      }
+      const checked = !this.data.checked;
+      this.data.checked = checked;
+
+      // 子组件不能修改父组件属性
+      // parent.properties.current = null
+      const item = {
+        checked,
+        key: this.properties.key,
+        cell: this.properties.cell
+      };
+      if (parent) {
+        parent.onEmitEventHandle(item, select);
+      }
+    },
+
+    isCurrentSelectedKey(parent) {
+      const currentKey = parent.properties.current;
+      if (currentKey == this.properties.key) {
+        return true;
+      }
+      return false;
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/radio/index.json b/miniprogram_npm/lin-ui/radio/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/radio/index.wxml b/miniprogram_npm/lin-ui/radio/index.wxml
new file mode 100644
index 0000000..d3d6015
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio/index.wxml
@@ -0,0 +1,9 @@
+<view bind:tap="onRadioChangeTap" 
+      class="label label-{{placement}} {{disabled?'label-disabled l-disabled-class':'l-class'}}">
+        <view class="radio"
+              style="color:{{checked?selectColor:(disabled?disabledColor:color)}};font-size:{{size}}">
+            <slot wx:if="{{custom}}" name="icon"/>
+            <view wx:else class="iconfont {{checked?'icon-select':'icon-unselect'}}"></view>
+        </view>
+        <slot/>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/radio/index.wxss b/miniprogram_npm/lin-ui/radio/index.wxss
new file mode 100644
index 0000000..ef79dc8
--- /dev/null
+++ b/miniprogram_npm/lin-ui/radio/index.wxss
@@ -0,0 +1 @@
+.label{display:flex;flex:1;align-items:center;font-size:30rpx;color:#333;width:100%}.label-left{flex-direction:row}.label-right{flex-direction:row-reverse;justify-content:space-between}.label-disabled{color:#ccc}.radio{margin-right:20rpx}.iconfont{font-family:iconfont!important;display:inline-flex;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAMMAAsAAAAABwQAAAK9AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBaIFyATYCJAMMCwgABCAFhG0HOxs9BsgekiQlqiBBkCKqgBDbFA9f+72eu7sf0SUKUEYCjq8CJBWhqlrpakx5POtO5RtaczeTEm4dEZ0nl3vZ/P4QsbZQwBuhkJZZe0ElkSkAzf+5nN4oP2/Mb1kucw086gUYBxToHtgmK5FAPIXhtYt1GOcJtC1qIDsxOz1Aq6DTAvGYpZNAm4sqilRoCvWatUW8V9NMb9Mt4F34/firLbQktYzOPXN3MgNGfhz/9uXVatVlHyGbzw1pExlbgEJcrfWep4izWxTahlppdgJ1RUhzJaqKUGrq6zv94yWijtZ3wRo06aZkroDgZ58ENGRb3WvkdwEvYZyONecufVjvlP/yCN9e6dcv/syKok+S/ILg5fk4v+4VjvzShk88ZPlDX7WRthx5hXV881Hg5krDX9Z84j7MqK4cjZR1JuLFnjJtMX7ePssP3xVQnfFiKPkScCUeVTcdonq0qYhT/P/M8y4Q5ZkuBeY3m1/gqWk5FFo2LcA/s72GnXZzDSQAVPNPvhv+Qobg0R/V/2uDnX/NTgHftl/fyIRqAfkuAJr34wv+r6xnVzEV1JaLLnWltj9bvld3AmI5oEKDYy/j9bPeaUIzJ5MgaViArGkJLdQtqOnYhrqmfWjbZNncMYEpRGlhwxaBMHQNSd8HyIbqaKE+Q83cH9QNQwFtZ2OyZ8dKsPpjjJIEZWBqDrLpUpFyHEQfNboQPZVP4qwiZPsQ5tgEbG1qKRYsqIjwHAu4abqNEApSuFSAZnIZyudLsIxLWZQmTQwh5b7mZqruTU3pUgHoHcOQJALJgFLmQKy0kiLK70/oS593QWhT8pJwC6kh7INgHHZ4qFWTlh6oRVvsRbqXazjTaG0IggJRsJICyExGIXl5JVC5flQWkkY0YUaky/o0s15UX23T+vrC9x2ANrogR4ocRfNNkUP5u9SpAwsAAAAA') format('woff2')}.icon-unselect:before{content:"\e6a1"}.icon-select:before{content:"\e73a"}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/rate/index.js b/miniprogram_npm/lin-ui/rate/index.js
new file mode 100644
index 0000000..a0190b1
--- /dev/null
+++ b/miniprogram_npm/lin-ui/rate/index.js
@@ -0,0 +1,59 @@
+Component({
+  /**
+     * 组件的属性列表
+     */
+  externalClasses: ['l-class', 'l-class-icon','l-class-image', 'l-icon-class','l-image-class'],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    count: {
+      type: Number,
+      value: 5
+    },
+    score:{
+      type: Number,
+      value: 0
+    },
+    size: {
+      type: String,
+      value: '36'
+    },
+    disabled: Boolean,
+    activeColor: {
+      type: String,
+      value: '#FF5252'
+    },
+    inActiveColor: {
+      type: String,
+      value: '#FFE5E5'
+    },
+    name:{
+      type:String,
+      value:'favor-fill'
+    },
+    activeImage:String,
+    inActiveImage:String
+  },
+
+  /**
+     * 组件的初始数据
+     */
+  data: {
+
+  },
+
+  /**
+     * 组件的方法列表
+     */
+  methods: {
+    handleClick(e){
+      if(this.data.disabled) return;
+      const {index} = e.currentTarget.dataset;
+      this.setData({
+        score:index + 1 
+      });
+      this.triggerEvent('linchange',{score:index+1});
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/rate/index.json b/miniprogram_npm/lin-ui/rate/index.json
new file mode 100644
index 0000000..dd10af0
--- /dev/null
+++ b/miniprogram_npm/lin-ui/rate/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-icon":"../icon/index"
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/rate/index.wxml b/miniprogram_npm/lin-ui/rate/index.wxml
new file mode 100644
index 0000000..477adfa
--- /dev/null
+++ b/miniprogram_npm/lin-ui/rate/index.wxml
@@ -0,0 +1,10 @@
+<view class="l-rate l-class">
+    <view wx:for="{{count}}" wx:key="{{item}}" class="l-rate-star" data-index="{{index}}" bindtap="handleClick">
+        <view class="icon-checked" wx:if="{{score > index}}" hover-class="none" hover-stop-propagation="false" data-rate="{{score-index}}" style="width:{{score-index<1?(score-index)*100:100}}%">
+            <image wx:if="{{activeImage &&  inActiveImage}}" class="image-item l-class-image l-image-class" src="{{activeImage}}" mode="aspectFit|aspectFill|widthFix" lazy-load="false"></image>
+            <l-icon wx:else name="{{name}}" l-class="l-class-icon l-icon-class" size="{{size}}" color="{{activeColor}}" />
+        </view>
+        <image wx:if="{{activeImage &&  inActiveImage}}" class="image-item l-class-image l-image-class" src="{{inActiveImage}}" mode="aspectFit|aspectFill|widthFix" lazy-load="false"></image>
+        <l-icon wx:else name="{{name}}" l-class="l-class-icon l-icon-class" size="{{size}}" color="{{inActiveColor}}"></l-icon>
+    </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/rate/index.wxss b/miniprogram_npm/lin-ui/rate/index.wxss
new file mode 100644
index 0000000..de88ea2
--- /dev/null
+++ b/miniprogram_npm/lin-ui/rate/index.wxss
@@ -0,0 +1 @@
+.l-rate,.l-rate-star{display:inline-flex}.l-rate-star{position:relative}.l-rate-star~.l-rate-star{margin-left:10rpx}.icon-checked{position:absolute;overflow:hidden}.image-item{width:80rpx;height:80rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/search-bar/index.js b/miniprogram_npm/lin-ui/search-bar/index.js
new file mode 100644
index 0000000..8395757
--- /dev/null
+++ b/miniprogram_npm/lin-ui/search-bar/index.js
@@ -0,0 +1,150 @@
+// cpn/search-bar/index.js
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: [
+    'l-class',
+    'l-container-class',
+    'l-placeholder-class',
+    'l-icon-class',
+    'l-input-class',
+    'l-cancel-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    confirmType: {
+      type: String,
+      value: 'search'
+    },
+    placeholder: String,
+    cancelText: {
+      type: String,
+      value: '取消'
+    },
+    address: String,
+    custom: Boolean,
+    value: String,
+    type: String,
+    icon: {
+      type: String,
+      value: 'research'
+    },
+    iconColor: {
+      type: String,
+      value: '#bdbdbd'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    bgColor: {
+      type: String,
+      value: '#f3f3f3'
+    },
+    showCancel: {
+      type: Boolean,
+      value: true
+    },
+    shape: {
+      type: String,
+      value: 'primary'
+    },
+    TextAlign: {
+      type: String,
+      value: 'left'
+    },
+    adress: String,
+    // 获取焦点
+    focus: Boolean,
+    // 是否显示清除按钮
+    clear: {
+      type: Boolean,
+      value: true
+    },
+    // 最大输入长度
+    maxlength: {
+      type: Number,
+      value: 140
+    },
+    // 是否禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 占位文字的样式  
+    placeholderStyle: {
+      type: String,
+      value: ''
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    onCancel() {
+      this.triggerEvent('lincancel', {}, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    // input属性列表
+    handleInputChange(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('linchange', detail);
+    },
+
+    handleInputFocus(event) {
+      this.triggerEvent('linfocus', event.detail);
+    },
+
+    handleInputBlur(event) {
+      this.triggerEvent('linblur', event.detail);
+    },
+
+    handleInputConfirm(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('linconfirm', detail);
+    },
+
+    onClearTap(event) {
+      this.setData({
+        value: ''
+      });
+      this.triggerEvent('linclear', event.detail, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/search-bar/index.json b/miniprogram_npm/lin-ui/search-bar/index.json
new file mode 100644
index 0000000..ccccaa9
--- /dev/null
+++ b/miniprogram_npm/lin-ui/search-bar/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-input": "../input/index",
+    "l-icon": "../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/search-bar/index.wxml b/miniprogram_npm/lin-ui/search-bar/index.wxml
new file mode 100644
index 0000000..6363ed2
--- /dev/null
+++ b/miniprogram_npm/lin-ui/search-bar/index.wxml
@@ -0,0 +1,38 @@
+<view class="search-bar l-container-class">
+  <slot name="before"/>
+  <view wx:if="{{address}}" class="icon-container">
+    <text class="city">{{address}}</text>
+    <l-icon name="down" color="#333" size="22" />
+  </view>
+  <view class="search-input l-class {{'search-input-'+ shape}}" style="{{'background-color:'+bgColor}}">
+    <slot wx:if="{{custom}}" name="icon"/>
+    <l-icon wx:else name="{{icon}}" size="{{iconSize}}" color="{{iconColor}}" l-class="l-icon-class" />
+    <input
+        confirm-type="{{confirmType}}"
+        class="input l-input-class {{'input'+ TextAlign}}"
+        value="{{ value }}"
+        type="{{type}}"
+        password="{{type==='password'}}"
+        placeholder="{{placeholder}}"
+        maxlength="{{maxlength}}"
+        placeholder-class="pls-class l-placeholder-class"
+        placeholder-style="{{placeholderStyle}}"
+        disabled="{{disabled}}"
+        focus="{{focus}}"
+        bindinput="handleInputChange"
+        bindfocus="handleInputFocus"
+        bindblur="handleInputBlur"
+        bindconfirm="handleInputConfirm"/>
+    <view class="close-wrap" wx:if="{{clear&&value}}" bindtap="onClearTap">
+        <view class="close">
+            <l-icon  name="close" color="#fff" size="15" />
+        </view>
+    </view>
+  </view>
+  <view wx:if="{{showCancel}}" 
+        class="cancle l-cancel-class" 
+        bindtap="onCancel">
+        {{cancelText}}
+  </view>
+  <slot name="after"/>
+</view>
diff --git a/miniprogram_npm/lin-ui/search-bar/index.wxss b/miniprogram_npm/lin-ui/search-bar/index.wxss
new file mode 100644
index 0000000..24d0b42
--- /dev/null
+++ b/miniprogram_npm/lin-ui/search-bar/index.wxss
@@ -0,0 +1 @@
+.search-bar{display:flex;flex-direction:row;align-items:center;padding:0 20rpx;box-sizing:border-box;width:100%}.search-input{height:60rpx;background-color:#f3f3f3;display:flex;flex-direction:row;flex:1;align-items:center;padding-left:30rpx;box-sizing:border-box}.search-input-primary{border-radius:8rpx}.search-input-circle{border-radius:30rpx}.cancle{font-size:28rpx;color:#666;display:flex;align-items:center;width:60rpx;justify-content:center;height:60rpx;margin-left:15rpx}.input{height:40rpx;line-height:40rpx;flex:1;margin-left:15rpx;font-size:28rpx;color:#666}.input-center{text-align:center}.input-left{text-align:left}.close-wrap{padding:10rpx}.close{height:30rpx;width:30rpx;background:#ddd;display:flex;align-items:center;justify-content:center;border-radius:50%;padding-top:3rpx;box-sizing:border-box;margin-right:15rpx}.pls-class{color:#bdbdbd;font-size:28rpx}.icon-container{display:flex;flex-direction:row;align-items:center;margin-right:15rpx}.city{font-size:28rpx;color:#333;margin-right:10rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/segment-item/index.js b/miniprogram_npm/lin-ui/segment-item/index.js
new file mode 100644
index 0000000..c9b540e
--- /dev/null
+++ b/miniprogram_npm/lin-ui/segment-item/index.js
@@ -0,0 +1,74 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+
+  relations: {
+    '../segment/index': {
+      type: 'parent',
+      linked() { },
+      unlinked() { }
+    },
+  },
+
+  properties: {
+    tab: String,
+    key: String,
+    icon: String,
+    iconSize: {
+      type: String,
+      value: '20'
+    },
+    image: Object,
+    picPlacement: {
+      type: String,
+      value: 'top'
+    },
+    dotBadge: Boolean,
+    badgeCount: {
+      type: Number,
+    },
+    badgeMaxCount: {
+      type: Number,
+      value: 99
+    },
+    badgeCountType: {
+      type: String,
+      value: 'overflow'
+    },
+  },
+  observers: {
+    '**': function (filed) {
+      this.updateData(filed);
+    }
+  },
+  /**
+   * 组件的初始数据
+   */
+  data: {},
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    updateData(filed) {
+      let parent = this.getRelationNodes('../segment/index')[0];
+      if (!parent) return;
+      const tabList = parent.data.tabList;
+      if (!(tabList && tabList.length > 0)) return;
+      const index = tabList.findIndex(tab => tab.key === this.data.key);
+      tabList[index] = filed;
+      parent.setData({
+        tabList: tabList
+      }, () => {
+        if (parent.data.scrollable) {
+          parent.queryMultipleNodes();
+        }
+      });
+
+    },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/segment-item/index.json b/miniprogram_npm/lin-ui/segment-item/index.json
new file mode 100644
index 0000000..62389a9
--- /dev/null
+++ b/miniprogram_npm/lin-ui/segment-item/index.json
@@ -0,0 +1,4 @@
+{
+    "component": true,
+    "usingComponents": {}
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/segment-item/index.wxml b/miniprogram_npm/lin-ui/segment-item/index.wxml
new file mode 100644
index 0000000..49aeb95
--- /dev/null
+++ b/miniprogram_npm/lin-ui/segment-item/index.wxml
@@ -0,0 +1 @@
+<slot></slot>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/segment-item/index.wxss b/miniprogram_npm/lin-ui/segment-item/index.wxss
new file mode 100644
index 0000000..e69de29
diff --git a/miniprogram_npm/lin-ui/segment/index.js b/miniprogram_npm/lin-ui/segment/index.js
new file mode 100644
index 0000000..cffb4be
--- /dev/null
+++ b/miniprogram_npm/lin-ui/segment/index.js
@@ -0,0 +1,142 @@
+import scrollCenter from '../behaviors/scrollCenter';
+
+Component({
+  /**
+     * 组件的属性列表
+     */
+  behaviors: [scrollCenter],
+  externalClasses: [
+    'l-class',
+    'l-header-class',
+    'l-class-active',
+    'l-active-class',
+    'l-class-inactive',
+    'l-inactive-class',
+    'l-class-tabimage',
+    'l-tab-image-class',
+    'l-class-header-line',
+    'l-header-line-class',
+    'l-class-line',
+    'l-line-class',
+    'l-class-icon',
+    'l-icon-class',
+    'l-class-badge',
+    'l-badge-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+
+  relations: {
+    '../segment-item/index': {
+      type: 'child',
+      linked() {
+        // 每次有子节点被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+        this.initTabs();
+      },
+      unlinked() {
+        this.initTabs();
+      }
+    },
+  },
+  properties: {
+    activeKey: {
+      type: String,
+      value: '',
+      observer: 'changeCurrent'
+    },
+    placement: {
+      type: String,
+      value: 'top',
+    },
+    scrollable: Boolean,
+    hasLine: {
+      type: Boolean,
+      value: true
+    },
+    animatedForLine: Boolean,
+    activeColor: {
+      type: String,
+    },
+    inactiveColor: {
+      type: String,
+    },
+    equalWidth: {
+      type: Boolean,
+      value: true
+    },
+    even: {
+      type: Boolean,
+      value: true
+    },
+    width: Number,
+    height: Number,
+    itemHeight: Number,
+    itemWidth: Number
+  },
+
+  /**
+     * 组件的初始数据
+     */
+  data: {
+    tabList: [],
+    currentIndex: 0
+  },
+
+  /**
+     * 组件的方法列表
+     */
+  methods: {
+    initTabs(val = this.data.activeKey) {
+      let items = this.getRelationNodes('../segment-item/index');
+      if (items.length > 0) {
+        if (items.length === this.data.tabList.length) return;
+        let activeKey = val,
+          currentIndex = this.data.currentIndex;
+        const tab = items.map((item, index) => {
+          activeKey = !val && index == 0 ? item.data.key : activeKey;
+          currentIndex = item.data.key === activeKey ? index : currentIndex;
+          return {
+            ...item.data
+          };
+        });
+        this.setData({
+          tabList: tab,
+          activeKey,
+          currentIndex,
+        }, () => {
+          if (this.data.scrollable) {
+            this.queryMultipleNodes();
+          }
+        });
+      }
+    },
+
+    handleChange(e) {
+      const activeKey = e.currentTarget.dataset.key;
+      const currentIndex = e.currentTarget.dataset.index;
+      this._setChangeData({
+        activeKey,
+        currentIndex
+      });
+    },
+
+    _setChangeData({
+      activeKey,
+      currentIndex
+    }) {
+      this.setData({
+        activeKey,
+        currentIndex
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+      this.triggerEvent('linchange', {
+        activeKey,
+        currentIndex
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/segment/index.json b/miniprogram_npm/lin-ui/segment/index.json
new file mode 100644
index 0000000..503bf6f
--- /dev/null
+++ b/miniprogram_npm/lin-ui/segment/index.json
@@ -0,0 +1,8 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-badge": "../badge/index",
+    "l-segment-item":"../segment-item/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/segment/index.wxml b/miniprogram_npm/lin-ui/segment/index.wxml
new file mode 100644
index 0000000..b4cc7a2
--- /dev/null
+++ b/miniprogram_npm/lin-ui/segment/index.wxml
@@ -0,0 +1,27 @@
+<view class="l-tabs l-class {{'l-placement-'+placement}} {{placement=='left'||placement=='right'?'l-tabs-vertical':'l-tabs-horizontal'}} {{scrollable ? 'l-tabs-scroll':''}}"  style="{{width?'width:'+ width +'rpx;':'' }}{{height?'height:'+height+'rpx':''}}">
+    <scroll-view scroll-x="{{placement=='top'||placement=='bottom' && scrollable}}" scroll-y="{{placement=='left'||placement=='right' && scrollable}}" scroll-top="{{transformY}}" scroll-left="{{transformX}}" scroll-with-animation 
+    class="l-tabsscroll l-header-class {{hasLine?'l-tabs-header-line l-class-header-line l-header-line-class':''}}"
+    style="{{width?'width:'+ width +'rpx;':'' }} {{height?'height:'+height+'rpx':''}}">
+        <view class="l-tabs-header {{( even && equalWidth)?'l-tabs-equal-header':'l-tabs-unequal-header'}}">
+            <block wx:for="{{tabList}}" wx:key="{{item.key}}">
+                <view wx:if="{{item.tab}}" class="l-tabs-item {{( even && equalWidth)?'l-tabs-equal-width':'l-tabs-unequal-width'}} {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+item.picPlacement}}" 
+                    style="color:{{item.key===activeKey?activeColor:inactiveColor}};{{itemWidth?'width:'+ itemWidth +'rpx':'' }};{{itemHeight?'height:'+itemHeight+'rpx':''}}" data-key="{{item.key}}" data-index="{{index}}" bind:tap="handleChange">
+                    <l-badge l-self-class="badge-view" l-class="l-class-badge l-badge-class" wx:if="{{(item.badgeCount > 0 || item.dotBadge )}}" value="{{item.badgeCount}}" dot="{{item.dotBadge}}" max-count="{{item.badgeMaxCount}}" number-type="{{item.badgeCountType}}">
+                        <template is="tab-item" data="{{item,activeKey,hasLine,activeColor,inactiveColor,animatedForLine}}" />
+                    </l-badge>
+                    <template is="tab-item" data="{{item,activeKey,hasLine,activeColor,inactiveColor,animatedForLine}}" wx:else />
+                    <view class="l-tab-line {{item.key===activeKey?'l-class-line l-line-class':''}} {{animatedForLine?'l-line-aminmated':''}}" wx:if="{{hasLine}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+                </view>
+                <view wx:else class="l-tabs-item {{(even && equalWidth)?'l-tabs-equal-width':'l-tabs-unequal-width'}} {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+picPlacement}}" style="color:{{item.key===activeKey?activeColor:inactiveColor}}" data-key="{{item.key}}" data-index="{{index}}" bind:tap="handleChange">
+                    <slot name="{{item.key}}"></slot>
+                    <view class="l-tab-line {{item.key===activeKey?'l-class-line l-line-class':''}} {{animatedForLine?'l-line-aminmated':''}}" wx:if="{{hasLine}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+                </view>
+            </block>
+        </view>
+    </scroll-view>
+</view>
+<template name="tab-item">
+    <image wx:if="{{ item.image.activeImage || item.image.defaultImage }}" src="{{item.key===activeKey? item.image.activeImage:item.image.defaultImage}}" class="l-tab-image l-class-tabimage l-tab-image-class" />
+    <l-icon wx:if="{{item.icon}}" l-class="l-class-icon l-icon-class" l-self-class="{{item.key===activeKey ? 'l-icon-active':'l-icon-inactive'}}" name="{{item.icon}}" color="{{item.key===activeKey?activeColor:inactiveColor}}" size="{{item.iconSize}}"/>
+    {{item.tab}}
+</template>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/segment/index.wxss b/miniprogram_npm/lin-ui/segment/index.wxss
new file mode 100644
index 0000000..2b961d3
--- /dev/null
+++ b/miniprogram_npm/lin-ui/segment/index.wxss
@@ -0,0 +1 @@
+.l-tabs{overflow:auto;width:100%}.l-tabs-header{display:flex;width:100%;flex-direction:row;align-items:center}.l-tabs-header .l-tabs-item{font-size:28rpx;text-align:center;box-sizing:border-box;display:flex;justify-content:center;align-items:center}.l-tabs-header .l-icon-active,.l-tabs-header .l-tabs-active{color:#333}.l-tabs-header .l-icon-active,.l-tabs-header .l-icon-inactive{font-size:28rpx}.l-tabs-header .l-icon-inactive,.l-tabs-header .l-tabs-inactive{color:#bbb}.l-tabs-header .l-tabsitems-row{flex-direction:row}.l-tabs-header .l-tabsitems-row .l-icon-active,.l-tabs-header .l-tabsitems-row .l-icon-inactive{margin-right:10rpx}.l-tabs-header .l-tabsitems-row-reverse{flex-direction:row-reverse}.l-tabs-header .l-tabsitems-row-reverse .l-icon-active,.l-tabs-header .l-tabsitems-row-reverse .l-icon-inactive{margin-left:10rpx}.l-placement-bottom,.l-placement-top{height:80rpx}.l-placement-bottom .l-tabs-header,.l-placement-top .l-tabs-header{height:100%}.l-placement-bottom .l-tabs-header .l-tabs-item,.l-placement-top .l-tabs-header .l-tabs-item{min-height:100%}.l-placement-right{flex-direction:row-reverse}.l-placement-bottom{flex-direction:column-reverse}.l-tabs-vertical .l-tabpanel-swiper{height:initial}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header{-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header .l-tabs-item{overflow:visible}.l-tabs-vertical{width:160rpx}.l-tabs-vertical .l-tabsscroll{width:160rpx;box-sizing:border-box}.l-tabs-vertical .l-tabs-equal-header{height:100%}.l-tabs-vertical .l-tabs-header{width:100%;flex-direction:column;-webkit-overflow-scrolling:touch;white-space:nowrap;overflow-x:hidden}.l-tabs-vertical .l-tabs-header .l-tabs-item.l-tabs-active{background:#fff}.l-tabs-vertical .l-tabs-header .l-tabs-unequal-width{height:80rpx}.l-tabs-vertical .l-tabs-header .l-tabs-item{overflow:visible;background:#f6f8fa;width:100%}.l-tabs-item{position:relative}.l-tab-line{position:absolute;bottom:0;left:0;background:#000}.l-tabs-horizontal .l-tabs-equal-width{flex:1}.l-tabs-horizontal .l-tabs-unequal-width{padding:0 20rpx}.l-tabs-horizontal .l-tabsscroll{height:100%;box-sizing:border-box}.l-tabs-horizontal .l-tab-line{height:4rpx;width:0;left:100%;right:0;margin:0 auto}.l-tabs-horizontal .l-line-aminmated{transition:.2s all linear}.l-tabs-horizontal .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{left:0}.l-tabs-horizontal .l-tabs-active .l-tab-line{width:100%;left:0}.l-tabs-horizontal .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-placement-top .l-tab-line{bottom:0;transform:translateY(-100%)}.l-placement-top .l-tabs-header-line{border-bottom:1px solid #f3f3f3}.l-placement-bottom .l-tab-line{top:0}.l-placement-bottom .l-tabs-header-line{border-top:1px solid #f3f3f3}.l-tabs-vertical .l-tab-line{width:6rpx;height:0;border-radius:0 6rpx 6rpx 0;top:0;margin:auto 0}.l-tabs-vertical .l-line-aminmated{transition:.2s all linear}.l-tabs-vertical .l-tabs-active .l-tab-line{height:40rpx}.l-tabs-vertical .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-tabs-vertical .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{height:0;top:0}.l-placement-left .l-tab-line{right:auto}.l-placement-left .l-tabs-header-line{border-left:1px solid #f3f3f3}.l-placement-right .l-tab-line{right:0;left:auto}.l-placement-right .l-tabs-header-line{border-right:1px solid #f3f3f3}.l-tab-image{width:100rpx;height:100rpx}.l-tab-image-placement-top{flex-direction:column}.l-tab-image-placement-bottom{flex-direction:column-reverse}.l-tab-image-placement-left{flex-direction:row}.l-tab-image-placement-right{flex-direction:row-reverse}.l-tabs-header .badge-view{top:-20rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/slide-view/index.js b/miniprogram_npm/lin-ui/slide-view/index.js
new file mode 100644
index 0000000..1f46356
--- /dev/null
+++ b/miniprogram_npm/lin-ui/slide-view/index.js
@@ -0,0 +1,187 @@
+// slide-view/slide-view.js
+const _windowWidth = wx.getSystemInfoSync().windowWidth;
+Component({
+  /**
+   * 组件的属性列表
+   */
+  options: {
+    multipleSlots: true,
+  },
+  properties: {
+    // 组件显示区域的宽度
+    width: {
+      type: Number,
+      value: _windowWidth
+    },
+    // 组件显示区域的高度
+    height: {
+      type: Number,
+      value: 100,
+    },
+    // 组件滑动显示区域的宽度
+    slideWidth: {
+      type: Number,
+      value: 0
+    },
+    // 阈值
+    threshold: {
+      type: Number,
+      value: 0
+    },
+    // 禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 自动关闭
+    autoClose: {
+      type: Boolean,
+      value: false
+    },
+    // 主动关闭
+    close: {
+      type: Boolean,
+      value: false,
+      observer: function (newVal) {
+        if (newVal) {
+          this.setData({
+            popup: false,
+            x: 0
+          });
+          this.onCloseTap();
+        } 
+      }
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    viewWidth: _windowWidth,
+    //  movable-view偏移量
+    x: 0,
+    //  movable-view是否可以出界
+    out: false,
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  ready() {
+    this.updateRight();
+  },
+  methods: {
+    updateRight() {
+
+      // 获取右侧滑动显示区域的宽度
+      const that = this; 
+      const query = wx.createSelectorQuery().in(this);
+      query.select('.right').boundingClientRect(function (res) {
+        that._slideWidth = res.width;
+        let width = res.width <=50 ? res.width : 50;
+        that._threshold = that.properties.threshold ? that.properties.threshold : width;
+        that._viewWidth = that.data.width + res.width * (750 / _windowWidth);
+        that.setData({
+          viewWidth: that._viewWidth
+        });
+      }).exec();
+    },
+    onTouchStart(e) {
+      this._startX = e.changedTouches[0].pageX;
+    },
+    //  当滑动范围超过阈值自动完成剩余滑动
+    onTouchEnd(e) {
+      if (this.properties.disabled) return;
+
+      this._endX = e.changedTouches[0].pageX;
+      this._length = this._endX - this._startX;
+
+      const {
+        _endX,
+        _startX,
+        _threshold
+      } = this;
+
+      if (this._length > _threshold) {
+        this.setData({
+          popup: false,
+          x: 0,
+        });
+        this.onCloseTap();
+
+      }
+      if (_endX > _startX && this.data.out === false) return;
+      if (_startX - _endX >= _threshold) {
+        this.setData({
+          x: -this._slideWidth,
+          popup: true,
+          close: false
+        });
+        this.onOpenTap();
+      } else if (_startX - _endX < _threshold && _startX - _endX > 0 && this.data.popup != true) {
+        this.setData({
+          x: 0
+        });
+        this.onCloseTap();
+
+      } else if (_endX - _startX >= _threshold) {
+        this.setData({
+          x: 0
+        });
+        this.onCloseTap();
+
+      } else if (_endX - _startX < _threshold && _endX - _startX > 0) {
+        this.setData({
+          x: -this._slideWidth,
+          close: false
+        });
+        this.onOpenTap();
+
+      }
+    },
+    //  根据滑动的范围设定是否允许movable-view出界
+    onChange(e) {
+      if (!this.data.out && e.detail.x < -this._threshold) {
+        this.setData({
+          out: true
+        });
+      } else if (this.data.out && e.detail.x >= -this._threshold) {
+        this.setData({
+          out: false
+        });
+      }
+    },
+
+    // 点击 右边区域
+    onRightTap() {
+      let detail = 'click right';
+      let option = { bubbles: true, composed: true };
+      if (this.properties.autoClose) {
+        this.setData({
+          popup: false,
+          x: 0
+        });
+        this.onCloseTap();
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    },
+
+    // 打开后触发
+    onOpenTap() {
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+
+      this.triggerEvent('slideopen', detail, option);
+    },
+
+    // 关闭后触发
+    onCloseTap() {
+      let detail = false;
+      let option = { bubbles: true, composed: true };
+
+      this.triggerEvent('slideclose', detail, option);
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/slide-view/index.json b/miniprogram_npm/lin-ui/slide-view/index.json
new file mode 100644
index 0000000..78013bd
--- /dev/null
+++ b/miniprogram_npm/lin-ui/slide-view/index.json
@@ -0,0 +1,5 @@
+{
+  "component": true,
+  "usingComponents": {
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/slide-view/index.wxml b/miniprogram_npm/lin-ui/slide-view/index.wxml
new file mode 100644
index 0000000..c0bc342
--- /dev/null
+++ b/miniprogram_npm/lin-ui/slide-view/index.wxml
@@ -0,0 +1,24 @@
+
+<!-- slide-view/slide-view.wxml -->
+<movable-area class="container" style="width: {{width}}rpx; height: {{height}}rpx;">
+  <movable-view
+    direction="horizontal"
+    class="movable-content"
+    out-of-bounds="{{out}}"
+    damping="20"
+    disabled="{{disabled}}"
+    x="{{x}}"
+    style="width: {{width + slideWidth}}rpx; height: {{height}}rpx;"
+    inertia
+    bindtouchend="onTouchEnd"
+    bindtouchstart="onTouchStart"
+    bindchange="onChange"
+  >
+    <view class="left"  style="width: {{width}}rpx; height: {{height}}rpx;">
+      <slot name="left"></slot>
+    </view>
+    <view class="right" bindtap="onRightTap" style="width: {{slideWidth}}rpx; height: {{height}}rpx;">
+      <slot name="right"></slot>
+    </view>
+  </movable-view>
+</movable-area>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/slide-view/index.wxss b/miniprogram_npm/lin-ui/slide-view/index.wxss
new file mode 100644
index 0000000..581bd5c
--- /dev/null
+++ b/miniprogram_npm/lin-ui/slide-view/index.wxss
@@ -0,0 +1 @@
+.movable-content{display:flex;direction:row;overflow:hidden}.container{overflow:hidden}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/spin/index.js b/miniprogram_npm/lin-ui/spin/index.js
new file mode 100644
index 0000000..8afa7f1
--- /dev/null
+++ b/miniprogram_npm/lin-ui/spin/index.js
@@ -0,0 +1,19 @@
+Component({
+  externalClasses: ['l-class'],
+  properties: {
+    color: String,
+    show: Boolean,
+    type: {
+      type: String,
+      value: 'flash'
+    },
+    // 自定义
+    custom: Boolean,
+    size: {
+      type: String,
+      value: 'default',
+    },
+  },
+  methods: {
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/spin/index.json b/miniprogram_npm/lin-ui/spin/index.json
new file mode 100644
index 0000000..4a42478
--- /dev/null
+++ b/miniprogram_npm/lin-ui/spin/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/spin/index.wxml b/miniprogram_npm/lin-ui/spin/index.wxml
new file mode 100644
index 0000000..af5cd83
--- /dev/null
+++ b/miniprogram_npm/lin-ui/spin/index.wxml
@@ -0,0 +1,10 @@
+<view wx:if="{{show}}" class="{{type=='flash'?'l-class':''}} {{type + '-spinner'}} {{type=='change'||custom?'':'spinner-' + type + '-' + size}}">
+  <block wx:if="{{custom}}">
+    <slot />  
+  </block>
+  <block wx:else>
+    <view style="{{color?'background-color:'+color:''}}" class="l-class {{type+'-bounce1'}}   {{'spinner-'+ type + '-' + size}}"></view>
+    <view wx:if="{{type=='flash' || type=='change'}}" style="{{color?'background-color:'+color:''}}" class="l-class {{type+'-bounce2'}} {{'spinner-'+ type + '-' + size}}"></view>
+    <view wx:if="{{type=='change'}}" style="{{color?'background-color:'+color:''}}" class="l-class {{type+'-bounce3'}}   {{'spinner-'+ type + '-' + size}}"></view>
+  </block>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/spin/index.wxss b/miniprogram_npm/lin-ui/spin/index.wxss
new file mode 100644
index 0000000..8bd139a
--- /dev/null
+++ b/miniprogram_npm/lin-ui/spin/index.wxss
@@ -0,0 +1 @@
+.spinner-flash-default{width:60rpx;height:60rpx}.spinner-flash-mini{width:40rpx;height:40rpx}.spinner-flash-large{width:80rpx;height:80rpx}.spinner-flip-default{width:60rpx;height:60rpx}.spinner-flip-mini{width:40rpx;height:40rpx}.spinner-flip-large{width:80rpx;height:80rpx}.spinner-change-default{width:50rpx;height:50rpx}.spinner-change-mini{width:30rpx;height:30rpx}.spinner-change-large{width:70rpx;height:70rpx}.flash-spinner{position:relative}.flash-bounce1,.flash-bounce2{width:100%;height:100%;border-radius:50%;background-color:#3963bc;opacity:.6;position:absolute;top:0;left:0;-webkit-animation:bounce 2s infinite ease-in-out;animation:bounce 2s infinite ease-in-out}.flash-bounce2{-webkit-animation-delay:-1s;animation-delay:-1s}@-webkit-keyframes bounce{0%,100%{-webkit-transform:scale(0)}50%{-webkit-transform:scale(1)}}@keyframes bounce{0%,100%{transform:scale(0);-webkit-transform:scale(0)}50%{transform:scale(1);-webkit-transform:scale(1)}}.flip-bounce1{background-color:#3963bc;-webkit-animation:rotateplane 1.2s infinite ease-in-out;animation:rotateplane 1.2s infinite ease-in-out}@-webkit-keyframes rotateplane{0%{-webkit-transform:perspective(120px)}50%{-webkit-transform:perspective(120px) rotateY(180deg)}100%{-webkit-transform:perspective(120px) rotateY(180deg) rotateX(180deg)}}@keyframes rotateplane{0%{transform:perspective(120px) rotateX(0) rotateY(0);-webkit-transform:perspective(120px) rotateX(0) rotateY(0)}50%{transform:perspective(120px) rotateX(-180.1deg) rotateY(0);-webkit-transform:perspective(120px) rotateX(-180.1deg) rotateY(0)}100%{transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg);-webkit-transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)}}.change-spinner{width:240rpx;text-align:center}.change-bounce1{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.32s;animation-delay:-.32s}.change-bounce2{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.16s;animation-delay:-.16s}.change-bounce3{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}@-webkit-keyframes bouncedelay{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes bouncedelay{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/status-show/image/address.png b/miniprogram_npm/lin-ui/status-show/image/address.png
new file mode 100644
index 0000000..add1bcf
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/address.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/image/cart.png b/miniprogram_npm/lin-ui/status-show/image/cart.png
new file mode 100644
index 0000000..a7cd892
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/cart.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/image/data.png b/miniprogram_npm/lin-ui/status-show/image/data.png
new file mode 100644
index 0000000..6c9baf3
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/data.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/image/error.png b/miniprogram_npm/lin-ui/status-show/image/error.png
new file mode 100644
index 0000000..900ae9d
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/error.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/image/network.png b/miniprogram_npm/lin-ui/status-show/image/network.png
new file mode 100644
index 0000000..f82ec6d
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/network.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/image/order.png b/miniprogram_npm/lin-ui/status-show/image/order.png
new file mode 100644
index 0000000..8e95de8
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/order.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/image/product.png b/miniprogram_npm/lin-ui/status-show/image/product.png
new file mode 100644
index 0000000..5574a24
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/product.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/image/success.png b/miniprogram_npm/lin-ui/status-show/image/success.png
new file mode 100644
index 0000000..d03f7e9
Binary files /dev/null and b/miniprogram_npm/lin-ui/status-show/image/success.png differ
diff --git a/miniprogram_npm/lin-ui/status-show/index.js b/miniprogram_npm/lin-ui/status-show/index.js
new file mode 100644
index 0000000..3bbe18b
--- /dev/null
+++ b/miniprogram_npm/lin-ui/status-show/index.js
@@ -0,0 +1,145 @@
+// dist/status-show/index.js
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-class', 'l-image-class', 'l-button-class', 'l-describe-class'],
+  properties: {
+    show: Boolean,
+    type: {
+      type: String,
+      value: 'success',
+      observer: '_changeStatus'
+    },
+    image: String,
+    describe: String,
+    buttonText: String,
+    bgColor: {
+      type: String,
+      value: '#fff'
+    },
+    fullScreen: {
+      type: Boolean,
+      value: true,
+    },
+    openApi: {
+      type: Boolean,
+      value: true
+    },
+    custom: {
+      type: Boolean,
+      value: false
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  attached() {
+    this._changeStatus();
+    if (this.data.openApi) this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showStatusShow = (options) => {
+        const {
+          type = 'success',
+          image = '',
+          describe = '',
+          buttonText = '',
+          bgColor = '#fff',
+          fullScreen = true
+        } = { ...options };
+        this.setData({
+          show: true,
+          type,
+          image,
+          describe,
+          buttonText,
+          bgColor,
+          fullScreen
+        });
+      };
+      wx.lin.hideStatusShow = () => {
+        this.setData({
+          show: false
+        });
+      };
+    },
+
+    _changeStatus() {
+      switch (this.properties.type) {
+      case 'success':
+        this.setData({
+          typeImage: 'image/success.png',
+          typeText: '操作成功~'
+        });
+        break;
+      case 'error':
+        this.setData({
+          typeImage: 'image/error.png',
+          typeText: '操作失败~'
+        });
+        break;
+      case 'cart':
+        this.setData({
+          typeImage: 'image/cart.png',
+          typeText: '购物车空空如也，去逛逛吧~'
+        });
+        break;
+      case 'order':
+        this.setData({
+          typeImage: 'image/order.png',
+          typeText: '您暂时还没有订单哦~'
+        });
+        break;
+      case 'network':
+        this.setData({
+          typeImage: 'image/network.png',
+          typeText: '糟糕！网络错误~'
+        });
+        break;
+      case 'address':
+        this.setData({
+          typeImage: 'image/address.png',
+          typeText: '您暂时还没有地址哦~'
+        });
+        break;
+      case 'product':
+        this.setData({
+          typeImage: 'image/product.png',
+          typeText: '暂时还没有商品哦~~'
+        });
+        break;
+      case 'data':
+        this.setData({
+          typeImage: 'image/data.png',
+          typeText: '暂时还没有相关数据哦~~'
+        });
+        break;
+      }
+    },
+
+    tapStatusShow() {
+      this.triggerEvent('lincorvertap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/status-show/index.json b/miniprogram_npm/lin-ui/status-show/index.json
new file mode 100644
index 0000000..6a37aa3
--- /dev/null
+++ b/miniprogram_npm/lin-ui/status-show/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-button":"../button/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/status-show/index.wxml b/miniprogram_npm/lin-ui/status-show/index.wxml
new file mode 100644
index 0000000..0067a5c
--- /dev/null
+++ b/miniprogram_npm/lin-ui/status-show/index.wxml
@@ -0,0 +1,20 @@
+<view wx:if="{{show}}" class="l-status-container l-class {{fullScreen ? 'content': ''}}" style="{{'background:'+bgColor}}" bind:tap="tapStatusShow">
+  <block wx:if="{{custom}}">
+    <slot />
+  </block>
+  <block wx:else>
+    <image wx:if="{{image}}" class="left-img l-image-class {{fullScreen ? 'image_margin_top': ''}}" src="{{image}}"></image>
+    <image wx:else class="{{type=='success'||type=='error'?'left-img':'top-img'}} {{type=='address'?'ad-img':''}} l-image-class {{fullScreen ? 'image_margin_top': ''}}" src="{{typeImage}}"></image>
+    <text wx:if="{{describe}}" class="status-text l-describe-class">{{describe}}</text>
+    <text wx:else class="status-text l-describe-class">{{typeText}}</text>
+    <l-button l-class="l-button-class button_margin_top" wx:if="{{buttonText}}">
+      <view>{{buttonText}}</view>
+    </l-button>
+    <l-button l-class="l-button-class button_margin_top" wx:if="{{!buttonText && type =='network'}}">
+      <view>重新加载</view>
+    </l-button>
+    <l-button l-class="l-button-class button_margin_top" wx:if="{{!buttonText && type =='cart'}}">
+      <view>去逛逛</view>
+    </l-button>
+  </block>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/status-show/index.wxss b/miniprogram_npm/lin-ui/status-show/index.wxss
new file mode 100644
index 0000000..12cfec8
--- /dev/null
+++ b/miniprogram_npm/lin-ui/status-show/index.wxss
@@ -0,0 +1 @@
+.l-status-container{background-color:#fff;flex-direction:column;display:flex;align-items:center;justify-content:center;width:500rpx}.content{position:fixed;top:0;left:0;background:#fff;height:100%;width:100%}.ad-img{width:198rpx!important;height:204rpx!important}.top-img{width:264rpx;height:204rpx}.left-img{width:120rpx;height:184rpx}.image_margin_top{margin-top:-250rpx}.status-text{font-size:30rpx;color:#45526b;margin-top:40rpx}.button_margin_top{margin-top:80rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/step/index.js b/miniprogram_npm/lin-ui/step/index.js
new file mode 100644
index 0000000..285689d
--- /dev/null
+++ b/miniprogram_npm/lin-ui/step/index.js
@@ -0,0 +1,50 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: [
+    'l-class',
+    'l-step-class',
+    'l-title-class',
+    'l-describe-class',
+    'l-line-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  relations: {
+    '../steps/index': {
+      type: 'parent'
+    },
+  },
+  properties: {
+    icon: String,
+    title: String,
+    describe: String,
+    iconSize: {
+      type: Number,
+      value: 24
+    },
+    iconColor: String,
+    custom: Boolean
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    // 与父组件通信并绑定相关配置数据
+    updateDataChange(options) {
+      this.setData({
+        ...options
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/step/index.json b/miniprogram_npm/lin-ui/step/index.json
new file mode 100644
index 0000000..9ea06fa
--- /dev/null
+++ b/miniprogram_npm/lin-ui/step/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/step/index.wxml b/miniprogram_npm/lin-ui/step/index.wxml
new file mode 100644
index 0000000..bbb90ca
--- /dev/null
+++ b/miniprogram_npm/lin-ui/step/index.wxml
@@ -0,0 +1,75 @@
+<view class="step {{'step-'+direction}} l-class"  
+      style="{{direction==='row'?'width:'+(1/length)*stepsWidth+'px':'min-height:'+stepMinHeight+'rpx'}}">
+  <view class="step-container l-step-class {{'step-container-'+direction}}">
+    <view wx:if="{{custom}}" class="step-custom">
+      <slot name="dot"/>
+    </view>
+    <view wx:else
+          class="l-step-class {{dot && !icon?'step-dot-'+currentStatus.setStatus(activeIndex,index,status)+' step-dot':'step-'+currentStatus.setStatus(activeIndex,index,status)+' step-icon'}}"
+          style="{{dot?currentStatus.dotStyle(activeIndex,index,color):currentStatus.statusStyle(activeIndex,index,color,status)}}">
+      <l-icon wx:if="{{icon}}" name="{{icon}}" size="{{iconSize}}" color="{{(currentStatus.setStatus(activeIndex,index,status))==='process'?'#3963BC':iconColor}}"/>
+      <block wx:if="{{!dot && !icon}}">
+        <view wx:if="{{currentStatus.setStatus(activeIndex,index,status)==='error' || currentStatus.setStatus(activeIndex,index,status)==='finish'}}" 
+              class="iconfont icon-{{currentStatus.setStatus(activeIndex,index,status)}}"></view>
+        <block wx:else>{{index+1}}</block>
+      </block>
+    </view>
+  </view>
+  <view class="step-content {{'step-content-'+direction}}">
+    <view class="l-title-class {{activeIndex===index?'step-title-process':'step-title'}}">
+      {{title}}
+    </view>
+    <view class="l-describe-class step-describe">
+      {{describe}}
+      <slot name="describe"/>
+    </view>
+  </view>
+  <view class="step-line l-line-class {{'step-line-'+ direction}} {{currentStatus.isReverse(reverse,activeIndex,index)?'step-line-finish':'step-line-wait'}}"
+        style="{{activeIndex>index?('background-color:'+color):''}}" 
+        wx:if="{{reverse?(index!==0):(length!==index+1)}}">
+  </view>
+</view>
+
+<wxs module="currentStatus">
+var setStatus = function(activeIndex,index,status){
+  if(activeIndex===index){
+    return status || 'process'
+  } else if(activeIndex>index){
+    return 'finish'
+  }else{
+    return 'wait'
+  }
+}
+
+var statusStyle = function(activeIndex,index,color,status){
+  if(activeIndex===index){
+    return status==='error'?'':('background-color:' + color)
+  } else if(activeIndex>index){
+    return ('border-color:' + color + ';color:' + color)
+  }else{
+    return ''
+  }
+}
+
+var dotStyle = function(activeIndex,index,color){
+  if(activeIndex>=index){
+    return ('background-color:' + color)
+  } else{
+    return ''
+  }
+}
+
+var isReverse = function(reverse,activeIndex,index) {
+  if(reverse){
+    return (activeIndex>=index)
+  }
+  return (activeIndex>index)
+}
+
+module.exports = {
+  setStatus:setStatus,
+  statusStyle:statusStyle,
+  dotStyle:dotStyle,
+  isReverse:isReverse
+}
+</wxs>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/step/index.wxss b/miniprogram_npm/lin-ui/step/index.wxss
new file mode 100644
index 0000000..767b8eb
--- /dev/null
+++ b/miniprogram_npm/lin-ui/step/index.wxss
@@ -0,0 +1 @@
+.step{display:flex;position:relative}.step-custom{z-index:2}.step-row{flex-direction:column;align-items:center}.step-column{flex-direction:row;padding-left:30rpx;box-sizing:border-box}.step-container{display:flex;justify-content:center;z-index:2;align-items:center;background-color:#fff}.step-container-row{width:70rpx;height:40rpx}.step-container-column{height:60rpx;width:40rpx}.step-icon{width:40rpx;height:40rpx;display:flex;align-items:center;justify-content:center;font-size:22rpx;transition:.5s;box-sizing:border-box}.step-process{color:#fff;background-color:#3963bc;border-radius:50%}.step-error{background-color:#fff;border:1px solid #f4516c;color:#f4516c;border-radius:50%}.step-finish{background-color:#fff;color:#3963bc;border:1px solid #3963bc;border-radius:50%}.step-wait{background-color:#fff;color:#c4c9d2;border:1px solid #c4c9d2;border-radius:50%}.step-dot{width:24rpx;height:24rpx;border-radius:50%;transition:.5s}.step-dot-process{background-color:#3963bc}.step-dot-wait{background-color:#c4c9d2}.step-dot-error{background-color:#f4516c}.step-dot-finish{background-color:#3963bc}.step-line{background:#c4c9d2;transition:.5s;position:absolute;z-index:0}.step-line-row{height:2rpx;width:100%;left:50%;top:18rpx}.step-line-column{width:2rpx;height:100%;top:20rpx;left:48rpx}.step-line-wait{background-color:#e8e8e8}.step-line-finish{background-color:#3963bc}.step-content{display:flex;flex-direction:column}.step-content-row{align-items:center;width:100%}.step-content-column{margin-left:15rpx}.step-title{color:#595959;font-size:26rpx;line-height:40rpx;margin:10rpx 0}.step-title-process{color:#333;font-size:28rpx;line-height:40rpx;margin:10rpx 0}.step-describe{color:#8c98ae;font-size:22rpx}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAK8AAsAAAAABpQAAAJvAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgp8gQsBNgIkAwwLCAAEIAWEbQc2G9EFyK4wbuGJaCgrSmkBCSe/ZeUtviBzEXztx/bd3f+oNEiuzaerJhKN6WQSJFqlZELxTOZqTS9l0hsflgVC/bD3z/dzv8lMXAksyeryeByfVkhgV93EvwdIwC+b/hetH5jPyAA+z+X0JtCBXONbltMcw496AcYBBbYnRoEEXEQBcAqyOwK15PsEmg2KiewMTy6yCoWzLBD3lqGwilJKUaRqo1C37C3iRaUxPaUnPMffj18LUUFSZc7a3bshnfV++DD/2GVISBPo4QoZU5hCXLeWThULiSvWbCrpb64VIS2VhYlVpqU+6B8vETWnsxWM0XLiI19G8OGABDKoy5VBzDRje98gRHertt+2fLx2cdC6ZJwcnK226Ifh0uzy4vzK8sLSytxprqHAHexGbz8/6za6C3ePjwW29viP3ailnm7Zz+SntAd5IV0IBHuvvy3Xd/41thTw/osdBRahcefh4Gepwb5iah13LrrKV9mRrBsIJKhCjvrnxLq9Trf0wb2ERn0TIg0GcmSNhsjCTqHSYgm1RutoNmnkcIseUrEoTZiwRRA63SBp94as0zNZ2BdU+v2h1hnFaHYczWe2GAmrakCiQqiDmgdLEz73vFSVdM+jkXUVWdTG/DLK0MpCOpGqVkfQR7nEhjBnZIg4cCk8GCaPoesKCKSwUaOESRS0J5O87UUJTXisyjYJKQjSAVUesGgEHw+Hk6ra5+chQ5ZLIXsEDfllSApZ44O0hBRAjph8SPAoz4RyDBmEcICTBA8YJrOQyyWAoH2WDWlIgjmhEGiXdAdx1JTY3uL93xFo5kzMkSJHUT+g+5BNxVpWMAYAAA==') format('woff2')}.iconfont{font-family:iconfont!important;font-size:24rpx;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-finish:before{content:"\e600"}.icon-error:before{content:"\e6cf"}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/steps/index.js b/miniprogram_npm/lin-ui/steps/index.js
new file mode 100644
index 0000000..73a2fc5
--- /dev/null
+++ b/miniprogram_npm/lin-ui/steps/index.js
@@ -0,0 +1,76 @@
+Component({
+  externalClasses: [
+    'l-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  relations: {
+    '../step/index': {
+      type: 'child',
+      linked() {
+        this._initSteps();
+      },
+      unlinked() {
+        this._initSteps();
+      }
+    },
+  },
+
+  properties: {
+    direction: {
+      type: String,
+      value: 'row'
+    },
+    activeIndex: {
+      type: Number,
+      value: 0
+    },
+    color: String,
+    stepMinHeight: {
+      type: String,
+      value: '120'
+    },
+    status: {
+      type: String,
+      value: 'process'
+    },
+    dot: Boolean,
+    reverse: Boolean
+  },
+
+  observers: {
+    'activeIndex': function () {
+      this._initSteps();
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _initSteps() {
+      const query = wx.createSelectorQuery().in(this);
+      query.select('.steps-container').boundingClientRect().exec(res => {
+        let steps = this.getRelationNodes('../step/index');
+        this.data.length = steps.length;
+        if (this.data.length > 0) {
+          steps.forEach((step, index) => {
+            step.updateDataChange({
+              index,
+              ...this.data,
+              stepsWidth: res[0].width
+            });
+          });
+        }
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/steps/index.json b/miniprogram_npm/lin-ui/steps/index.json
new file mode 100644
index 0000000..a45dede
--- /dev/null
+++ b/miniprogram_npm/lin-ui/steps/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index",
+    "l-step":"../step/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/steps/index.wxml b/miniprogram_npm/lin-ui/steps/index.wxml
new file mode 100644
index 0000000..1d665a9
--- /dev/null
+++ b/miniprogram_npm/lin-ui/steps/index.wxml
@@ -0,0 +1,3 @@
+<view class="l-class steps-container {{reverse?'steps-container-'+direction+'-reverse':'steps-container-'+direction}}">
+    <slot />
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/steps/index.wxss b/miniprogram_npm/lin-ui/steps/index.wxss
new file mode 100644
index 0000000..c05d83e
--- /dev/null
+++ b/miniprogram_npm/lin-ui/steps/index.wxss
@@ -0,0 +1 @@
+.steps-container{display:flex;width:100%}.steps-container-row{flex-direction:row}.steps-container-row-reverse{flex-direction:row-reverse}.steps-container-column{flex-direction:column}.steps-container-column-reverse{flex-direction:column-reverse}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tabpanel/index.js b/miniprogram_npm/lin-ui/tabpanel/index.js
new file mode 100644
index 0000000..a650f96
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabpanel/index.js
@@ -0,0 +1,65 @@
+// components/tab/index.js
+Component({
+  relations: {
+    '../tabs/index': {
+      type: 'parent',
+      linked: function(target) {
+        !this.data.parent && this.setData({
+          parent: target
+        });
+        // 每次被插入到custom-ul时执行，target是custom-ul节点实例对象，触发在attached生命周期之后
+      }
+    },
+    '../combined-tabs/index': {
+      type: 'parent',
+      linked: function(target) {
+        !this.data.parent && this.setData({
+          parent: target
+        });
+        // 每次被插入到custom-ul时执行，target是custom-ul节点实例对象，触发在attached生命周期之后
+      }
+    }
+  },
+  /**
+   * 组件的属性列表
+   */
+  properties: {
+    tab: String,
+    subTab: String,
+    subKey: String,
+    key: String,
+    icon: String,
+    iconSize: {
+      type: String,
+      value: '20'
+    },
+    image: Object,
+    picPlacement: {
+      type: String,
+      value: 'top'
+    }
+  },
+
+  observers: {
+    '**': function(filed) {
+      this.updateData(filed);
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    isCurrent: false,
+    index: 0,
+    parent: null
+  },
+
+  methods: {
+    updateData() {
+      let parent = this.data.parent;
+      if (!parent) return;
+      parent.initTabs();
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/tabpanel/index.json b/miniprogram_npm/lin-ui/tabpanel/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabpanel/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tabpanel/index.wxml b/miniprogram_npm/lin-ui/tabpanel/index.wxml
new file mode 100644
index 0000000..56e0446
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabpanel/index.wxml
@@ -0,0 +1,4 @@
+<!-- components/tab/index.wxml -->
+<view class="l-tabpanel-content">
+    <slot></slot>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tabpanel/index.wxss b/miniprogram_npm/lin-ui/tabpanel/index.wxss
new file mode 100644
index 0000000..a77a4fa
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabpanel/index.wxss
@@ -0,0 +1 @@
+.l-tabpanel-content{width:100%;height:100%}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tabs/index.js b/miniprogram_npm/lin-ui/tabs/index.js
new file mode 100644
index 0000000..dbf9205
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabs/index.js
@@ -0,0 +1,174 @@
+import scrollCenter from '../behaviors/scrollCenter';
+Component({
+  behaviors: [scrollCenter],
+  externalClasses: [
+    'l-class-tabs',
+    'l-class-header',
+    'l-class-active',
+    'l-class-content',
+    'l-class-inactive',
+    'l-class-line',
+    'l-class-tabimage',
+    'l-class-header-line',
+    'l-class-icon',
+    'l-tabs-class',
+    'l-header-class',
+    'l-active-class',
+    'l-content-class',
+    'l-inactive-class',
+    'l-line-class',
+    'l-tabimage-class',
+    'l-header-line-class',
+    'l-icon-class'
+  ],
+  relations: {
+    '../tabpanel/index': {
+      type: 'child',
+      linked() {
+        // 每次有子节点被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+        this.initTabs();
+      },
+      unlinked() {
+        this.initTabs();
+      }
+    },
+
+  },
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  /**
+   * 组件的属性列表
+   */
+  properties: {
+    activeKey: {
+      type: String,
+      value: '',
+    },
+    placement: {
+      type: String,
+      value: 'top',
+    },
+    animated: Boolean,
+    swipeable: Boolean,
+    scrollable: Boolean,
+    hasLine: {
+      type: Boolean,
+      value: true
+    },
+    animatedForLine: Boolean,
+    activeColor: {
+      type: String,
+      value: '#333333'
+    },
+    inactiveColor: {
+      type: String,
+      value: '#bbbbbb'
+    },
+    equalWidth: {
+      type: Boolean,
+      value: true
+    }
+
+  },
+
+  data: {
+    tabList: [],
+    currentIndex: 0,
+    transformX: 0,
+    transformY: 0,
+  },
+  observers: {
+    'activeKey': function (newKey) {
+      if(!newKey) return;
+      const index = this.data.tabList.findIndex(tab=>tab.key===newKey);
+      this.setData({
+        currentIndex:index
+      },() => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+    }
+  },
+
+  ready() {
+    this.initTabs();
+  },
+
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initTabs(val = this.data.activeKey) {
+      let items = this.getRelationNodes('../tabpanel/index');
+      if (items.length > 0) {
+        let activeKey = val,
+          currentIndex = this.data.currentIndex;
+        const tab = items.map((item, index) => {
+
+          activeKey = !val && index == 0 ? item.data.key : activeKey;
+          currentIndex = item.data.key === activeKey ? index : currentIndex;
+          return {
+            tab: item.data.tab,
+            key: item.data.key,
+            icon: item.data.icon,
+            iconSize: item.data.iconSize,
+            image: item.data.image,
+            picPlacement: item.data.picPlacement,
+          };
+        });
+        this.setData({
+          tabList: tab,
+          activeKey,
+          currentIndex,
+        }, () => {
+          if (this.data.scrollable) {
+            this.queryMultipleNodes();
+          }
+        });
+      }
+    },
+    swiperChange(e) {
+      const {
+        source,
+        current
+      } = e.detail;
+      if (source == 'touch') {
+        const currentIndex = current;
+        const activeKey = this.data.tabList[current].key;
+        this._setChangeData({
+          activeKey,
+          currentIndex
+        });
+      }
+    },
+    handleChange(e) {
+      const activeKey = e.currentTarget.dataset.key;
+      const currentIndex = e.currentTarget.dataset.index;
+      this._setChangeData({
+        activeKey,
+        currentIndex
+      });
+    },
+
+    _setChangeData({
+      activeKey,
+      currentIndex
+    }) {
+      this.setData({
+        activeKey,
+        currentIndex
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+      this.triggerEvent('linchange', {
+        activeKey,
+        currentIndex
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tabs/index.json b/miniprogram_npm/lin-ui/tabs/index.json
new file mode 100644
index 0000000..f4d7f74
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabs/index.json
@@ -0,0 +1,8 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index",
+    "l-badge":"../badge/index",
+    "l-tabpanel":"../tabpanel/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tabs/index.wxml b/miniprogram_npm/lin-ui/tabs/index.wxml
new file mode 100644
index 0000000..7c5eb53
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabs/index.wxml
@@ -0,0 +1,35 @@
+<!-- components/tabs/index.wxml -->
+<view class="l-tabs l-class-tabs l-tabs-class {{'l-placement-'+placement}} {{animated ? 'l-aminmated' :''}} {{placement=='left'||placement=='right'?'l-tabs-vertical':'l-tabs-horizontal'}} {{scrollable ? 'l-tabs-scroll':''}}">
+    <scroll-view 
+        scroll-x="{{placement=='top'||placement=='bottom' && scrollable}}" 
+        scroll-y="{{placement=='left'||placement=='right' && scrollable}}" 
+        scroll-top="{{transformY}}" 
+        scroll-left="{{transformX}}" 
+        scroll-with-animation
+        class="l-tabsscroll l-class-header l-header-class {{hasLine?'l-tabs-header-line l-class-header-line l-header-line-class':''}}">
+        <view class="l-tabs-header">
+            <view class="l-tabs-item {{equalWidth?'l-tabs-equal-width':'l-tabs-unequal-width'}} {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+item.picPlacement}}" 
+                style="color:{{item.key===activeKey?activeColor:inactiveColor}}"
+                wx:for="{{tabList}}" 
+                wx:key="{{item.key}}" 
+                data-key="{{item.key}}"
+                data-index="{{index}}" 
+                bind:tap="handleChange">
+                <image wx:if="{{ item.image.activeImage || item.image.defaultImage }}" src="{{item.key===activeKey? item.image.activeImage:item.image.defaultImage}}" class="l-tab-image l-class-tabimage l-tabimage-class"/>
+                <l-icon wx:if="{{item.icon}}" l-class="l-class-icon l-icon-class" l-self-class="{{item.key===activeKey ? 'l-icon-active':'l-icon-inactive'}}" name="{{item.icon}}" color="{{item.key===activeKey?activeColor:inactiveColor}}" size="{{item.iconSize}}"/>
+                    {{item.tab}}
+               <view class="l-tab-line {{item.key===activeKey?'l-class-line l-line-class':''}} {{animatedForLine?'l-line-aminmated':''}}" wx:if="{{hasLine}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+            </view>
+        </view>
+    </scroll-view>
+    <view wx:if="{{!swipeable}}" class="l-tabpanel-content l-class-content l-content-class" style="{{placement=='top'||placement=='bottom' ? 'margin-left:'+ -100 *currentIndex +'%;':'transform:translate(0,'+ -100 * currentIndex +'%) translateZ(0px);'}}">
+        <view class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':'l-tabpanel-inactive'}}" wx:for="{{tabList}}" wx:key="{{item.key}}" style="{{placement=='left'||placement=='right' ? 'position:absolute;width:100%;height:100%;transform:translate(0,'+ 100 * index +'%) translateZ(0px);':''}}">
+            <slot name="{{item.key}}"></slot>
+        </view>
+    </view>
+    <swiper wx:else class="l-tabpanel-content l-tabpanel-swiper l-class-content l-content-class" bindchange="swiperChange" current="{{currentIndex}}" vertical="{{placement=='left'||placement=='right'}}">
+        <swiper-item class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':''}}" wx:for="{{tabList}}" wx:key="{{item.key}}">
+            <slot name="{{item.key}}"></slot>
+        </swiper-item>
+    </swiper>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tabs/index.wxss b/miniprogram_npm/lin-ui/tabs/index.wxss
new file mode 100644
index 0000000..14f4146
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tabs/index.wxss
@@ -0,0 +1 @@
+.l-tabs{display:flex;border-radius:8rpx;box-sizing:border-box;overflow:hidden;flex-direction:column;height:100%}.l-tabs .l-tabs-header{display:flex;width:100%;flex-direction:row;background:#fff;align-items:center}.l-tabs .l-tabs-header .l-tabs-item{font-size:28rpx;text-align:center;box-sizing:border-box;display:flex;justify-content:center;align-items:center}.l-tabs .l-tabs-header .l-tabs-equal-width{flex:1}.l-tabs .l-tabs-header .l-tabs-unequal-width{padding:0 20rpx}.l-tabs .l-tabs-header .l-icon-active,.l-tabs .l-tabs-header .l-tabs-active{color:#333;font-size:28rpx}.l-tabs .l-tabs-header .l-icon-inactive,.l-tabs .l-tabs-header .l-tabs-inactive{font-size:28rpx;color:#bbb}.l-tabs .l-tabs-header .l-tabsitems-row{flex-direction:row}.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-inactive{margin-right:10rpx}.l-tabs .l-tabs-header .l-tabsitems-row-reverse{flex-direction:row-reverse}.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-inactive{margin-left:10rpx}.l-placement-bottom .l-tabs-header,.l-placement-top .l-tabs-header{height:80rpx}.l-placement-bottom .l-tabs-header .l-tabs-item,.l-placement-top .l-tabs-header .l-tabs-item{min-height:100%}.l-placement-left,.l-placement-right{flex-direction:row}.l-placement-left .l-tabs-header,.l-placement-right .l-tabs-header{flex-direction:column;width:160rpx}.l-placement-left .l-tabs-header>view,.l-placement-right .l-tabs-header>view{width:100%;height:80rpx;background:#f6f8fa}.l-placement-left .l-tabs-header>.l-tabs-active,.l-placement-right .l-tabs-header>.l-tabs-active{background:#fff}.l-placement-right{flex-direction:row-reverse}.l-placement-bottom{flex-direction:column-reverse}.l-tabpanel-content{display:flex}.l-placement-left .l-tabpanel-content,.l-placement-right .l-tabpanel-content{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;position:relative;will-change:transform;transition:transform .3s cubic-bezier(.645,.045,.355,1)}.l-tabs-vertical .l-tabpanel-swiper{height:initial}.l-placement-bottom .l-tabpanel-content,.l-placement-top .l-tabpanel-content{width:100%;min-height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.l-aminmated.l-placement-bottom .l-tabpanel-content,.l-aminmated.l-placement-top .l-tabpanel-content{will-change:margin-left;-webkit-transition:margin-left .3s cubic-bezier(.645,.045,.355,1);transition:margin-left .3s cubic-bezier(.645,.045,.355,1)}.l-tabpanel{width:100%;height:100%;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:opacity .45s;transition:opacity .45s;opacity:1;text-overflow:ellipsis}.l-tabpanel-inactive{opacity:0;height:0;padding:0!important;pointer-events:none}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header{-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header .l-tabs-item{overflow:visible}.l-tabs-vertical .l-tabsscroll{width:160rpx}.l-tabs-vertical .l-tabs-header{height:100%;min-height:80rpx;-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-vertical .l-tabs-header .l-tabs-item{overflow:visible;min-height:80rpx}.l-tabs-item{position:relative}.l-tab-line{position:absolute;bottom:0;left:0;background:#000}.l-tabs-horizontal .l-tab-line{height:4rpx;width:0;left:100%;right:0;margin:0 auto}.l-tabs-horizontal .l-line-aminmated{transition:.2s all linear}.l-tabs-horizontal .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{left:0}.l-tabs-horizontal .l-tabs-active .l-tab-line{width:100%;left:0}.l-tabs-horizontal .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-placement-top .l-tab-line{bottom:0}.l-placement-top .l-tabs-header-line{border-bottom:1px solid #f3f3f3}.l-placement-bottom .l-tab-line{top:0}.l-placement-bottom .l-tabs-header-line{border-top:1px solid #f3f3f3}.l-tabs-vertical .l-tab-line{width:6rpx;height:0;border-radius:0 6rpx 6rpx 0;top:0;margin:auto 0}.l-tabs-vertical .l-line-aminmated{transition:.2s all linear}.l-tabs-vertical .l-tabs-active .l-tab-line{height:40rpx}.l-tabs-vertical .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-tabs-vertical .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{height:0;top:0}.l-placement-left .l-tab-line{right:auto}.l-placement-left .l-tabs-header-line{border-left:1px solid #f3f3f3}.l-placement-right .l-tab-line{right:0;left:auto}.l-placement-right .l-tabs-header-line{border-right:1px solid #f3f3f3}.l-tab-image{width:100rpx;height:100rpx}.l-tab-image-placement-top{flex-direction:column}.l-tab-image-placement-bottom{flex-direction:column-reverse}.l-tab-image-placement-left{flex-direction:row}.l-tab-image-placement-right{flex-direction:row-reverse}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tag/index.js b/miniprogram_npm/lin-ui/tag/index.js
new file mode 100644
index 0000000..5c89e6c
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tag/index.js
@@ -0,0 +1,63 @@
+Component({
+  externalClasses: ['l-class', 'l-select-class', 'l-image-class'],
+  properties: {
+    // 标签标识
+    name: String,
+    cell: Object,
+    // 标签颜色
+    type:{
+      type: String,
+      value: 'touch'
+    },
+    bgColor: String,
+    fontColor: String,
+    disable: Boolean,
+    // 标签形状
+    shape: {
+      type: String,
+      value: 'square'
+    },
+    // 是否为选中态
+    select: Boolean,
+    // 是否镂空
+    plain: Boolean,
+    // 标签大小
+    size: {
+      type: String,
+      value: 'medium'
+    },
+    location: {
+      type: String,
+      value: 'left'
+    },
+    icon: String,
+    iconSize: {
+      type: String,
+      value: '20'
+    },
+    iconColor: {
+      type: String,
+      value: '#3683D6'
+    },
+    image: String,
+    iconStyle: {
+      type: String,
+      value: 'size:20;color:#3683D6'
+    },
+    height: Number
+  },
+  methods: {
+    handleTap() {
+      if (this.properties.disabled) return false;
+      let options = {
+        name: this.properties.name,
+        cell: this.properties.cell,
+        select: this.properties.select
+      };
+      this.triggerEvent('lintap', options, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
diff --git a/miniprogram_npm/lin-ui/tag/index.json b/miniprogram_npm/lin-ui/tag/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tag/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/tag/index.wxml b/miniprogram_npm/lin-ui/tag/index.wxml
new file mode 100644
index 0000000..9f03e3d
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tag/index.wxml
@@ -0,0 +1,10 @@
+<view style="display:flex">
+  <view class="l-tag {{type==='touch'?'l-tag-touch':''}} {{plain?'l-tag-plain-'+ size:'l-tag-'+size}} {{disable?'l-tag-disable':''}} {{select?'select l-select-class':'l-class'}} {{plain?'l-tag-plain':''}}  {{'l-tag-'+size+'-'+ shape}}" style="{{height?'line-height:'+height+'rpx;height:'+height+'rpx;':''}}{{plain?'color:'+fontColor+';border-color:'+fontColor:'background-color:'+bgColor+';color:'+fontColor}}"
+    bindtap="handleTap">
+    <view class="{{location=='left'?'content':'content-l'}}" style="{{iconName?'line-height:0':''}}">
+      <l-icon wx:if="{{icon}}" style="{{location=='left'?'margin-right:5rpx':'margin-left:5rpx'}}" name="{{icon}}" size="{{iconSize}}" color="{{iconColor}}" />
+      <image style="{{location=='left'?'margin-right:5rpx':'margin-left:5rpx'}}" wx:if="{{image}}" src="{{image}}" class="{{'tag-image-'+size}} l-image-class"></image>
+      <slot/>
+    </view>
+  </view>
+</view>
diff --git a/miniprogram_npm/lin-ui/tag/index.wxss b/miniprogram_npm/lin-ui/tag/index.wxss
new file mode 100644
index 0000000..d51ec93
--- /dev/null
+++ b/miniprogram_npm/lin-ui/tag/index.wxss
@@ -0,0 +1 @@
+.l-tag{display:inline-flex;justify-content:center;align-items:center;color:#fff;background-color:#3963bc}.l-tag-touch{min-width:80rpx}.l-tag-super-mini{height:32rpx;font-size:20rpx}.l-tag-mini{height:42rpx;font-size:20rpx}.l-tag-medium{height:50rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-large{height:60rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-super-mini-square{border-radius:2rpx;padding:0 6rpx}.l-tag-mini-square{border-radius:2rpx;padding:0 12rpx}.l-tag-medium-square{border-radius:2rpx;padding:0 16rpx}.l-tag-large-square{border-radius:2rpx;padding:0 18rpx}.l-tag-super-mini-circle{border-radius:16rpx;padding:0 12rpx}.l-tag-mini-circle{border-radius:21rpx;padding:0 16rpx}.l-tag-medium-circle{border-radius:25rpx;padding:0 20rpx}.l-tag-large-circle{border-radius:30rpx;padding:0 24rpx}.l-tag-plain{background-color:#fff;color:#3963bc;border:2rpx solid #3963bc}.l-tag-plain-super-mini{height:28rpx;font-size:20rpx}.l-tag-plain-mini{height:38rpx;font-size:20rpx}.l-tag-plain-medium{height:46rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-plain-large{height:56rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-disable{background-color:#dee2e6;color:#fff;border-color:#dee2e6}.select{background-color:#3963bc;color:#fff}.content{display:inline-flex;align-items:center;justify-content:center}.content-l{display:inline-flex;flex-direction:row-reverse;align-items:center;justify-content:center}.tag-image-mini{width:20rpx;height:20rpx}.tag-image-large{width:24rpx;height:24rpx}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/textarea/index.js b/miniprogram_npm/lin-ui/textarea/index.js
new file mode 100644
index 0000000..3258275
--- /dev/null
+++ b/miniprogram_npm/lin-ui/textarea/index.js
@@ -0,0 +1,109 @@
+// input/input.js
+import rules from '../behaviors/rules';
+
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: ['wx://form-field', rules],
+  externalClasses: ['l-class', 'l-error-text', 'l-error-text-class'],
+  properties: {
+    // 占位文本
+    placeholder: {
+      type: String,
+      value: ''
+    },
+    // 输入框的值
+    value: {
+      type: String,
+      value: ''
+    },
+    // 获取焦点
+    focus: {
+      type: Boolean,
+      value: false
+    },
+    // 最大输入长度
+    maxlength: {
+      type: Number,
+      value: 140
+    },
+    // 表显示文字长度的计数器
+    indicator: {
+      type: Boolean,
+      value: true
+    },
+    // label标题的显示位置 left top right
+    autoHeight: {
+      type: Boolean,
+      value: false
+    },
+    // 是否禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 是否显示边框
+    border: {
+      type: Boolean,
+      value: true
+    },
+    // 校验
+    rules: {
+      type: Object,
+    },
+    // 占位文字的样式  
+    placeholderStyle: {
+      type: String,
+      value: ''
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  attached() {
+    this.initRules();
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    handleInputChange(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('lininput', event.detail);
+    },
+
+    handleInputFocus(event) {
+      this.triggerEvent('linfocus', event.detail);
+    },
+
+    handleInputBlur(event) {
+      this.validatorData({
+        value: event.detail.value
+      });
+      this.triggerEvent('linblur', event.detail);
+    },
+    handleInputConfirm(event) {
+      this.triggerEvent('linconfirm', event.detail);
+    },
+    // onClearTap(e) {
+    //   this.setData({ value: '' })
+    // },
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/textarea/index.json b/miniprogram_npm/lin-ui/textarea/index.json
new file mode 100644
index 0000000..fe1a1ff
--- /dev/null
+++ b/miniprogram_npm/lin-ui/textarea/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-error-tip":"../error-tip/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/textarea/index.wxml b/miniprogram_npm/lin-ui/textarea/index.wxml
new file mode 100644
index 0000000..f542c50
--- /dev/null
+++ b/miniprogram_npm/lin-ui/textarea/index.wxml
@@ -0,0 +1,28 @@
+<!--  input/input.wxml -->
+<label class='form-item {{disabled? "disabled": ""}}   l-class '>
+  <view class='default-border {{border? "border": ""}}'>
+    <view class='mask' wx:if="{{disabled}}"></view>
+    <!-- 小程序表单组件 -->
+    <textarea
+      class=" textarea"
+      type="{{type}}"
+      value="{{ value }}"
+      password="{{type==='password'}}"
+      placeholder="{{placeholder}}"
+      maxlength="{{maxlength}}"
+      placeholder-class="pls-class"
+      placeholder-style="{{placeholderStyle}}"
+      disabled="{{disabled}}"
+      focus="{{focus}}"
+      auto-height="{{autoHeight}}"
+      bindinput="handleInputChange"
+      bindfocus="handleInputFocus"
+      bindblur="handleInputBlur"
+      bindconfirm="handleInputConfirm"
+      />
+      <view
+        class="indicator"
+        wx:if="{{indicator}}">{{value.length + '/' +  maxlength}}</view>
+  </view>
+</label>
+  <l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/textarea/index.wxss b/miniprogram_npm/lin-ui/textarea/index.wxss
new file mode 100644
index 0000000..cf1a0c0
--- /dev/null
+++ b/miniprogram_npm/lin-ui/textarea/index.wxss
@@ -0,0 +1 @@
+.form-item{position:relative;font-size:28rpx;color:#333;width:700rpx;display:flex;flex-direction:column;align-items:center;border-bottom:1rpx solid #f3f3f3;box-sizing:border-box}.disabled{color:#9a9a9a!important}.mask{position:absolute;z-index:999;height:100%;width:100%}.textarea{width:100%;padding:25rpx;box-sizing:border-box;font-size:28rpx;color:#333;height:200rpx;line-height:40rpx;flex:1;min-height:88rpx;margin-bottom:rpx}.default-border{position:relative;font-size:28rpx;color:#333;width:100%;display:flex;flex-direction:column;align-items:center;border-bottom:1rpx solid #f3f3f3;box-sizing:border-box}.border{border-radius:4rpx;border:1rpx solid #d8dee5}.pls-class{color:#9a9a9a}.indicator{width:95%;text-align:right;margin-bottom:15rpx;color:#9a9a9a}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/toast/index.js b/miniprogram_npm/lin-ui/toast/index.js
new file mode 100644
index 0000000..bae2560
--- /dev/null
+++ b/miniprogram_npm/lin-ui/toast/index.js
@@ -0,0 +1,170 @@
+import computeOffset from '../behaviors/computeOffset';
+import zIndex from '../behaviors/zIndex';
+import watchShow from '../behaviors/watchShow';
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [computeOffset, zIndex, watchShow],
+  externalClasses: ['l-bg-class', 'l-icon-class', 'l-class', 'l-image-class', 'l-title-class '],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 提示框的文本内容
+    title: String,
+    // icon
+    icon: String,
+    iconSize: String,
+    iconColor: String,
+    // image
+    image: String,
+    // 文字的显示方位
+    placement: {
+      type: String,
+      value: 'bottom'
+    },
+    // 提示框显示的时长
+    duration: {
+      type: Number,
+      value: 1500
+    },
+    // 提示框的层级
+    zIndex: {
+      type: Number,
+      value: 777
+    },
+    // 设置提示框是否为垂直居中
+    center: {
+      type: Boolean,
+      value: true
+    },
+    // 是否显示透明蒙层，防止触摸穿透
+    mask: {
+      type: Boolean,
+      value: false
+    },
+    openApi: {
+      type: Boolean,
+      value: true,
+    },
+    offsetX: Number,
+    offsetY: Number
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    status: false,
+    success: '',
+    fail: '',
+    complete: ''
+  },
+
+  // 解决 addListener undefined 的错误
+  observers: {
+    'icon': function () {}
+  },
+
+  attached() {
+    if (this.data.openApi) {
+      this.initToast();
+    }
+  },
+
+  pageLifetimes: {
+    show() {
+      if (this.data.openApi) {
+        this.initToast();
+      }
+      this.offsetMargin();
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initToast() {
+      wx.lin = wx.lin || {};
+      wx.lin.showToast = (options = {}) => {
+        const {
+          title = '',
+          icon = '',
+          image = '',
+          placement = 'bottom',
+          duration = 1500,
+          center = true,
+          mask = false,
+          success = null,
+          complete = null,
+          offsetX = 0,
+          offsetY = 0,
+          iconSize = '60',
+          iconColor = ''
+        } = options;
+        this.setData({
+          title,
+          icon,
+          image,
+          placement,
+          duration,
+          center,
+          mask,
+          success,
+          complete,
+          offsetY,
+          offsetX,
+          iconSize,
+          iconColor
+        });
+        this.changeStatus();
+        return this;
+      };
+      wx.lin.hideToast = () => {
+        this.setData({
+          status: false
+        });
+      };
+    },
+
+    strlen(str) {
+      var len = 0;
+      for (var i = 0; i < str.length; i++) {
+        var c = str.charCodeAt(i);
+        if ((c >= '0x0001' && c <= '0x007e') || ('0xff60' <= c && c <= '0xff9f')) {
+          len++;
+        } else {
+          len += 2;
+        }
+      }
+      return len;
+    },
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+
+    // 点击事件
+    onMaskTap() {
+
+      let detail = true;
+      let option = {
+        bubbles: true,
+        composed: true
+      };
+
+      if (this.data.locked !== true) {
+        this.setData({
+          fullScreen: 'hide',
+          status: 'hide',
+        });
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/toast/index.json b/miniprogram_npm/lin-ui/toast/index.json
new file mode 100644
index 0000000..3eb288e
--- /dev/null
+++ b/miniprogram_npm/lin-ui/toast/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-mask": "../mask/index"
+  }
+}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/toast/index.wxml b/miniprogram_npm/lin-ui/toast/index.wxml
new file mode 100644
index 0000000..6adc4b3
--- /dev/null
+++ b/miniprogram_npm/lin-ui/toast/index.wxml
@@ -0,0 +1,21 @@
+<view
+  class="container {{mask?'containerShowMask':'containerNoMask'}}"
+  hidden="{{!status}}"
+  style="z-index:{{zIndex}}">
+  <view class="l-bg-class toast-bg" wx:if="{{mask}}"></view>
+  <view class="l-class toast toast-{{placement || 'bottom'}}" style="padding-top:{{(placement  || 'bottom')=== 'bottom' ?  image || icon ? '25rpx': '': ''}};position:relative;left:{{offsetX}}rpx;top:{{offsetY}}rpx;margin-bottom:{{distance}}px" >
+    <image class="l-image-class toast-icon"
+      wx:if="{{image}}"
+      src="{{image}}"
+    />
+    <l-icon
+      class="l-icon-class toast-icon toast-icon-{{icon === 'loading'?'loading':''}}"
+      wx:elif="{{icon && !image}}"
+      size="{{iconSize? iconSize : 60}}"
+      color="{{iconColor? iconColor: icon === 'success'? '#00C292' :  icon === 'error' ? '#F4516C' : '#ffffff'}}"
+      name="{{icon}}"
+    />
+    <slot wx:else/>
+    <text class="toast-text l-title-class  toast-text-{{placement}}" style="{{placement || 'bottom' === 'bottom' ? icon || image? 'margin-top:10rpx' : '': '' }}">{{ title }}</text>
+  </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/toast/index.wxss b/miniprogram_npm/lin-ui/toast/index.wxss
new file mode 100644
index 0000000..7f87987
--- /dev/null
+++ b/miniprogram_npm/lin-ui/toast/index.wxss
@@ -0,0 +1 @@
+.container{position:fixed}.containerNoMask{left:50%;top:50%;transform:translate(-50%,-50%)}.containerShowMask{height:100%;width:100%;top:0;left:0;display:flex;flex-direction:column;align-items:center;justify-content:center;z-index:999}.container .toast-bg{height:100%;width:100%;background:rgba(255,255,255,.5);position:absolute;top:0;left:0}.container .toast-top{flex-direction:column-reverse}.container .toast-right{flex-direction:row}.container .toast-bottom{flex-direction:column}.container .toast-left{flex-direction:row-reverse}.container .toast{display:flex;align-items:center;justify-content:center;max-width:400rpx;min-width:280rpx;min-height:88rpx;background:rgba(0,0,0,.7);border-radius:12rpx;color:#fff;font-size:28rpx;line-height:40rpx;box-sizing:border-box;padding:30rpx 50rpx;z-index:999}.container .toast .toast-icon{margin-top:20rpx;margin-bottom:20rpx}.container .toast .toast-icon-loading{animation:loading-fadein 1.5s linear 0s infinite}.container .toast .toast-text{display:inline-block;text-align:center}.container .toast .toast-text-right{display:inline-block;text-align:center;margin-left:20rpx}.container .toast .toast-text-left{display:inline-block;text-align:center;margin-right:20rpx}.container .toast .toast-text-top{margin-bottom:10rpx}@keyframes loading-fadein{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/utils/util.js b/miniprogram_npm/lin-ui/utils/util.js
new file mode 100644
index 0000000..8a3b58d
--- /dev/null
+++ b/miniprogram_npm/lin-ui/utils/util.js
@@ -0,0 +1,26 @@
+const promisic = function (func) {
+  return function (params = {}) {
+    return new Promise((resolve, reject) => {
+      const args = Object.assign(params, {
+        success: (res) => {
+          resolve(res);
+        },
+        fail: (error) => {
+          reject(error);
+        }
+      });
+      func(args);
+    });
+  };
+};
+
+const px2rpx = function (pxNumber) {
+  const { screenWidth } = wx.getSystemInfoSync();
+  const rpxNumber = (750 / screenWidth) * pxNumber;
+  return rpxNumber;
+};
+
+export {
+  promisic,
+  px2rpx
+};
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/water-flow/index.js b/miniprogram_npm/lin-ui/water-flow/index.js
new file mode 100644
index 0000000..46ef5fa
--- /dev/null
+++ b/miniprogram_npm/lin-ui/water-flow/index.js
@@ -0,0 +1,85 @@
+Component({
+  /**
+  * 组件的属性列表
+  */
+  properties: {
+    columnGap: {
+      type: String,
+      value: '20rpx'
+    }
+  },
+
+  /**
+  * 组件的初始数据
+  */
+  data: {
+    data: [],
+    leftData: [],
+    rightData: []
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    }
+  },
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.renderWaterFlow = (data = [], refresh = false, success) => {
+        if (Object.prototype.toString.call(data) !== '[object Array]') {
+          console.error('[data]参数类型错误，渲染失败');
+          return false;
+        }
+        // 绑定data，判断data是否为[]
+        this.setData({ data });
+        if (refresh) {
+          this.data.leftData = [];
+          this.data.rightData = [];
+        }
+        this._select(data, refresh).then(() => {
+          success && success();
+        });
+      };
+    },
+    _select(data, refresh) {
+      const query = wx.createSelectorQuery().in(this);
+      this.columnNodes = query.selectAll('#left, #right');
+      return new Promise((resolve) => {
+        this._render(data, 0, refresh, () => {
+          resolve();
+        });
+      });
+    },
+    _render(data, i, refresh, success) {
+      if ((data.length > i || refresh) && this.data.data.length !== 0) {
+        this.columnNodes.boundingClientRect().exec(res => {
+          const rects = res[0];
+          this.data.leftHeight = rects[0].height;
+          this.data.rightHeight = rects[1].height;
+          if (this.data.leftHeight <= this.data.rightHeight || refresh) {
+            this.data.leftData.push(data[i]);
+          } else {
+            this.data.rightData.push(data[i]);
+          }
+
+          this.setData({
+            leftData: this.data.leftData,
+            rightData: this.data.rightData
+          }, () => {
+            this._render(data, ++i, false, success);
+          });
+        });
+      } else {
+        success && success();
+      }
+    }
+  }
+});
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/water-flow/index.json b/miniprogram_npm/lin-ui/water-flow/index.json
new file mode 100644
index 0000000..5e96f35
--- /dev/null
+++ b/miniprogram_npm/lin-ui/water-flow/index.json
@@ -0,0 +1,7 @@
+{
+    "component": true,
+    "usingComponents": {},
+    "componentGenerics": {
+      "l-water-flow-item": true
+    }
+  }
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/water-flow/index.wxml b/miniprogram_npm/lin-ui/water-flow/index.wxml
new file mode 100644
index 0000000..638c714
--- /dev/null
+++ b/miniprogram_npm/lin-ui/water-flow/index.wxml
@@ -0,0 +1,16 @@
+<view class="l-class water-flow-container" wx:if="{{data.length!==0}}" >
+  <view class="water-column" style="margin-right:{{columnGap}}">
+    <view id="left">
+      <block wx:for="{{leftData}}" wx:key="{{index}}">
+        <l-water-flow-item data="{{item}}" />
+      </block>
+    </view>
+  </view>
+  <view class="water-column">
+    <view id="right">
+      <block wx:for="{{rightData}}" wx:key="{{index}}">
+        <l-water-flow-item data="{{item}}" />
+      </block>
+    </view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/miniprogram_npm/lin-ui/water-flow/index.wxss b/miniprogram_npm/lin-ui/water-flow/index.wxss
new file mode 100644
index 0000000..7a853fc
--- /dev/null
+++ b/miniprogram_npm/lin-ui/water-flow/index.wxss
@@ -0,0 +1 @@
+.water-flow-container{display:flex;width:100%;box-sizing:border-box;background:0 0}.water-column{flex:1}
\ No newline at end of file
diff --git a/model/banner.js b/model/banner.js
new file mode 100644
index 0000000..d671798
--- /dev/null
+++ b/model/banner.js
@@ -0,0 +1,13 @@
+import {Http} from "../utils/http";
+
+class Banner {
+    static loactionB = 'b-1'
+    static async getHomeLoactionB() {
+        return await Http.request({
+            url: `/banner/name/${Banner.loactionB}`
+        })
+    }
+}
+export {
+    Banner
+}
\ No newline at end of file
diff --git a/model/theme.js b/model/theme.js
new file mode 100644
index 0000000..2bc123c
--- /dev/null
+++ b/model/theme.js
@@ -0,0 +1,19 @@
+// 业务对象
+// theme banner spu sku address user
+
+import {Http} from "../utils/http";
+
+class Theme {
+    static async getHomeLoactionA() {
+        return await Http.request({
+            url: '/theme/by/names',
+            data: {
+                names: 't-1'
+            }
+        })
+    }
+}
+
+export {
+    Theme
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/LICENSE b/node_modules/lin-ui/LICENSE
new file mode 100644
index 0000000..58d4e66
--- /dev/null
+++ b/node_modules/lin-ui/LICENSE
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2019 TaleLin
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/node_modules/lin-ui/README.md b/node_modules/lin-ui/README.md
new file mode 100644
index 0000000..d1e4099
--- /dev/null
+++ b/node_modules/lin-ui/README.md
@@ -0,0 +1,166 @@
+
+<p align="center">
+  <!-- <a href="http://doc.mini.7yue.pro/"> -->
+    <img
+      class="QR-img" src="https://img-gzb.oss-cn-shanghai.aliyuncs.com/lala/2bdab36cc138813e87fe60000f474b67.jpg">
+  <!-- </a> -->
+</p>
+
+<div align="center"> <span class="logo" > Lin UI </span> </div>
+
+<div class="row" />
+
+<div align="center">
+  <span class="desc" >Fantastic native based Mini-Program components</span> 
+</div>
+
+<div align="center">
+
+![](https://img.shields.io/badge/build-passing-00d508.svg)
+![](https://img.shields.io/npm/v/lin-ui.svg)
+![](https://img.shields.io/npm/dt/lin-ui.svg)
+![](https://img.shields.io/badge/license-MIT-3963bc.svg)
+
+</div>
+
+<div align="center">
+
+⚡️ 文档网站: http://doc.mini.7yue.pro/
+<br/>
+🔥 教程地址: https://course.7yue.pro
+
+</div>
+
+# 简介
+
+Lin UI 是基于 **微信小程序原生语法** 实现的组件库。遵循简洁，易用的设计规范。
+
+## 讨论交流
+
+<table>
+  <tbody>
+    <tr >
+      <td align="center" valign="middle" style="border-style:none">
+        <img class="QR-img" style="height: 60px; width:60px" src="https://img-gzb.oss-cn-shanghai.aliyuncs.com/lala/40D46DF4ED2D741369A4B186738D1534.png">
+        <p style="font-size:12px;">QQ群号：643205479</p>
+      </td>
+      <td align="center" valign="middle" style="border-style:none">
+        <img class="QR-img" style="height: 60px; width:60px"  src="https://img-gzb.oss-cn-shanghai.aliyuncs.com/lala/5b4dad8dc5cda58e26922fde2471308f.jpg">
+        <p style="font-size:12px;">微信公众号：林间有风</p>
+      </td>
+    </tr>
+  </tbody>
+</table>
+
+## Lin UI商业案例
+
+<table>
+  <tbody>
+    <tr>
+      <td align="center" valign="middle" style="border-style:none">
+         <img class="QR-img" style="height: 60px; width:60px"  src="https://img-gzb.oss-cn-shanghai.aliyuncs.com/lala/b3aa01f2a1c00573757d3d42248177bf.jpg" alt="风袖">
+        <p style="font-size:12px;">风袖</p>
+      </td>
+    </tr>
+  </tbody>
+</table>
+
+## 快速上手
+
+Lin UI 致力于给小程序开发者提供愉悦的开发体验。
+> 在开始之前，推荐先学习微信官方的[小程序开发文档](https://developers.weixin.qq.com/miniprogram/dev/index.html?t=18101612)，并正确安装和配置了 Node.js v8或以上。 同时，我们假设你已了解关于 HTML、CSS 和 JavaScript 的初级知识，并且已经熟悉并阅读了[小程序自定义组件](https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/)。
+
+## 安装
+
+Lin UI提供两种安装方法，满足不同开发者的需求。如果您需要使用`npm`安装，请确保您已经在本机安装了`npm`。
+
+### 方式一： 使用npm安装 （推荐）
+
+打开小程序的项目根目录，执行下面的命令。
+
+```base
+npm install lin-ui --production
+```
+
+执行成功后，会在根目录里生成项目依赖文件夹 `node_modules/lin-ui` （小程序IDE的目录结构里不会显示此文件夹）。
+<br/>
+然后用小程序官方IDE打开我们的小程序项目，找到 `工具` 选项，点击下拉选中 `构建npm` ，等待构建完成即可。
+
+出现上图所示的结果后，可以看到小程序IDE工具的目录结构里多出了一个文件夹 `miniprogram_npm`（之后所有通过 `npm ` 引入的组件和 `js` 库都会出现在这里），打开后可以看到 `lin-ui` 文件夹，也就是我们所需要的组件。
+
+### 方式二：下载代码
+
+直接通过git下载  `Lin UI`  源代码，并将 `dist` 目录（Lin UI 组件库）拷贝到自己的项目中。
+
+```base
+git clone https://github.com/TaleLin/lin-ui.git
+```
+
+## 使用组件
+
+> 下文会简单介绍一个`Lin UI` 组件的引入和使用。
+
+使用前，确保该组件已经在你的项目目录结构里。
+<br />
+以icon组件为例，只需要在使用页面的json文件中引入icon对应的自定义组件即可。
+<br />
+组件路径：`path/to/${组件名称}/index`
+```json
+{
+  "usingComponents": {
+    "l-icon": "path/to/icon/index"
+  }
+}
+```
+
+然后在wxml中直接使用该组件。
+```wxml
+<l-icon name="add"> </l-icon>
+```
+
+## 自定义配置
+
+> 考虑到开发者在面临不同到项目时，需求和行业的不同。Lin UI 设计规范上支持一定程度上的样式定制，以满足业务和品牌上多样化的视觉需求。
+
+同时，可以通过对 `components.json` 进行配置，来编译生成相对应的组件。
+<br />
+为满足自定义的需求，首先我们要去下载 `Lin UI` 源码。
+
+```base
+git clone https://github.com/TaleLin/lin-ui.git
+```
+安装相关依赖
+
+```base
+npm install
+```
+
+完成以上两步是对 `Lin UI` 进行自定义配置的基础要求。
+
+### 全局样式更改
+> Lin UI 的样式使用了 Less 作为开发语言，并定义了一系列全局/组件的样式变量，你可以根据需求进行相应调整。
+
+以下是一些最常用的通用变量，所有样式变量可以在这里找到。
+
+ - 组件样式变量
+找到根目录，打开`config/style/_base.less`文件，进行修改即可。
+
+ 
+- 主题色更改
+
+同样打开根目录，打开`config/style/_theme.less`文件，看到文件中定义了一个变量 `@theme-color` ，如果有主题色修改的需求，更改它即可。
+```less
+// 主题色
+
+@theme-color            : #2c61b4;                      // 主题色
+
+```
+
+其他
+更改完成后，在 `Lin UI` 下的根目录里打开终端执行如下所示命令
+
+```bash
+npm run build
+```
+
+根目录下的 `dist` 文件夹即是编译后的自定义组件。
diff --git a/node_modules/lin-ui/dist/action-sheet/index.js b/node_modules/lin-ui/dist/action-sheet/index.js
new file mode 100644
index 0000000..7691909
--- /dev/null
+++ b/node_modules/lin-ui/dist/action-sheet/index.js
@@ -0,0 +1,124 @@
+import zIndex from '../behaviors/zIndex';
+import hover from '../behaviors/hover';
+
+Component({
+  behaviors: [zIndex,hover],
+  externalClasses: ['l-class-title', 'l-class-item', 'l-class-cancel','l-title-class','l-item-class','l-cancel-class'],
+  properties: {
+    locked: Boolean,
+    showCancel: Boolean,
+    show: Boolean,
+    itemList: Array,
+    cancelText: {
+      type: String,
+      value: '取消'
+    },
+    title: String,
+    zIndex:{
+      type:Number,
+      value: 777
+    },
+    openApi: {
+      type: Boolean,
+      value: true,
+    }
+  },
+  data: {
+    success: '',
+    fail: '',
+    isIphoneX: false
+  },
+  attached() {
+    if (this.data.openApi) {
+      this.initActionSheet();
+    }
+    this.initUIAdapter();
+  },
+
+  pageLifetimes: {
+    show() {
+      if (this.data.openApi) {
+        this.initActionSheet();
+      }
+
+    },
+  },
+  methods: {
+    /**
+   * 区分UI尺寸
+   */
+    initUIAdapter() {
+      wx.getSystemInfo({
+        success: (res) => {
+          this.setData({
+            isIphoneX: res.model == 'iPhone X' ? true : false,
+          });
+        }
+      });
+    },
+    initActionSheet() {
+      wx.lin = wx.lin || {};
+      wx.lin.showActionSheet = (options={}) => {
+        const {
+          itemList = [],
+          success = null,
+          fail = null,
+          title = '',
+          locked = false,
+          cancelText = '取消',
+          showCancel = false,
+        } = options;
+        this.setData({
+          itemList: itemList.slice(0, 10),
+          success,
+          fail,
+          title,
+          locked,
+          cancelText,
+          showCancel,
+          show: true,
+        });
+        return this;
+      };
+    },
+    handleClickItem(e) {
+      const {
+        success
+      } = this.data;
+      success && success({ ...e.currentTarget.dataset });
+      this.triggerEvent('linitemtap', { ...e.currentTarget.dataset },{ bubbles: true, composed: true });
+      this._hideActionSheet();
+    },
+
+    _showActionSheet() {
+      this.setData({
+        show: true
+      });
+    },
+
+    _hideActionSheet() {
+      this.setData({
+        show: false
+      });
+    },
+
+    handleClickCancel() {
+      const {
+        fail
+      } = this.data;
+      fail && fail({
+        errMsg: 'showactionsheet:fail cancel'
+      });
+      this.triggerEvent('lincancel', {
+        errMsg: 'showactionsheet:fail cancel'
+      },{ bubbles: true, composed: true });
+      this._hideActionSheet();
+    },
+
+    handleClickPopUp() {
+      if (!this.data.locked) {
+        this.handleClickCancel();
+      }
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/action-sheet/index.json b/node_modules/lin-ui/dist/action-sheet/index.json
new file mode 100644
index 0000000..248ca90
--- /dev/null
+++ b/node_modules/lin-ui/dist/action-sheet/index.json
@@ -0,0 +1,8 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-icon":"../icon/index",
+        "l-popup":"../popup/index",
+        "l-button":"../button/index"
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/action-sheet/index.wxml b/node_modules/lin-ui/dist/action-sheet/index.wxml
new file mode 100644
index 0000000..5bad4e1
--- /dev/null
+++ b/node_modules/lin-ui/dist/action-sheet/index.wxml
@@ -0,0 +1,26 @@
+<l-popup show="{{show}}" showMask="{{true}}" contentAlign="bottom" locked="{{locked}}" bind:lintap="handleClickPopUp" z-index="{{zIndex}}">
+    <view class='l-action-sheet'>
+        <view  class="l-item-button l-class-title l-title-class" wx:if="{{title}}">
+            {{ title }}
+        </view>
+        <view wx:for="{{ itemList }}" wx:key="{{ item.name }}" hover-class="{{isHover?'list-hover':''}}">
+            <l-button bind:lintap="handleClickItem" data-index="{{ index }}" data-item="{{ item }}" open-type="{{ item.openType }}" icon="{{ item.icon }}" type="ghost" size="large" special="{{true}}" long>
+                <view style="{{ item.color ? 'color: ' + item.color : '' }}" class="l-item-button l-class-item l-item-class {{item.image || item.icon ? 'l-image-button':''}}">
+                    <image wx:if="{{item.image}}" class="l-button-image" src="{{item.image}}" style="{{item.imageStyle}}"/>
+                    <l-icon 
+                        wx:elif="{{ item.icon }}" 
+                        name="{{ item.icon }}" 
+                        l-class="l-item-button"
+                        size="{{ item.iconSize }}"
+                        color="{{item.iconColor?item.iconColor:item.color}}"></l-icon>  
+                    <text class="l-button-text">{{ item.name }}</text>
+                </view>
+            </l-button>
+        </view>
+        <view class="l-cancel l-class-cancel l-cancel-class {{isIphoneX ? 'l-cancel-x':''}}" wx:if="{{ showCancel }}" hover-class="{{isHover?'list-hover':''}}">
+            <l-button type="ghost" size="large" long="true" bind:lintap="handleClickCancel" special="{{true}}">
+                <view class="l-item-button l-cancel-button">{{ cancelText }}</view>
+            </l-button>
+        </view>
+    </view>
+</l-popup>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/action-sheet/index.wxss b/node_modules/lin-ui/dist/action-sheet/index.wxss
new file mode 100644
index 0000000..fc97542
--- /dev/null
+++ b/node_modules/lin-ui/dist/action-sheet/index.wxss
@@ -0,0 +1 @@
+.l-action-sheet{background:#f7f7f7}.l-item-button{height:88rpx;line-height:88rpx;text-align:center;background:#fff;border-bottom:2rpx solid #f3f3f3;font-size:28rpx;color:#45526b;display:flex;align-items:center;justify-content:center;width:100%}.l-cancel{margin-top:12rpx}.l-cancel-x .l-item-button{padding-bottom:44rpx}.l-image-button>text{margin-left:20rpx}.list-hover{opacity:.8}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/avatar/index.js b/node_modules/lin-ui/dist/avatar/index.js
new file mode 100644
index 0000000..cec5f2a
--- /dev/null
+++ b/node_modules/lin-ui/dist/avatar/index.js
@@ -0,0 +1,70 @@
+Component({
+  externalClasses: [
+    'l-class',
+    'l-class-text',
+    'l-text-class'
+  ],
+  properties: {
+    icon: String,
+    iconColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    text: String,
+    src: String,
+    openData: {
+      type: Array,
+      observer: '_initOpenData'
+    },
+    shape: {
+      type: String,
+      value: 'circle'
+    },
+    mode: {
+      type: String,
+      value: 'scaleToFill'
+    },
+    size: {
+      type: Number,
+      value: 120,
+    },
+    placement: {
+      type: String,
+      value: 'right'
+    },
+  },
+  data: {
+    _isHaveUserNickName: false,
+    _isHaveUserAvatarUrl: false,
+    _iconSize: '',
+    _iconColor: '#ffffff'
+  },
+  methods: {
+    _initOpenData: function (openData) {
+      this._isHaveUserAvatarUrl(openData);
+      this._isHaveUserNickName(openData);
+    },
+
+    _isHaveUserAvatarUrl: function (openData) {
+      this.setData({
+        _isHaveUserAvatarUrl: openData.indexOf('userAvatarUrl') !== -1
+      });
+    },
+
+    _isHaveUserNickName: function (openData) {
+      this.setData({
+        _isHaveUserNickName: openData.indexOf('userNickName') !== -1
+      });
+    },
+    tapAvatar: function (e) {
+      this.triggerEvent('lintap', e, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/avatar/index.json b/node_modules/lin-ui/dist/avatar/index.json
new file mode 100644
index 0000000..dd10af0
--- /dev/null
+++ b/node_modules/lin-ui/dist/avatar/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-icon":"../icon/index"
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/avatar/index.wxml b/node_modules/lin-ui/dist/avatar/index.wxml
new file mode 100644
index 0000000..6703bd1
--- /dev/null
+++ b/node_modules/lin-ui/dist/avatar/index.wxml
@@ -0,0 +1,12 @@
+
+<view class="l-avatar {{text||_isHaveUserNickName?'l-placement-'+placement:''}}" bindtap="tapAvatar">
+    <view class="l-avatar-image {{shape?'l-'+shape:''}} l-class" wx:if="{{_isHaveUserAvatarUrl||icon||src}}" style="width:{{size}}rpx;height:{{size}}rpx">
+        <open-data wx:if="{{_isHaveUserAvatarUrl}}" type="userAvatarUrl" />
+        <l-icon wx:elif="{{icon}}" size="{{iconSize || size*0.6}}" color="{{iconColor||'#ffffff'}}" name="{{icon}}" />
+        <image wx:elif="{{src}}" src="{{src}}" mode="{{mode}}" style="width:{{size}}rpx;height:{{size}}rpx" />
+    </view>
+    <view class="l-avatar-text l-class-text l-text-class" wx:if="{{text||_isHaveUserNickName}}">
+        <open-data wx:if="{{_isHaveUserNickName}}" type="userNickName" />
+        <text wx:elif="{{text}}">{{text}}</text>
+    </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/avatar/index.wxss b/node_modules/lin-ui/dist/avatar/index.wxss
new file mode 100644
index 0000000..4efad93
--- /dev/null
+++ b/node_modules/lin-ui/dist/avatar/index.wxss
@@ -0,0 +1 @@
+.l-avatar{display:inline-flex;justify-content:center;align-items:center}.l-avatar-image{flex:1;display:inline-flex;justify-content:center;align-items:center;background:#ccc;overflow:hidden}.l-avatar-text{display:inline-block;height:max-content;width:max-content;font-size:28rpx;color:#45526b;line-height:40px}open-data{width:100%;height:100%}.l-avatar-text open-data,.l-avatar-text text{font-size:inherit;color:inherit;line-height:inherit}.l-square{border-radius:8rpx}.l-circle{border-radius:50%}.l-placement-left,.l-placement-right{align-items:center;justify-content:center}.l-placement-left{margin-right:24rpx;flex-direction:row-reverse}.l-placement-left .l-avatar-text{margin-right:24rpx}.l-placement-right{flex-direction:row}.l-placement-right .l-avatar-text{margin-left:24rpx}.l-placement-top{flex-direction:column-reverse}.l-placement-top .l-avatar-text{margin-bottom:12rpx}.l-placement-bottom{flex-direction:column}.l-placement-bottom .l-avatar-text{margin-top:12rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/badge/index.js b/node_modules/lin-ui/dist/badge/index.js
new file mode 100644
index 0000000..0f0a1eb
--- /dev/null
+++ b/node_modules/lin-ui/dist/badge/index.js
@@ -0,0 +1,87 @@
+Component({
+  externalClasses: ['l-class', 'l-class-self', 'l-self-class'],
+  properties: {
+    // 红点模式
+    dot: {
+      type: Boolean,
+      value: false
+    },
+    shape: {
+      type: String,
+      value: 'horn'
+    },
+    value: {
+      type: String,
+      value: '0'
+    },
+    mode: {
+      type: String,
+      value: 'number'
+    },
+    // 数字最大值
+    maxCount: {
+      type: Number,
+      value: 99
+    },
+    // 数字形式
+    numberType: {
+      type: String,
+      value: 'overflow'
+    },
+    show: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    finalCount: 0
+  },
+  observers: {
+    'value': function () {
+      this.finalCount();
+    }
+  },
+  methods: {
+    // 最终数字
+    finalCount() {
+      if (isNaN(Number(this.data.value)) || (this.data.mode === 'text')) {
+        this.setData({
+          finalCount: this.data.value
+        });
+      } else {
+        this.switchType();
+      }
+    },
+    switchType() {
+      switch (this.data.numberType) {
+      case 'overflow':
+        this.setData({
+          finalCount: Number(this.data.value) > Number(this.data.maxCount) ? `${this.data.maxCount}+` : this.data.value
+        });
+        break;
+      case 'ellipsis':
+        this.setData({
+          finalCount: Number(this.data.value) > Number(this.data.maxCount) ? `...` : this.data.value
+        });
+        break;
+      case 'limit':
+        this.setData({
+          finalCount: Number(this.data.value) > 999 ? `${ Number.isInteger(this.data.value / 1000)? (this.data.value/1000) : (this.data.value/1000).toFixed(1) }k` : this.data.value
+        });
+        break;
+      default:
+        this.setData({
+          finalCount: Number(this.data.value)
+        });
+        break;
+      }
+    },
+    // 点击事件
+    handleTap() {
+      this.triggerEvent('lintap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/badge/index.json b/node_modules/lin-ui/dist/badge/index.json
new file mode 100644
index 0000000..e56592f
--- /dev/null
+++ b/node_modules/lin-ui/dist/badge/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+ 
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/badge/index.wxml b/node_modules/lin-ui/dist/badge/index.wxml
new file mode 100644
index 0000000..2854d24
--- /dev/null
+++ b/node_modules/lin-ui/dist/badge/index.wxml
@@ -0,0 +1,7 @@
+<view class="l-badge" bindtap="handleTap">
+  <slot/>
+  <block wx:if="{{show}}">
+    <view wx:if="{{dot}}" class="l-badge-dot  l-class l-class-self l-self-class"></view>
+    <view wx:else class="{{'l-badge-content-'+shape}} l-badge-content l-class l-class-self l-self-class">{{finalCount}}</view>
+  </block>
+</view> 
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/badge/index.wxss b/node_modules/lin-ui/dist/badge/index.wxss
new file mode 100644
index 0000000..5d1021d
--- /dev/null
+++ b/node_modules/lin-ui/dist/badge/index.wxss
@@ -0,0 +1 @@
+.l-badge{position:relative;display:inline-block;line-height:1;vertical-align:middle}.l-badge-content{max-width:650rpx;left:70%;background-color:#ff474b;color:#fff;position:absolute;font-size:20rpx;display:inline-block;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align:center;box-sizing:border-box;z-index:10;letter-spacing:.5rpx}.l-badge-content-horn{height:28rpx;min-width:54rpx;padding:0 8rpx;border-radius:14rpx 14rpx 14rpx 0rpx;line-height:28rpx;top:-10rpx}.l-badge-content-circle{height:32rpx;min-width:32rpx;padding:0 10rpx;border-radius:16rpx;line-height:32rpx;top:-10rpx}.l-badge-dot{height:16rpx;width:16rpx;transform:translateX(50%);border-radius:50%;background-color:#ff474b;position:absolute;top:-4rpx;right:0rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/behaviors/computeOffset.js b/node_modules/lin-ui/dist/behaviors/computeOffset.js
new file mode 100644
index 0000000..381f723
--- /dev/null
+++ b/node_modules/lin-ui/dist/behaviors/computeOffset.js
@@ -0,0 +1,19 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {},
+  data: {
+    distance: 0
+  },
+  attached(){
+    this.offsetMargin();
+  },
+  methods: {
+    offsetMargin() {
+      const { windowHeight, screenHeight } = wx.getSystemInfoSync();
+      this.setData({
+        distance: (screenHeight-windowHeight )
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/behaviors/countdown.js b/node_modules/lin-ui/dist/behaviors/countdown.js
new file mode 100644
index 0000000..5056f59
--- /dev/null
+++ b/node_modules/lin-ui/dist/behaviors/countdown.js
@@ -0,0 +1,222 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    time: {
+      type: Date,
+      value: new Date().getTime() + 86400000,
+      observer: function (newVal, oldVal) {
+        if (newVal && !oldVal) {
+          this.getLatestTime();
+        }
+      }
+    },
+    status: {
+      type: Boolean,
+      value: true,
+      observer: function (newVal) {
+        if (newVal) {
+          this.init();
+        } else if (!newVal) {
+          clearInterval(this.data.timer);
+        }
+      }
+    },
+    timeType: {
+      type: String,
+      value: 'datetime'
+    },
+    format: {
+      type: String,
+      value: '{%d}天{%h}时{%m}分{%s}秒'
+    },
+    isZeroPadd: {
+      type: Boolean,
+      value: true,
+    },
+    countdownType: {
+      type: String,
+      value: 'normal'
+    },
+    isClearInterval: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    initAddTime: 0,
+    timer: null,
+    date: [],
+  },
+  ready: function () {
+    this.getLatestTime();
+  },
+
+  detached: function () {
+    if (this.data.isClearInterval) {
+      clearInterval(this.data.timer);
+    }
+  },
+
+  pageLifetimes: {
+    hide() {
+      if (this.data.isClearInterval) {
+        clearInterval(this.data.timer);
+      }
+
+    },
+    show() {
+      if (this.data.isClearInterval) {
+        this.getLatestTime();
+      }
+    }
+  },
+
+  methods: {
+    // 自动补零
+    zeroPadding(num) {
+      num = num.toString();
+      return num[1] ? num : '0' + num;
+    },
+
+    init() {
+      clearInterval(this.data.timer);
+      const timer = setTimeout(() => {
+        this.getLatestTime.call(this);
+      }, 1000);
+      this.setData({
+        timer
+      });
+    },
+
+    getLatestTime() {
+      let {
+        time,
+        status,
+        timeType,
+        initAddTime,
+        countdownType,
+      } = this.data;
+      // IOS不支持2019-04-23 的日期格式
+      let countDownTime = time;
+      if (countdownType === 'normal') {  //当countdownType === normal时，不影响之前的代码
+        if (timeType !== 'second') {
+          countDownTime = typeof time === 'string' ? countDownTime.replace(/-/g, '/') : countDownTime;
+          countDownTime = Math.ceil((new Date(countDownTime).getTime() - new Date().getTime()) / 1000);
+        }
+
+        if (countDownTime < 0 && timeType !== 'second') {
+          this._getTimeValue(0);
+          this.CountdownEnd();
+          return;
+        }
+
+        if (countDownTime - initAddTime > 0) {
+          this.getLatestForCountDown(countDownTime);
+        } else if (countDownTime - initAddTime < 0) {
+          this.getLatestForAddTime(countDownTime);
+        } else if (countDownTime - initAddTime === 0) {
+          if (initAddTime <= 0) {
+            this._getTimeValue(countDownTime);
+          }
+          this.CountdownEnd();
+        }
+
+        if (status && countDownTime - initAddTime !== 0) {
+          this.init.call(this);
+        }
+
+      } else if (countdownType === 'anniversary') { //  当countdownType === anniversary时，为纪念日模式
+        if (timeType === 'second') {    //  纪念日模式不能设置timeType === second
+          console.error(`countdownType为${countdownType}类型时，不可设置timeType值为second`);
+        } else {
+          countDownTime = typeof time === 'string' ? countDownTime.replace(/-/g, '/') : countDownTime;
+          countDownTime = Math.ceil((new Date().getTime() - new Date(countDownTime).getTime()) / 1000);
+          if (countDownTime >= 0) {   //  countDownTime计算结果不能为负数
+            this.getLatestForCountDown(countDownTime);
+            this.init.call(this);
+          } else {
+            console.error('time传值错误');
+          }
+        }
+      } else { //  countdownType 不能设置为 normal，anniversary 以外的值
+        console.error('错误的countdownType类型');
+      }
+    },
+
+    getLatestForAddTime(countDownTime) {
+      let {
+        initAddTime
+      } = this.data;
+      if (initAddTime !== Math.abs(countDownTime)) {
+        initAddTime++;
+        this._getTimeValue(initAddTime);
+        this.setData({
+          initAddTime
+        });
+      }
+    },
+
+    getLatestForCountDown(countDownTime) {
+      this._getTimeValue(countDownTime);
+      this.setData({
+        time: this.data.timeType === 'second' ? --countDownTime : this.data.time,
+      });
+    },
+
+    _getTimeValue(countDownTime) {
+      const {
+        format
+      } = this.data;
+      const date = [];
+      const fomatArray = format.split(/(\{.*?\})/);
+      const formatType = [{
+        key: '{%d}',
+        type: 'day',
+        count: 86400
+      }, {
+        key: '{%h}',
+        type: 'hour',
+        count: 3600
+      }, {
+        key: '{%m}',
+        type: 'minute',
+        count: 60
+      }, {
+        key: '{%s}',
+        type: 'second',
+        count: 1,
+      }];
+      let diffSecond = countDownTime;
+      formatType.forEach(format => {
+        const index = this._findTimeName(fomatArray, format.key);
+        if (index === -1) return;
+        const name = fomatArray[index];
+        const formatItem = {
+          type: format.type,
+          name,
+          value: parseInt(diffSecond / format.count)
+        };
+        if (this.data.isZeroPadd) {
+          formatItem.value = this.zeroPadding(formatItem.value);
+        }
+        diffSecond %= format.count;
+        date.push(formatItem);
+      });
+      this.setData({
+        date
+      });
+      return date;
+    },
+
+    _findTimeName(fomatArray, str) {
+      const index = fomatArray.indexOf(str);
+      if (index === -1) return -1;
+      return index + 1;
+    },
+
+    CountdownEnd() {
+      this.triggerEvent('linend', {});
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/behaviors/hover.js b/node_modules/lin-ui/dist/behaviors/hover.js
new file mode 100644
index 0000000..1cd5d97
--- /dev/null
+++ b/node_modules/lin-ui/dist/behaviors/hover.js
@@ -0,0 +1,10 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    isHover:{
+      type: Boolean,
+      value: true
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/behaviors/rules.js b/node_modules/lin-ui/dist/behaviors/rules.js
new file mode 100644
index 0000000..ef79bc4
--- /dev/null
+++ b/node_modules/lin-ui/dist/behaviors/rules.js
@@ -0,0 +1,99 @@
+import Schema from '../common/async-validator/index';
+/**
+ * @param tipType String [toast , message , text]
+ */
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    // 校验
+    rules: {
+      type: Object,
+    },
+    tipType: {
+      type: String,
+      value: ''
+    }
+  },
+  data: {
+    schema: '',
+    tipFun: {
+      'message': 'showMessage',
+      'toast': 'showToast',
+    },
+    tipContent: {
+      'message': 'content',
+      'toast': 'title',
+    },
+    errorText: '',
+  },
+
+  methods: {
+    initRules() {
+      const rulesName = this.data.name;
+      const {
+        rules
+      } = this.data;
+      if (!rules) return;
+      const schema = new Schema({
+        [rulesName]: this.data.rules,
+      });
+      this.setData({
+        schema,
+      });
+    },
+    validatorData({
+      value
+    }) {
+      const {
+        rules,
+        tipType,
+        tipFun,
+        tipContent
+      } = this.data;
+
+      if (!rules) return;
+      const validateValue = {
+        [this.data.name]: value
+      };
+      this.data.schema.validate(validateValue, (errors) => {
+
+        this.triggerEvent('linvalidate', {
+          errors,
+          isError: !!errors
+        });
+
+        if (errors && tipType) {
+          const funName = tipFun[tipType];
+          const contentName = tipContent[tipType];
+          if (tipType === 'text') {
+            this.setData({
+              errorText: errors[0].message
+            });
+            return;
+          }
+
+          if (!wx.lin || !wx.lin[funName]) {
+            wx.showToast({
+              icon: 'none',
+              title: `请在页面内引入${tipType}组件`
+            });
+            return;
+          }
+
+          wx.lin[funName] && wx.lin[funName]({
+            [contentName]: errors[0].message,
+            duration: 1500,
+            mask: false,
+          });
+        } else if (!errors && tipType) {
+          this.setData({
+            errorText: ''
+          });
+        }
+
+      });
+
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/behaviors/scrollCenter.js b/node_modules/lin-ui/dist/behaviors/scrollCenter.js
new file mode 100644
index 0000000..5d54661
--- /dev/null
+++ b/node_modules/lin-ui/dist/behaviors/scrollCenter.js
@@ -0,0 +1,54 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  methods: {
+    getRect(selector, all = false) {
+      return new Promise((resolve, reject) => {
+        const query = wx.createSelectorQuery().in(this);
+        const type = all ? query.selectAll(selector) : query.select(selector);
+        type.boundingClientRect((res) => {
+          if (!res) return reject('找不到元素');
+          resolve(res);
+        }).exec();
+      });
+    },
+    queryScrollNode(res, currentIndex, type = 'width') {
+      const currentRect = res[currentIndex];
+
+      this.getRect('.l-tabsscroll').then(_ => {
+        const scrollWidth = _[type];
+
+        let transformDistance = res
+          .slice(0, currentIndex)
+          .reduce((prev, curr) => prev + curr[type], 0);
+
+        transformDistance += (currentRect[type] - scrollWidth) / 2;
+
+        if (type === 'width') {
+          this.setData({
+            transformX: transformDistance,
+            transformY: 0
+          });
+        } else {
+          this.setData({
+            transformX: 0,
+            transformY: transformDistance
+          });
+        }
+      });
+    },
+    queryMultipleNodes() {
+      const {
+        placement,
+        currentIndex
+      } = this.data;
+      this.getRect('.l-tabs-item', true)
+        .then((res) => {
+          if (['top', 'bottom'].indexOf(placement) !== -1) {
+            this.queryScrollNode(res, currentIndex);
+          } else {
+            this.queryScrollNode(res, currentIndex, 'height');
+          }
+        });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/behaviors/watchShow.js b/node_modules/lin-ui/dist/behaviors/watchShow.js
new file mode 100644
index 0000000..d2569e8
--- /dev/null
+++ b/node_modules/lin-ui/dist/behaviors/watchShow.js
@@ -0,0 +1,26 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  observers: {
+    'show': function (show) {
+      show && this.changeStatus();
+      if (!show) this.setData({
+        status: show
+      });
+    }
+  },
+  methods: {
+    changeStatus() {
+      this.setData({
+        status: true
+      });
+      if (this.data.timer) clearTimeout(this.data.timer);
+      this.data.timer = setTimeout(() => {
+        this.setData({
+          status: false
+        });
+        if (this.data.success) this.data.success();
+        this.data.timer = null;
+      }, this.properties.duration);
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/behaviors/zIndex.js b/node_modules/lin-ui/dist/behaviors/zIndex.js
new file mode 100644
index 0000000..3e3d941
--- /dev/null
+++ b/node_modules/lin-ui/dist/behaviors/zIndex.js
@@ -0,0 +1,10 @@
+// eslint-disable-next-line no-undef
+export default Behavior({
+  behaviors: [],
+  properties: {
+    zIndex:{
+      type: Number,
+      value: 777
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/button/index.js b/node_modules/lin-ui/dist/button/index.js
new file mode 100644
index 0000000..201ca03
--- /dev/null
+++ b/node_modules/lin-ui/dist/button/index.js
@@ -0,0 +1,78 @@
+Component({
+  externalClasses: ['l-class', 'l-hover-class', 'l-img-class','l-icon-class'],
+  properties: {
+    // button组建标识
+    name: {
+      type: String,
+      value: 'lin'
+    },
+    type: {
+      type: String,
+      value: 'default',
+    },
+    plain: Boolean,
+    size: {
+      type: String,
+      value: 'medium',
+    },
+    shape: {
+      type: String,
+      value: 'circle',
+    },
+    disabled: {
+      type: Boolean,
+      value: false,
+    },
+    special: {
+      type: Boolean,
+      value: false,
+    },
+    loading: {
+      type: Boolean,
+      value: false,
+    },
+    // 微信原生接口
+    width: Number,
+    height: Number,
+    icon: String,
+    image: String,
+    bgColor: String,
+    iconColor: String,
+    iconSize: String,
+    openType: String,
+    appParameter: String,
+    lang: String,
+    hoverStopPropagation: Boolean,
+    hoverStartTime: {
+      type: Number,
+      value: 20
+    },
+    hoverStayTime: {
+      type: Number,
+      value: 70
+    },
+    sessionFrom: {
+      type: String,
+      value: ''
+    },
+    sendMessageTitle: String,
+    sendMessagePath: String,
+    sendMessageImg: String,
+    showMessageCard: Boolean,
+    formType: String
+  },
+  methods: {
+    // button点击事件
+    handleTap() {
+      if (this.data.disabled || this.data.loading) return false;
+      this.triggerEvent('lintap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    // 开放能力事件回调
+    openTypeEvent(data) {
+      this.triggerEvent(data.type, data.detail, {});
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/button/index.json b/node_modules/lin-ui/dist/button/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/node_modules/lin-ui/dist/button/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/button/index.wxml b/node_modules/lin-ui/dist/button/index.wxml
new file mode 100644
index 0000000..f8079c2
--- /dev/null
+++ b/node_modules/lin-ui/dist/button/index.wxml
@@ -0,0 +1,39 @@
+<label for="{{name}}" bindtap="handleTap">
+  <block wx:if="{{special}}">
+    <view class="special-container l-class">
+      <slot/>
+    </view>
+  </block>
+  <block wx:else>
+    <view class="l-btn {{ 'l-btn-' + size }} {{ 'l-btn-' + type }} {{ 'l-btn-' + shape }} {{plain?'l-btn-plain':''}} {{ disabled ? 'l-btn-disabled' : ''}} l-class " 
+          hover-class="btn-hover l-hover-class"
+          hover-stop-propagation="{{hoverStopPropagation}}"
+          hover-start-time="{{hoverStartTime}}"
+          hover-stay-time="{{hoverStayTime}}"
+          style="{{width?'min-width:'+width+'rpx;':''}} {{height?'height:'+height+'rpx;'+'line-height:'+height+'rpx;':''}} {{size=='long'?'border-radius:0;':''}} {{'background-color:'+bgColor}}">
+      <view wx:if="{{loading}}" class="l-btn-loading {{'margin-' + size}} {{ plain ?'l-btn-loading-' + type : '' }}"></view>
+      <l-icon l-class="l-icon-class" class="{{'margin-' + size}}" wx:if="{{icon}}" name="{{icon}}" color="{{iconColor}}" size="{{iconSize}}" />
+      <slot/>
+    </view>
+  </block>
+</label>
+<button style="position: absolute;top: -999px;left: -999px;"
+        wx:if="{{openType}}"
+        id="{{name}}" 
+        lang="{{lang}}" 
+        form-type="{{formType}}" 
+        open-type="{{openType}}" 
+        app-parameter="{{ appParameter }}" 
+        hover-stop-propagation="{{ hoverStopPropagation }}" 
+        hover-start-time="{{ hoverStartTime }}" 
+        hover-stay-time="{{ hoverStayTime }}"
+        session-from="{{ sessionFrom }}" 
+        send-message-title="{{ sendMessageTitle }}" 
+        send-message-path="{{ sendMessagePath }}" 
+        send-message-img="{{ sendMessageImg }}" 
+        show-message-card="{{ showMessageCard }}" 
+        bindcontact="openTypeEvent" 
+        bindgetuserinfo="openTypeEvent"
+        bindgetphonenumber="openTypeEvent" 
+        bindopensetting="openTypeEvent">
+</button>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/button/index.wxss b/node_modules/lin-ui/dist/button/index.wxss
new file mode 100644
index 0000000..da04df6
--- /dev/null
+++ b/node_modules/lin-ui/dist/button/index.wxss
@@ -0,0 +1 @@
+.btn-hover{opacity:.8}.special-container{display:flex}.l-btn{display:inline-flex;align-items:center;justify-content:center;white-space:nowrap;font-size:28rpx;position:relative;color:#fff;padding:0 12rpx;box-sizing:border-box}.l-btn-img-mini{width:30rpx;height:30rpx}.l-btn-img-medium{width:36rpx;height:36rpx}.l-btn-img-large{height:44rpx;width:44rpx}.l-btn-long{border-radius:0;margin:0;height:88rpx;width:100%}.l-btn-medium{height:72rpx;min-width:180rpx}.l-btn-large{height:88rpx;min-width:710rpx}.l-btn-mini{height:60rpx;min-width:140rpx;font-size:24rpx}.l-btn-default{background-color:#3963bc}.l-btn-success{background-color:#34bfa3}.l-btn-warning{background-color:#ffe57f;color:#333}.l-btn-error{background-color:#f4516c}.l-btn-square{border-radius:0}.l-btn-semicircle{border-radius:40rpx}.l-btn-large.l-btn-semicircle{border-radius:48rpx}.l-btn-mini.l-btn-semicircle{border-radius:30rpx}.l-btn-circle{border-radius:8rpx}.l-btn-large.l-btn-circle{border-radius:9.6rpx}.l-btn-mini.l-btn-circle{border-radius:6rpx}.l-btn-plain{background-color:#fff;color:#3963bc;border:2rpx solid #3963bc}.l-btn-success.l-btn-plain{background-color:#fff;color:#34bfa3;border:2rpx solid #34bfa3}.l-btn-error.l-btn-plain{background-color:#fff;color:#f4516c;border:2rpx solid #f4516c}.l-btn-warning.l-btn-plain{background-color:#fff;color:#ffe57f;border:2rpx solid #ffe57f}.l-btn-loading{opacity:.6;display:inline-block;vertical-align:middle;width:24rpx;height:24rpx;background:0 0;border-radius:50%;border:4rpx solid #fff;border-color:#fff #fff #fff transparent;animation:btn-spin .6s linear;animation-iteration-count:infinite}.l-btn-loading-default{border:4rpx solid #3963bc;border-color:#3963bc #3963bc #3963bc transparent}.l-btn-loading-success{border:4rpx solid #34bfa3;border-color:#34bfa3 #34bfa3 #34bfa3 transparent}.l-btn-loading-error{border:4rpx solid #f4516c;border-color:#f4516c #f4516c #f4516c transparent}.l-btn-loading-warning{border:4rpx solid #ffe57f;border-color:#ffe57f #ffe57f #ffe57f transparent}.l-btn-disabled{opacity:.8;background-color:#dee2e6}.icon{display:flex!important}.margin-mini{margin-right:10rpx}.margin-medium{margin-right:18rpx}.margin-large{margin-right:24rpx}@keyframes btn-spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/card/index.js b/node_modules/lin-ui/dist/card/index.js
new file mode 100644
index 0000000..e09695a
--- /dev/null
+++ b/node_modules/lin-ui/dist/card/index.js
@@ -0,0 +1,42 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-class', 'l-img-class','l-title-class'],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    image: String,
+    title: String,
+    describe: String,
+    plaintext: Boolean,
+    full: Boolean,
+    position:{
+      type:String,
+      value:'left'
+    },
+    imageMode:{
+      type:String,
+      value: 'aspectFit'
+    },
+    type: {
+      type: String,
+      value: 'primary'
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/card/index.json b/node_modules/lin-ui/dist/card/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/node_modules/lin-ui/dist/card/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/card/index.wxml b/node_modules/lin-ui/dist/card/index.wxml
new file mode 100644
index 0000000..7184b79
--- /dev/null
+++ b/node_modules/lin-ui/dist/card/index.wxml
@@ -0,0 +1,22 @@
+<view class="l-class card-container {{'card-container-' + type}} {{'card-container-' + type + '-' + position}} {{full?'card-container-full':'card-container-unfull'}}">
+  <block wx:if="{{type ==='primary' || type ==='cover'}}">
+    <image wx:if="{{!plaintext}}" class="l-img-class {{full?'cover-img-full':'cover-img-unfull'}} {{ 'card-img-' + type }} {{ 'card-img-' + type + '-' + position }}" mode="aspectFill" lazy-load="{{true}}" src="{{image}}"></image>
+    <view class="card-content">
+      <text class="l-title-class card-title {{'card-title-' + type}}">{{title}}</text>
+      <slot />
+    </view>
+  </block>
+  <block wx:if="{{type ==='avatar'}}">
+    <view class="card-avatar-top">
+      <view class="card-avatar-left">
+        <image lazy-load mode="{{imageMode}}" class="l-img-class {{ 'card-img-' + type }}" src='{{image}}'></image>
+        <view class="card-avatar">
+          <text class="l-title-class card-title {{'card-title-' + type}}">{{title}}</text>
+          <text class="describe">{{describe}}</text>
+        </view>
+      </view>
+      <slot name="more" />
+    </view>
+    <slot />
+  </block>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/card/index.wxss b/node_modules/lin-ui/dist/card/index.wxss
new file mode 100644
index 0000000..f4f948a
--- /dev/null
+++ b/node_modules/lin-ui/dist/card/index.wxss
@@ -0,0 +1 @@
+.card-container{margin:0 auto;padding:30rpx;box-sizing:border-box;background:#fff;display:flex}.card-container-full{width:100%}.card-container-unfull{width:92%;box-shadow:0 4rpx 20rpx 0 rgba(212,217,223,.5);border-radius:4px}.card-container-primary-left{flex-direction:row}.card-container-primary-right{flex-direction:row-reverse}.card-container-avatar{flex-direction:column}.card-container-cover{flex-direction:column}.cover-img-full{width:100%;height:260rpx}.cover-img-unfull{width:100%;height:260rpx}.card-img-primary{height:240rpx;width:240rpx;overflow:hidden}.card-img-primary-left{margin-right:40rpx}.card-img-primary-right{margin-left:40rpx}.card-img-avatar{height:60rpx;width:60rpx;border-radius:50%;margin-right:30rpx}.card-img-avatar{height:60rpx;width:60rpx;border-radius:50%;margin-right:30rpx}.card-content{position:relative;display:flex;flex-direction:column;flex:1}.card-title{overflow:hidden;text-overflow:ellipsis;color:#333}.card-title-primary{font-size:32rpx;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.card-title-avatar{font-size:28rpx}.card-title-cover{font-size:30rpx;margin-top:10rpx}.card-title-avatar{font-size:28rpx}.card-avatar-top{display:flex;flex-direction:row;height:100rpx;align-items:center;justify-content:space-between}.card-avatar-left{display:flex;flex-direction:row;align-items:center}.card-avatar{display:flex;flex-direction:column}.describe{color:#666;font-size:24rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/checkbox-group/index.js b/node_modules/lin-ui/dist/checkbox-group/index.js
new file mode 100644
index 0000000..179372b
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox-group/index.js
@@ -0,0 +1,106 @@
+Component({
+  behaviors: ['wx://form-field'],
+  externalClasses: ['l-class', 'l-error-text', 'l-error-text-class'],
+  relations: {
+    '../checkbox/index': {
+      type: 'child',
+      linked(target) {
+        this.init(target);
+      },
+      linkChanged() {
+      },
+      unlinked() {
+        // this.init(target);
+      }
+    }
+  },
+  properties: {
+    // 选项的排列方式 一行显示 or 多行显示
+    placement: {
+      type: String,
+      value: 'column', //column row
+    },
+    // 最多选中值
+    maxSelected: {
+      type: [Number,null],
+      value: null
+    },
+    minSelected: {
+      type: [Number,null],
+      value: null
+    }
+  },
+  data: {
+  },
+  attached() {
+    let { minSelected, maxSelected} = this.properties;
+    this.checkMax(minSelected, maxSelected);
+  },
+  methods: {
+
+    init(target) {
+      if(this._keys === undefined) this._keys = {};
+      // if(this._selected === undefined) this._selected = {};
+      // this.checkDefaultItem(target);
+      this.checkedKeyRepeat(target);
+    },
+
+    checkedKeyRepeat(target) {
+      let { key } = target.properties;
+      if(this._keys[key]) {
+        throw new Error(`keys有重复元素, chekbox的key属性不能重复：${key}`);
+      } else {
+        this._keys[key] = true;
+      }
+    },
+
+    checkDefaultItem(target) {
+      const { key, checked } = target.properties;
+      if(checked) {
+        this._selected[key] = checked;
+      }
+    },
+
+    checkMax(min, max) {
+      if(min !== null && min < 0) {
+        throw new Error('最小选择个数必须大于等于0');
+      }
+      if(max !== null && max < 0) {
+        throw new Error('最多选择个数必须大于0');
+      }
+      if(max !== null && min !== null && min >= max) {
+        throw new Error('最多选择个数必须大于最小选择个数');
+      }
+    },
+
+    onEmitEventHandle(currentItem) {
+      // currentItem.checked ? this.addSelect(currentItem.key):this.removeSelect(currentItem.key);
+
+      this.triggerEvent('linchange', currentItem, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    onEmitOverflowHandle(data){
+      this.triggerEvent('linout', data, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    removeSelect(key) {
+      delete this._selected[key];
+    },
+    addSelect(key) {
+      this._selected[key] = key;
+    },
+    _selected(){
+      const items = this.getRelationNodes('../checkbox/index');
+      let num = 0;
+      items.map(item=> {
+        item.properties.checked ? num++ : '';
+      });
+      return num;
+    }
+
+  }
+});
diff --git a/node_modules/lin-ui/dist/checkbox-group/index.json b/node_modules/lin-ui/dist/checkbox-group/index.json
new file mode 100644
index 0000000..742ff99
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox-group/index.json
@@ -0,0 +1,7 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-error-tip":"../error-tip/index",
+        "l-checkbox": "../checkbox/index"
+    }
+}
diff --git a/node_modules/lin-ui/dist/checkbox-group/index.wxml b/node_modules/lin-ui/dist/checkbox-group/index.wxml
new file mode 100644
index 0000000..f5f9375
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox-group/index.wxml
@@ -0,0 +1,4 @@
+<view class="l-class checkbox-group checkbox-group-{{placement}} ">
+  <slot></slot> 
+</view>
+  <l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
diff --git a/node_modules/lin-ui/dist/checkbox-group/index.wxss b/node_modules/lin-ui/dist/checkbox-group/index.wxss
new file mode 100644
index 0000000..1cdd3b8
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox-group/index.wxss
@@ -0,0 +1 @@
+.checkbox-group{flex-wrap:wrap}.checkbox-group-row{display:flex;flex-direction:row}.checkbox-group-column{display:flex;flex-direction:column}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/checkbox/index.js b/node_modules/lin-ui/dist/checkbox/index.js
new file mode 100644
index 0000000..7dc74b7
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox/index.js
@@ -0,0 +1,110 @@
+Component({
+  behaviors: ['wx://form-field'],
+  externalClasses: ['l-class', 'l-disabled-class'],
+  relations: {
+    '../checkbox-group/index': {
+      type: 'parent'
+    }
+  },
+  options: {
+    multipleSlots: true
+  },
+  properties: {
+    // checkbox 按钮的位置
+    placement: {
+      type: String,
+      value: 'left'
+    },
+    //  是否自定义图标内容
+    custom: {
+      type: Boolean,
+      value: false
+    },
+    key: {
+      type: String,
+      value: ''
+    },
+    cell: {
+      type: Object,
+      value: {}
+    },
+    // checkbox的大小
+    size: {
+      type: String,
+      value: '38rpx'
+    },
+    // 不可选状态
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    //  选中后的颜色
+    selectColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    disabledColor: {
+      type: String,
+      value: '#ccc'
+    },
+    color: {
+      type: String,
+      value: '#ccc'
+    },
+    checked: {
+      type: Boolean,
+      value: false
+    }
+  },
+  data: {
+    parentPlacement: ''
+  },
+  ready() {
+    const parent = this.getRelationNodes('../checkbox-group/index')[0];
+    let {placement:parentPlacement} = parent.properties;
+    this.setData({parentPlacement});
+  },
+  methods: {
+    // 点击checkbox
+    onCheckboxChangeTap() {
+      if (this.properties.disabled || this.data.parentDisabled) {
+        return;
+      }
+
+      const parent = this.getRelationNodes('../checkbox-group/index')[0];
+
+      if(this.properties.checked) {
+        if(this.isOverflow('minSelected')) return;
+      } else {
+        if(this.isOverflow('maxSelected')) return;
+      }
+
+      const item = {
+        checked: !this.properties.checked,
+        key: this.properties.key,
+        cell: this.properties.cell
+      };
+      if (parent) {
+        parent.onEmitEventHandle(item);
+      }
+    },
+
+    /**
+     *
+     * @param {*} type (max/min)
+     */
+    isOverflow(type) {
+      const parent = this.getRelationNodes('../checkbox-group/index')[0];
+
+      const limit = parent.properties[type];
+      if (!limit) return false;
+      const selectedLength = parent._selected();
+      let isOverflow = type === 'minSelected' ? selectedLength <= limit : selectedLength >= limit;
+      if (isOverflow) {
+        let backType = type === 'minSelected' ? 'min_selected' : 'max_selected';
+        parent.onEmitOverflowHandle && parent.onEmitOverflowHandle({key: this.properties.key, limitNumber: limit, type: `overflow_${backType}`});
+      }
+      return isOverflow;
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/checkbox/index.json b/node_modules/lin-ui/dist/checkbox/index.json
new file mode 100644
index 0000000..f6ca6c1
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-button": "../button/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/checkbox/index.wxml b/node_modules/lin-ui/dist/checkbox/index.wxml
new file mode 100644
index 0000000..e17d439
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox/index.wxml
@@ -0,0 +1,8 @@
+<view bind:tap="onCheckboxChangeTap" 
+      class="label label-{{placement}} label-placement-{{parentPlacement}} {{disabled ? 'label-disabled l-disabled-class' : 'l-class'}}">
+        <view class="checkbox" style="color:{{checked ? selectColor : (disabled ? disabledColor : color)}};font-size: {{size}}">
+            <slot wx:if="{{custom}}" name="icon"/>
+            <view wx:else class="iconfont {{checked? 'icon-select': 'icon-unselect'}}"></view>
+        </view>
+        <slot />
+</view>
diff --git a/node_modules/lin-ui/dist/checkbox/index.wxss b/node_modules/lin-ui/dist/checkbox/index.wxss
new file mode 100644
index 0000000..c36bbfe
--- /dev/null
+++ b/node_modules/lin-ui/dist/checkbox/index.wxss
@@ -0,0 +1 @@
+.label{display:flex;flex:1;align-items:center;font-size:30rpx;color:#333;width:100%;box-sizing:border-box}.label-left{flex-direction:row}.label-right{flex-direction:row-reverse;justify-content:space-between}.label-disabled{color:#ccc}.label-placement-row{padding-right:30rpx}.checkbox{margin-right:20rpx}.iconfont{font-family:iconfont!important;display:inline-flex;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAMMAAsAAAAABxgAAAK9AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBeIFdATYCJAMMCwgABCAFhG0HQBstBlGUzMkA2c8E020e0uBCKA1ReoTOr2jhX60Fez8evvb7nbu7X40GSTTS8S6aRBOpkCB1plMyIWkJb/+nLTemUXn+tjy1proDbGd+u9OXhuW20ygDQoJwOPhjfw50kxP0dlsW4tKSEtLyKhWqIpT/3MKy5KTZgMvpr8TnWZbTWts2jgmYYEBjDHuKrEQCzjUF2R2BWvJ9Am0LeioHm9MVtBXOskC8RIED7VJMUaRiU6i37C3iHV4zvaZPKG/x5+OfLdoktcxZe/S89mH27bv8VD0phAT5ch5Ih8jYBApx3eq7Uktzm2rahqZu1oO6IqSlklVFLDMN9YP+8RJR55R2wSrNJ775IoLvWEgggzoKDoFYipp4U38JhsVnsZqMDSLDTR9O5v6lxM+emWKnJ0j1WkJfv81PpvtdvqfbrTPuXw1+/Yswbx81bvFu4GNdLq7/WnYQrkR7OT7DTrwSHIOw0QhHGI+BEQb/TCiV/n/7MQFAQ9mO3iwSi9Gz9MCEpIu0tWgZiFkilLN8tRFgA1SnfMgz8o0Kgo9Q+Gcx3f/tTgFfe45JtDoVFO7QvAt/8FflYE8xlY49F13my+xAtjTRk6ASOahCOaGxn+mGGVxKaJrlSBrmkTUtkoWziZqOLdQ1baNtw/Zwx4SoidLCuneCMPSBpO8T2dAXWTjfqJnzi7ph1NB2EdwzO5Yj6oaEHCUf3UeMPM6N59RuUn6m4DZ1pKiMuTckZZTE8WBULW4pJ1liQ3kXTFQNGuEMN+QxSlPGQjgmTwehajEdDk3biwYeZ9C1TxCHIj7keoQiHpYz4XDVrb3/jARupRzS09AQv0FEKRodjQ2MAHKry6GGR2FTuhOYUMpAhmAZtCEekro5hor2WTHiUQPhhExhasgGGVQ32N6Q/UCp1ILzXI4UOYrOQ0he4vKDxXk7twIAAAAA') format('woff2')}.icon-unselect:before{content:"\e727"}.icon-select:before{content:"\e725"}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/combined-tabs/index.js b/node_modules/lin-ui/dist/combined-tabs/index.js
new file mode 100644
index 0000000..1740bc2
--- /dev/null
+++ b/node_modules/lin-ui/dist/combined-tabs/index.js
@@ -0,0 +1,267 @@
+// components/tabs/index.js
+Component({
+  externalClasses: ['l-class-header', 'l-class-active', 'l-class-inactive', 'l-class-line', 'l-class-tabimage',
+    'l-header-class', 'l-active-class', 'l-inactive-class', 'l-line-class', 'l-tabimage-class'
+  ],
+  relations: {
+    '../tabpanel/index': {
+      type: 'child',
+    },
+    linked() {
+      // 每次有子节点被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+      this.initTabs();
+    },
+    unlinked() {
+      this.initTabs();
+    }
+  },
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  /**
+   * 组件的属性列表
+   */
+  properties: {
+    activeKey: {
+      type: String,
+      value: '',
+      observer: 'changeCurrent'
+    },
+    placement: {
+      type: String,
+      value: 'top',
+    },
+    aminmated: Boolean,
+    scrollable: Boolean,
+    swipeable: {
+      type: Boolean,
+      value: true,
+    },
+    hasLine: {
+      type: Boolean,
+      value: true
+    },
+    activeColor: {
+      type: String,
+      value: '#333333'
+    },
+    inactiveColor: {
+      type: String,
+      value: '#bbbbbb'
+    },
+
+  },
+
+  data: {
+    tabList: [],
+    currentIndex: 0,
+    transformX: 0,
+    transformY: 0,
+  },
+
+  ready() {
+    this.initTabs();
+
+  },
+
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initTabs() {
+      this.initTabList();
+      this.initActiveIndex();
+    },
+    initActiveIndex(val = this.data.activeKey) {
+      let activeKey = val,
+        currentIndex = this.data.currentIndex;
+      this.data.tabList.forEach((item, index) => {
+        activeKey = !val && index == 0 ? item.key : activeKey;
+        currentIndex = item.key === activeKey ? index : currentIndex;
+      });
+      this.setData({
+        activeKey,
+        currentIndex,
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+    },
+
+    initTabList() {
+      let items = this.getRelationNodes('../tabpanel/index');
+      if (items.length > 0) {
+        const tabList = [];
+        items.forEach((item) => {
+          const tabIndex = tabList.findIndex(tabItem => tabItem.tab === item.data.tab);
+          let tab = {};
+          if (tabIndex === -1) {
+            tab = {
+              tab: item.data.tab,
+              key: item.data.key,
+              icon: item.data.icon,
+              iconStyle: item.data.iconStyle,
+              image: item.data.image,
+              subTabs: [],
+            };
+            tabList.push(tab);
+          }
+          const targetTab = tabIndex === -1 ? tab : tabList[tabIndex];
+          if (item.data.subTab) {
+            targetTab.subTabs = targetTab.subTabs || [];
+            const subTabItem = {
+              tab: item.data.subTab,
+              key: item.data.subKey,
+            };
+            targetTab.subTabs.push(subTabItem);
+            targetTab.activeSubKey = this.data.subActiveKey || targetTab.subTabs[0].key;
+            targetTab.subCurrentIndex = 0;
+          }
+        });
+        this.setData({
+          tabList,
+        });
+      }
+    },
+    swiperChange(e) {
+      const {
+        source,
+        current
+      } = e.detail;
+      if (source == 'touch') {
+        const currentIndex = current;
+        const activeKey = this.data.tabList[current].key;
+        const subCurrentIndex = this.data.tabList[currentIndex].subCurrentIndex;
+        const activeSubKey = this.data.tabList[currentIndex].activeSubKey;
+        this._setChangeData({
+          activeKey,
+          currentIndex,
+          subCurrentIndex,
+          activeSubKey,
+        });
+      }
+    },
+    subSwiperChange(e) {
+      const {
+        source,
+        current
+      } = e.detail;
+      if (source == 'touch') {
+        const {
+          currentIndex,
+          activeKey
+        } = this.data;
+        const subCurrentIndex = current;
+        const activeSubKey = this.data.tabList[currentIndex].subTabs[subCurrentIndex].key;
+        const tabs = this.data.tabList[currentIndex];
+        tabs.activeSubKey = activeSubKey;
+        tabs.subCurrentIndex = subCurrentIndex;
+
+        this.setData({
+          [`tabList[${currentIndex}]`]: tabs
+        });
+
+        this._setChangeData({
+          activeKey,
+          currentIndex,
+          activeSubKey,
+          subCurrentIndex
+        });
+      }
+    },
+    handleChange(e) {
+      const isSubHeader = e.currentTarget.dataset.headerType === 'subTab';
+      const {
+        currentIndex,
+        activeKey
+      } = this.data;
+
+      const clickIndex = e.currentTarget.dataset.index;
+      const subCurrentIndex = isSubHeader ? clickIndex : this.data.tabList[clickIndex].subCurrentIndex;
+      const activeSubKey = isSubHeader ? this.data.tabList[currentIndex].subTabs[subCurrentIndex].key : this.data.tabList[clickIndex].activeSubKey;
+      if (isSubHeader) {
+        const tabs = this.data.tabList[currentIndex];
+        tabs.activeSubKey = activeSubKey;
+        tabs.subCurrentIndex = subCurrentIndex;
+        this.setData({
+          [`tabList[${currentIndex}]`]: tabs
+        });
+        this._setChangeData({
+          activeKey,
+          currentIndex,
+          activeSubKey,
+          subCurrentIndex
+        });
+
+      } else {
+        const activeKey = e.currentTarget.dataset.key;
+        this._setChangeData({
+          activeKey,
+          currentIndex: clickIndex,
+          subCurrentIndex,
+          activeSubKey
+        });
+      }
+    },
+
+    _setChangeData({
+      activeKey,
+      currentIndex,
+      activeSubKey = '',
+      subCurrentIndex = null,
+    }) {
+      this.setData({
+        activeKey,
+        currentIndex
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+      this.triggerEvent('linchange', {
+        activeKey,
+        currentIndex,
+        activeSubKey,
+        subCurrentIndex,
+      });
+    },
+
+    queryMultipleNodes() {
+      const {
+        placement,
+        activeKey,
+        tabList
+      } = this.data;
+      this._getRect('#' + activeKey)
+        .then((res) => {
+          if (['top', 'bottom'].indexOf(placement) !== -1) {
+            this.setData({
+              transformX: res.left - tabList.length / 2 * res.width,
+              transformY: 0
+            });
+          } else {
+            this._getRect('.l-tabs-header')
+              .then((navRect) => {
+                const transformY = res.top - navRect.top - navRect.height / 2;
+                this.setData({
+                  transformX: 0,
+                  transformY: transformY
+                });
+              });
+          }
+        });
+    },
+
+    _getRect(selector) {
+      return new Promise((resolve, reject) => {
+        const query = wx.createSelectorQuery().in(this);
+        query.select(selector).boundingClientRect((res) => {
+          if (!res) return reject('找不到元素');
+          resolve(res);
+        }).exec();
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/combined-tabs/index.json b/node_modules/lin-ui/dist/combined-tabs/index.json
new file mode 100644
index 0000000..398bd03
--- /dev/null
+++ b/node_modules/lin-ui/dist/combined-tabs/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index",
+    "l-badge":"../badge/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/combined-tabs/index.wxml b/node_modules/lin-ui/dist/combined-tabs/index.wxml
new file mode 100644
index 0000000..05ce293
--- /dev/null
+++ b/node_modules/lin-ui/dist/combined-tabs/index.wxml
@@ -0,0 +1,44 @@
+<!-- components/tabs/index.wxml -->
+<view class="l-tabs l-placement-top l-tabs-horizontal {{aminmated ? 'l-aminmated' :''}} {{scrollable ? 'l-tabs-scroll':''}}">
+    <template is="tab-header" data="{{tab:tabList,placemanet,scrollable,transformY,transformX,activeKey,hasLine,activeColor,inactiveColor,headerType:'tab'}}"></template>
+    <view class="l-tabs l-sub-placement-left l-tabs-vertical {{aminmated ? 'l-aminmated' :''}}  {{scrollable ? 'l-tabs-scroll':''}}">
+        <template is="tab-header" wx:if="{{tabList[currentIndex].subTabs.length}}" data="{{tab:tabList[currentIndex].subTabs,placemanet,scrollable,transformY,transformX,activeKey:tabList[currentIndex].activeSubKey,hasLine,activeColor,inactiveColor,headerType:'subTab'}}"></template>
+        <view class="l-tabs-main">
+            <view wx:if="{{!swipeable}}" class="l-tabpanel-content">
+                <view class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':'l-tabpanel-inactive'}}" wx:for="{{tabList}}" wx:key="{{item.key}}" style="{{placement=='left'||placement=='right' ? 'position:absolute;width:100%;height:100%;transform:translate(0,'+ 100 * index +'%) translateZ(0px);':''}}">
+                    <view class="l-subpanel-content" wx:if="{{item.subTabs.length>0}}" style="{{'transform:translate(0,'+ -100 * item.subCurrentIndex +'%) translateZ(0px);'}}">
+                        <view class="l-subpanel" wx:for="{{item.subTabs}}" wx:for-item="tab" wx:key="{{tab.key}}">
+                            <slot name="{{tab.key}}"></slot>
+                        </view>
+                    </view>
+                    <slot name="{{item.key}}" wx:else></slot>
+                </view>
+            </view>
+            <swiper wx:else class="l-tabpanel-content" bindchange="swiperChange" current="{{currentIndex}}">
+                <swiper-item class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':''}}" wx:for="{{tabList}}" wx:key="{{item.key}}">
+                    <view wx:if="{{item.subTabs.length>0}}">
+                        <swiper class="" vertical bindchange="subSwiperChange" current="{{item.subCurrentIndex}}" >
+                            <swiper-item wx:for="{{item.subTabs}}" wx:for-item="tab" wx:key="{{tab.key}}">
+                                <slot name="{{tab.key}}"></slot>
+                            </swiper-item>
+                        </swiper>
+                      
+                    </view>   
+                      <slot name="{{item.key}}" wx:else></slot>    
+                </swiper-item>
+            </swiper>
+        </view>
+    </view>
+</view>
+<template name="tab-header">
+    <scroll-view scroll-x="{{headerType==='tab' && scrollable}}" scroll-y="{{headerType==='subTab' && scrollable}}" scroll-top="{{transformY}}" scroll-left="{{transformX}}" scroll-with-animation class="l-tabsscroll">
+        <view class="l-tabs-header l-class-header l-header-class {{hasLine?'l-tabs-header-line':''}}">
+            <view id="{{item.key}}" class="l-tabs-item {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+item.image.placement}}" style="color:{{item.key===activeKey?activeColor:inactiveColor}}" wx:for="{{tab}}" wx:key="{{item.key}}" data-key="{{item.key}}" data-index="{{index}}" data-header-type="{{headerType}}" bind:tap="handleChange">
+                <image wx:if="{{ item.image.activeImage || item.image.defaultImage }}" src="{{item.key===activeKey? item.image.activeImage:item.image.defaultImage}}" class="l-tab-image l-class-tabimage l-tabimage-class" />
+                <l-icon wx:if="{{item.icon}}" l-class="{{item.key===activeKey ? 'l-icon-active':'l-icon-inactive'}}" name="{{item.icon}}" size="28" color="{{item.key===activeKey?activeColor:inactiveColor}}" />
+                {{item.tab}}
+                <view class="l-tab-line l-class-line l-line-class" wx:if="{{hasLine && item.key===activeKey}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+            </view>
+        </view>
+    </scroll-view>
+</template>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/combined-tabs/index.wxss b/node_modules/lin-ui/dist/combined-tabs/index.wxss
new file mode 100644
index 0000000..cda6d30
--- /dev/null
+++ b/node_modules/lin-ui/dist/combined-tabs/index.wxss
@@ -0,0 +1 @@
+.l-tabs{display:flex;border-radius:8rpx;box-sizing:border-box;overflow:hidden;flex-direction:column;background:#fff;height:100%}.l-tabs .l-tabs-header{display:flex;width:100%;flex-direction:row;background:#fff;align-items:center}.l-tabs .l-tabs-header .l-tabs-item{flex:1;font-size:28rpx;text-align:center;box-sizing:border-box;display:flex;justify-content:center;align-items:center}.l-tabs .l-tabs-header .l-icon-active,.l-tabs .l-tabs-header .l-tabs-active{color:#333;font-size:28rpx}.l-tabs .l-tabs-header .l-icon-inactive,.l-tabs .l-tabs-header .l-tabs-inactive{font-size:28rpx;color:#bbb}.l-tabs .l-tabs-header .l-tabsitems-row{flex-direction:row}.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-inactive{margin-right:10rpx}.l-tabs .l-tabs-header .l-tabsitems-row-reverse{flex-direction:row-reverse}.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-inactive{margin-left:10rpx}.l-placement-top .l-tabs-header{height:80rpx}.l-placement-top .l-tabs-header .l-tabs-item{min-height:100%}.l-sub-placement-left{flex-direction:row}.l-sub-placement-left .l-tabs-header{flex-direction:column;width:160rpx}.l-sub-placement-left .l-tabs-header>view{width:100%;height:80rpx;background:#f6f8fa}.l-sub-placement-left .l-tabs-header>.l-tabs-active{background:#fff}.l-sub-placement-left .l-tabs-main .l-tabpanel-content{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;position:relative;will-change:transform;transition:transform .3s cubic-bezier(.645,.045,.355,1)}.l-placement-top .l-tabpanel-content{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.l-subpanel-content{width:100%;height:100%}.l-tabpanel{width:100%;height:100%;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:opacity .45s;transition:opacity .45s;opacity:1;text-overflow:ellipsis}.l-tabpanel-inactive{opacity:0;height:0;padding:0!important;pointer-events:none}.l-subpanel{height:100%}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header{-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header .l-tabs-item{overflow:visible;min-width:160rpx}.l-tabs-scroll.l-tabs-horizontal .l-tabpanel-content{height:150px}.l-tabs-vertical .l-tabsscroll{width:160rpx}.l-tabs-vertical .l-tabs-header{height:100%;min-height:80rpx;-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-vertical .l-tabs-header .l-tabs-item{overflow:visible;min-height:80rpx}.l-tabs-item{position:relative}.l-tab-line{position:absolute;bottom:0;left:0;right:0;width:0;background:#000}.l-tabs-horizontal .l-tab-line{height:4rpx;margin:0 auto}.l-tabs-horizontal .l-tabs-active .l-tab-line{width:100%;transition-delay:.1s}.l-placement-top .l-tab-line{bottom:0}.l-placement-top .l-tabs-header-line{border-bottom:1px solid #f3f3f3}.l-tabs-vertical .l-tabs-active .l-tab-line{width:6rpx!important;height:40rpx!important;border-radius:0 6rpx 6rpx 0;top:0;left:0;margin:auto 0;transition-delay:.1s}.l-sub-placement-left .l-tab-line{left:0;right:auto}.l-sub-placement-left .l-tabs-header-line{border-right:1px solid #f3f3f3}.l-tab-image{width:100rpx;height:100rpx}.l-tab-image-placement-top{flex-direction:column}.l-tab-image-placement-left{flex-direction:row}.l-tabs-main{flex:1}.l-combined-tabs-main{display:flex}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/common/async-validator/index.js b/node_modules/lin-ui/dist/common/async-validator/index.js
new file mode 100644
index 0000000..dac8802
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/index.js
@@ -0,0 +1,258 @@
+import { format, complementError, asyncMap, warning, deepMerge } from './util.js';
+import validators from './validator/index.js';
+import { messages as defaultMessages, newMessages } from './messages.js';
+
+/**
+ *  Encapsulates a validation schema.
+ *
+ *  @param descriptor An object declaring validation rules
+ *  for this schema.
+ */
+function Schema(descriptor) {
+  this.rules = null;
+  this._messages = defaultMessages;
+  this.define(descriptor);
+}
+
+Schema.prototype = {
+  messages(messages) {
+    if (messages) {
+      this._messages = deepMerge(newMessages(), messages);
+    }
+    return this._messages;
+  },
+  define(rules) {
+    if (!rules) {
+      throw new Error(
+        'Cannot configure a schema with no rules');
+    }
+    if (typeof rules !== 'object' || Array.isArray(rules)) {
+      throw new Error('Rules must be an object');
+    }
+    this.rules = {};
+    let z;
+    let item;
+    for (z in rules) {
+      if (rules.hasOwnProperty(z)) {
+        item = rules[z];
+        this.rules[z] = Array.isArray(item) ? item : [item];
+      }
+    }
+  },
+  validate(source_, o = {}, oc) {
+    let source = source_;
+    let options = o;
+    let callback = oc;
+    if (typeof options === 'function') {
+      callback = options;
+      options = {};
+    }
+    if (!this.rules || Object.keys(this.rules).length === 0) {
+      if (callback) {
+        callback();
+      }
+      return;
+    }
+    function complete(results) {
+      let i;
+      let field;
+      let errors = [];
+      let fields = {};
+
+      function add(e) {
+        if (Array.isArray(e)) {
+          errors = errors.concat.apply(errors, e);
+        } else {
+          errors.push(e);
+        }
+      }
+
+      for (i = 0; i < results.length; i++) {
+        add(results[i]);
+      }
+      if (!errors.length) {
+        errors = null;
+        fields = null;
+      } else {
+        for (i = 0; i < errors.length; i++) {
+          field = errors[i].field;
+          fields[field] = fields[field] || [];
+          fields[field].push(errors[i]);
+        }
+      }
+      callback(errors, fields);
+    }
+
+    if (options.messages) {
+      let messages = this.messages();
+      if (messages === defaultMessages) {
+        messages = newMessages();
+      }
+      deepMerge(messages, options.messages);
+      options.messages = messages;
+    } else {
+      options.messages = this.messages();
+    }
+    let arr;
+    let value;
+    const series = {};
+    const keys = options.keys || Object.keys(this.rules);
+    keys.forEach((z) => {
+      arr = this.rules[z];
+      value = source[z];
+      arr.forEach((r) => {
+        let rule = r;
+        if (typeof (rule.transform) === 'function') {
+          if (source === source_) {
+            source = { ...source };
+          }
+          value = source[z] = rule.transform(value);
+        }
+        if (typeof (rule) === 'function') {
+          rule = {
+            validator: rule,
+          };
+        } else {
+          rule = { ...rule };
+        }
+        rule.validator = this.getValidationMethod(rule);
+        rule.field = z;
+        rule.fullField = rule.fullField || z;
+        rule.type = this.getType(rule);
+        if (!rule.validator) {
+          return;
+        }
+        series[z] = series[z] || [];
+        series[z].push({
+          rule,
+          value,
+          source,
+          field: z,
+        });
+      });
+    });
+    const errorFields = {};
+    asyncMap(series, options, (data, doIt) => {
+      const rule = data.rule;
+      let deep = (rule.type === 'object' || rule.type === 'array') &&
+        (typeof (rule.fields) === 'object' || typeof (rule.defaultField) === 'object');
+      deep = deep && (rule.required || (!rule.required && data.value));
+      rule.field = data.field;
+      function addFullfield(key, schema) {
+        return {
+          ...schema,
+          fullField: `${rule.fullField}.${key}`,
+        };
+      }
+
+      function cb(e = []) {
+        let errors = e;
+        if (!Array.isArray(errors)) {
+          errors = [errors];
+        }
+        if (errors.length) {
+          warning('async-validator:', errors);
+        }
+        if (errors.length && rule.message) {
+          errors = [].concat(rule.message);
+        }
+
+        errors = errors.map(complementError(rule));
+
+        if (options.first && errors.length) {
+          errorFields[rule.field] = 1;
+          return doIt(errors);
+        }
+        if (!deep) {
+          doIt(errors);
+        } else {
+          // if rule is required but the target object
+          // does not exist fail at the rule level and don't
+          // go deeper
+          if (rule.required && !data.value) {
+            if (rule.message) {
+              errors = [].concat(rule.message).map(complementError(rule));
+            } else if (options.error) {
+              errors = [options.error(rule, format(options.messages.required, rule.field))];
+            } else {
+              errors = [];
+            }
+            return doIt(errors);
+          }
+
+          let fieldsSchema = {};
+          if (rule.defaultField) {
+            for (const k in data.value) {
+              if (data.value.hasOwnProperty(k)) {
+                fieldsSchema[k] = rule.defaultField;
+              }
+            }
+          }
+          fieldsSchema = {
+            ...fieldsSchema,
+            ...data.rule.fields,
+          };
+          for (const f in fieldsSchema) {
+            if (fieldsSchema.hasOwnProperty(f)) {
+              const fieldSchema = Array.isArray(fieldsSchema[f]) ?
+                fieldsSchema[f] : [fieldsSchema[f]];
+              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
+            }
+          }
+          const schema = new Schema(fieldsSchema);
+          schema.messages(options.messages);
+          if (data.rule.options) {
+            data.rule.options.messages = options.messages;
+            data.rule.options.error = options.error;
+          }
+          schema.validate(data.value, data.rule.options || options, (errs) => {
+            doIt(errs && errs.length ? errors.concat(errs) : errs);
+          });
+        }
+      }
+
+      const res = rule.validator(
+        rule, data.value, cb, data.source, options);
+      if (res && res.then) {
+        res.then(() => cb(), e => cb(e));
+      }
+    }, (results) => {
+      complete(results);
+    });
+  },
+  getType(rule) {
+    if (rule.type === undefined && (rule.pattern instanceof RegExp)) {
+      rule.type = 'pattern';
+    }
+    if (typeof (rule.validator) !== 'function' &&
+      (rule.type && !validators.hasOwnProperty(rule.type))) {
+      throw new Error(format('Unknown rule type %s', rule.type));
+    }
+    return rule.type || 'string';
+  },
+  getValidationMethod(rule) {
+    if (typeof rule.validator === 'function') {
+      return rule.validator;
+    }
+    const keys = Object.keys(rule);
+    const messageIndex = keys.indexOf('message');
+    if (messageIndex !== -1) {
+      keys.splice(messageIndex, 1);
+    }
+    if (keys.length === 1 && keys[0] === 'required') {
+      return validators.required;
+    }
+    return validators[this.getType(rule)] || false;
+  },
+};
+
+Schema.register = function register(type, validator) {
+  if (typeof validator !== 'function') {
+    throw new Error('Cannot register a validator by type, validator is not a function');
+  }
+  validators[type] = validator;
+};
+
+Schema.messages = defaultMessages;
+
+export default Schema;
diff --git a/node_modules/lin-ui/dist/common/async-validator/messages.js b/node_modules/lin-ui/dist/common/async-validator/messages.js
new file mode 100644
index 0000000..5117ce4
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/messages.js
@@ -0,0 +1,56 @@
+export function newMessages() {
+  return {
+    default: 'Validation error on field %s',
+    required: '%s is required',
+    enum: '%s must be one of %s',
+    whitespace: '%s cannot be empty',
+    date: {
+      format: '%s date %s is invalid for format %s',
+      parse: '%s date could not be parsed, %s is invalid ',
+      invalid: '%s date %s is invalid',
+    },
+    types: {
+      string: '%s is not a %s',
+      method: '%s is not a %s (function)',
+      array: '%s is not an %s',
+      object: '%s is not an %s',
+      number: '%s is not a %s',
+      date: '%s is not a %s',
+      boolean: '%s is not a %s',
+      integer: '%s is not an %s',
+      float: '%s is not a %s',
+      regexp: '%s is not a valid %s',
+      email: '%s is not a valid %s',
+      url: '%s is not a valid %s',
+      hex: '%s is not a valid %s',
+    },
+    string: {
+      len: '%s must be exactly %s characters',
+      min: '%s must be at least %s characters',
+      max: '%s cannot be longer than %s characters',
+      range: '%s must be between %s and %s characters',
+    },
+    number: {
+      len: '%s must equal %s',
+      min: '%s cannot be less than %s',
+      max: '%s cannot be greater than %s',
+      range: '%s must be between %s and %s',
+    },
+    array: {
+      len: '%s must be exactly %s in length',
+      min: '%s cannot be less than %s in length',
+      max: '%s cannot be greater than %s in length',
+      range: '%s must be between %s and %s in length',
+    },
+    pattern: {
+      mismatch: '%s value %s does not match pattern %s',
+    },
+    clone() {
+      const cloned = JSON.parse(JSON.stringify(this));
+      cloned.clone = this.clone;
+      return cloned;
+    },
+  };
+}
+
+export const messages = newMessages();
diff --git a/node_modules/lin-ui/dist/common/async-validator/rule/enum.js b/node_modules/lin-ui/dist/common/async-validator/rule/enum.js
new file mode 100644
index 0000000..00f0e1c
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/rule/enum.js
@@ -0,0 +1,22 @@
+import * as util from '../util';
+const ENUM = 'enum';
+
+/**
+ *  Rule for validating a value exists in an enumerable list.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function enumerable(rule, value, source, errors, options) {
+  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
+  if (rule[ENUM].indexOf(value) === -1) {
+    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));
+  }
+}
+
+export default enumerable;
diff --git a/node_modules/lin-ui/dist/common/async-validator/rule/index.js b/node_modules/lin-ui/dist/common/async-validator/rule/index.js
new file mode 100644
index 0000000..05572e8
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/rule/index.js
@@ -0,0 +1,15 @@
+import required from './required.js';
+import whitespace from './whitespace.js';
+import type from './type.js';
+import range from './range.js';
+import enumRule from './enum.js';
+import pattern from './pattern.js';
+
+export default {
+  required,
+  whitespace,
+  type,
+  range,
+  enum: enumRule,
+  pattern,
+};
diff --git a/node_modules/lin-ui/dist/common/async-validator/rule/pattern.js b/node_modules/lin-ui/dist/common/async-validator/rule/pattern.js
new file mode 100644
index 0000000..3dbe780
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/rule/pattern.js
@@ -0,0 +1,36 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating a regular expression pattern.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function pattern(rule, value, source, errors, options) {
+  if (rule.pattern) {
+    if (rule.pattern instanceof RegExp) {
+      // if a RegExp instance is passed, reset `lastIndex` in case its `global`
+      // flag is accidentally set to `true`, which in a validation scenario
+      // is not necessary and the result might be misleading
+      rule.pattern.lastIndex = 0;
+      if (!rule.pattern.test(value)) {
+        errors.push(util.format(options.messages.pattern.mismatch,
+          rule.fullField, value, rule.pattern));
+      }
+    } else if (typeof rule.pattern === 'string') {
+      
+      const _pattern = new RegExp(rule.pattern.replace(/^\/|\/$/g,''));
+      if (!_pattern.test(value)) {
+        errors.push(util.format(options.messages.pattern.mismatch,
+          rule.fullField, value, rule.pattern));
+      }
+    }
+  }
+}
+
+export default pattern;
diff --git a/node_modules/lin-ui/dist/common/async-validator/rule/range.js b/node_modules/lin-ui/dist/common/async-validator/rule/range.js
new file mode 100644
index 0000000..2b50a40
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/rule/range.js
@@ -0,0 +1,59 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating minimum and maximum allowed values.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function range(rule, value, source, errors, options) {
+  const len = typeof rule.len === 'number';
+  const min = typeof rule.min === 'number';
+  const max = typeof rule.max === 'number';
+  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）
+  const spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
+  let val = value;
+  let key = null;
+  const num = typeof (value) === 'number';
+  const str = typeof (value) === 'string';
+  const arr = Array.isArray(value);
+  if (num) {
+    key = 'number';
+  } else if (str) {
+    key = 'string';
+  } else if (arr) {
+    key = 'array';
+  }
+  // if the value is not of a supported type for range validation
+  // the validation rule rule should use the
+  // type property to also test for a particular type
+  if (!key) {
+    return false;
+  }
+  if (arr) {
+    val = value.length;
+  }
+  if (str) {
+    // 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
+    val = value.replace(spRegexp, '_').length;
+  }
+  if (len) {
+    if (val !== rule.len) {
+      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));
+    }
+  } else if (min && !max && val < rule.min) {
+    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));
+  } else if (max && !min && val > rule.max) {
+    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));
+  } else if (min && max && (val < rule.min || val > rule.max)) {
+    errors.push(util.format(options.messages[key].range,
+      rule.fullField, rule.min, rule.max));
+  }
+}
+
+export default range;
diff --git a/node_modules/lin-ui/dist/common/async-validator/rule/required.js b/node_modules/lin-ui/dist/common/async-validator/rule/required.js
new file mode 100644
index 0000000..4d9b409
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/rule/required.js
@@ -0,0 +1,21 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating required fields.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function required(rule, value, source, errors, options, type) {
+  if (rule.required &&
+    (!source.hasOwnProperty(rule.field) || util.isEmptyValue(value, type || rule.type))) {
+    errors.push(util.format(options.messages.required, rule.fullField));
+  }
+}
+
+export default required;
diff --git a/node_modules/lin-ui/dist/common/async-validator/rule/type.js b/node_modules/lin-ui/dist/common/async-validator/rule/type.js
new file mode 100644
index 0000000..d6a50d5
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/rule/type.js
@@ -0,0 +1,91 @@
+import * as util from '../util';
+import required from './required';
+
+/* eslint max-len:0 */
+
+const pattern = {
+  // http://emailregex.com/
+  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
+  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$', 'i'),
+  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,
+};
+
+const types = {
+  integer(value) {
+    return types.number(value) && parseInt(value, 10) === value;
+  },
+  float(value) {
+    return types.number(value) && !types.integer(value);
+  },
+  array(value) {
+    return Array.isArray(value);
+  },
+  regexp(value) {
+    if (value instanceof RegExp) {
+      return true;
+    }
+    try {
+      return !!new RegExp(value);
+    } catch (e) {
+      return false;
+    }
+  },
+  date(value) {
+    return typeof value.getTime === 'function' &&
+      typeof value.getMonth === 'function' &&
+      typeof value.getYear === 'function';
+  },
+  number(value) {
+    if (isNaN(value) || value === '') {
+      return false;
+    }
+    return true;
+  },
+  object(value) {
+    return typeof (value) === 'object' && !types.array(value);
+  },
+  method(value) {
+    return typeof (value) === 'function';
+  },
+  email(value) {
+    return typeof (value) === 'string' && !!value.match(pattern.email) && value.length < 255;
+  },
+  url(value) {
+    return typeof (value) === 'string' && !!value.match(pattern.url);
+  },
+  hex(value) {
+    return typeof (value) === 'string' && !!value.match(pattern.hex);
+  },
+};
+
+/**
+ *  Rule for validating the type of a value.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function type(rule, value, source, errors, options) {
+  if (rule.required && value === undefined) {
+    required(rule, value, source, errors, options);
+    return;
+  }
+  const custom = ['integer', 'float', 'array', 'regexp', 'object',
+    'method', 'email', 'number', 'date', 'url', 'hex'
+  ];
+  const ruleType = rule.type;
+  if (custom.indexOf(ruleType) > -1) {
+    if (!types[ruleType](value)) {
+      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
+    }
+    // straight typeof check
+  } else if (ruleType && typeof (value) !== rule.type) {
+    errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
+  }
+}
+
+export default type;
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/common/async-validator/rule/whitespace.js b/node_modules/lin-ui/dist/common/async-validator/rule/whitespace.js
new file mode 100644
index 0000000..0433723
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/rule/whitespace.js
@@ -0,0 +1,20 @@
+import * as util from '../util';
+
+/**
+ *  Rule for validating whitespace.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param source The source object being validated.
+ *  @param errors An array of errors that this rule may add
+ *  validation errors to.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function whitespace(rule, value, source, errors, options) {
+  if (/^\s+$/.test(value) || value === '') {
+    errors.push(util.format(options.messages.whitespace, rule.fullField));
+  }
+}
+
+export default whitespace;
diff --git a/node_modules/lin-ui/dist/common/async-validator/util.js b/node_modules/lin-ui/dist/common/async-validator/util.js
new file mode 100644
index 0000000..6e61cc0
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/util.js
@@ -0,0 +1,176 @@
+const formatRegExp = /%[sdj%]/g;
+
+export let warning = () => {
+};
+
+export function format(...args) {
+  let i = 1;
+  const f = args[0];
+  const len = args.length;
+  if (typeof f === 'function') {
+    return f.apply(null, args.slice(1));
+  }
+  if (typeof f === 'string') {
+    let str = String(f).replace(formatRegExp, (x) => {
+      if (x === '%%') {
+        return '%';
+      }
+      if (i >= len) {
+        return x;
+      }
+      switch (x) {
+      case '%s':
+        return String(args[i++]);
+      case '%d':
+        return Number(args[i++]);
+      case '%j':
+        try {
+          return JSON.stringify(args[i++]);
+        } catch (_) {
+          return '[Circular]';
+        }
+      default:
+        return x;
+      }
+    });
+    for (let arg = args[i]; i < len; arg = args[++i]) {
+      str += ` ${arg}`;
+    }
+    return str;
+  }
+  return f;
+}
+
+function isNativeStringType(type) {
+  return type === 'string' ||
+    type === 'url' ||
+    type === 'hex' ||
+    type === 'email' ||
+    type === 'pattern';
+}
+
+export function isEmptyValue(value, type) {
+  if (value === undefined || value === null) {
+    return true;
+  }
+  if (type === 'array' && Array.isArray(value) && !value.length) {
+    return true;
+  }
+  if (isNativeStringType(type) && typeof value === 'string' && !value) {
+    return true;
+  }
+  return false;
+}
+
+export function isEmptyObject(obj) {
+  return Object.keys(obj).length === 0;
+}
+
+function asyncParallelArray(arr, func, callback) {
+  const results = [];
+  let total = 0;
+  const arrLength = arr.length;
+
+  function count(errors) {
+    results.push.apply(results, errors);
+    total++;
+    if (total === arrLength) {
+      callback(results);
+    }
+  }
+
+  arr.forEach((a) => {
+    func(a, count);
+  });
+}
+
+function asyncSerialArray(arr, func, callback) {
+  let index = 0;
+  const arrLength = arr.length;
+
+  function next(errors) {
+    if (errors && errors.length) {
+      callback(errors);
+      return;
+    }
+    const original = index;
+    index = index + 1;
+    if (original < arrLength) {
+      func(arr[original], next);
+    } else {
+      callback([]);
+    }
+  }
+
+  next([]);
+}
+
+function flattenObjArr(objArr) {
+  const ret = [];
+  Object.keys(objArr).forEach((k) => {
+    ret.push.apply(ret, objArr[k]);
+  });
+  return ret;
+}
+
+export function asyncMap(objArr, option, func, callback) {
+  if (option.first) {
+    const flattenArr = flattenObjArr(objArr);
+    return asyncSerialArray(flattenArr, func, callback);
+  }
+  let firstFields = option.firstFields || [];
+  if (firstFields === true) {
+    firstFields = Object.keys(objArr);
+  }
+  const objArrKeys = Object.keys(objArr);
+  const objArrLength = objArrKeys.length;
+  let total = 0;
+  const results = [];
+  const next = (errors) => {
+    results.push.apply(results, errors);
+    total++;
+    if (total === objArrLength) {
+      callback(results);
+    }
+  };
+  objArrKeys.forEach((key) => {
+    const arr = objArr[key];
+    if (firstFields.indexOf(key) !== -1) {
+      asyncSerialArray(arr, func, next);
+    } else {
+      asyncParallelArray(arr, func, next);
+    }
+  });
+}
+
+export function complementError(rule) {
+  return (oe) => {
+    if (oe && oe.message) {
+      oe.field = oe.field || rule.fullField;
+      return oe;
+    }
+    return {
+      message: oe,
+      field: oe.field || rule.fullField,
+    };
+  };
+}
+
+export function deepMerge(target, source) {
+  if (source) {
+    for (const s in source) {
+      if (source.hasOwnProperty(s)) {
+        const value = source[s];
+        if (typeof value === 'object' && typeof target[s] === 'object') {
+          target[s] = {
+            ...target[s],
+            ...value,
+          };
+        } else {
+          target[s] = value;
+        }
+      }
+    }
+  }
+  return target;
+}
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/array.js b/node_modules/lin-ui/dist/common/async-validator/validator/array.js
new file mode 100644
index 0000000..5755124
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/array.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+/**
+ *  Validates an array.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function array(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, 'array') && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options, 'array');
+    if (!isEmptyValue(value, 'array')) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default array;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/boolean.js b/node_modules/lin-ui/dist/common/async-validator/validator/boolean.js
new file mode 100644
index 0000000..74daa78
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/boolean.js
@@ -0,0 +1,29 @@
+import { isEmptyValue } from '../util';
+import rules from '../rule/index.js';
+
+/**
+ *  Validates a boolean.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function boolean(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default boolean;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/date.js b/node_modules/lin-ui/dist/common/async-validator/validator/date.js
new file mode 100644
index 0000000..9ac063a
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/date.js
@@ -0,0 +1,32 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+function date(rule, value, callback, source, options) {
+  // console.log('integer rule called %j', rule);
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  // console.log('validate on %s value', value);
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (!isEmptyValue(value)) {
+      let dateObject;
+
+      if (typeof value === 'number') {
+        dateObject = new Date(value);
+      } else {
+        dateObject = value;
+      }
+
+      rules.type(rule, dateObject, source, errors, options);
+      if (dateObject) {
+        rules.range(rule, dateObject.getTime(), source, errors, options);
+      }
+    }
+  }
+  callback(errors);
+}
+
+export default date;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/enum.js b/node_modules/lin-ui/dist/common/async-validator/validator/enum.js
new file mode 100644
index 0000000..20e1a2c
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/enum.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+const ENUM = 'enum';
+
+/**
+ *  Validates an enumerable list.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function enumerable(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value) {
+      rules[ENUM](rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default enumerable;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/float.js b/node_modules/lin-ui/dist/common/async-validator/validator/float.js
new file mode 100644
index 0000000..13b4993
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/float.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a number is a floating point number.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function floatFn(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default floatFn;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/index.js b/node_modules/lin-ui/dist/common/async-validator/validator/index.js
new file mode 100644
index 0000000..148bca5
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/index.js
@@ -0,0 +1,33 @@
+import string from './string';
+import method from './method';
+import number from './number';
+import boolean from './boolean';
+import regexp from './regexp';
+import integer from './integer';
+import float from './float';
+import array from './array';
+import object from './object';
+import enumValidator from './enum';
+import pattern from './pattern';
+import date from './date';
+import required from './required';
+import type from './type';
+
+export default {
+  string,
+  method,
+  number,
+  boolean,
+  regexp,
+  integer,
+  float,
+  array,
+  object,
+  enum: enumValidator,
+  pattern,
+  date,
+  url: type,
+  hex: type,
+  email: type,
+  required,
+};
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/integer.js b/node_modules/lin-ui/dist/common/async-validator/validator/integer.js
new file mode 100644
index 0000000..5444e30
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/integer.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a number is an integer.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function integer(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default integer;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/method.js b/node_modules/lin-ui/dist/common/async-validator/validator/method.js
new file mode 100644
index 0000000..9ef0cbe
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/method.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a function.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function method(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default method;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/number.js b/node_modules/lin-ui/dist/common/async-validator/validator/number.js
new file mode 100644
index 0000000..c7b2a19
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/number.js
@@ -0,0 +1,30 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a number.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function number(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default number;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/object.js b/node_modules/lin-ui/dist/common/async-validator/validator/object.js
new file mode 100644
index 0000000..93afef5
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/object.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates an object.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function object(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (value !== undefined) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default object;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/pattern.js b/node_modules/lin-ui/dist/common/async-validator/validator/pattern.js
new file mode 100644
index 0000000..f1b980c
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/pattern.js
@@ -0,0 +1,32 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates a regular expression pattern.
+ *
+ *  Performs validation when a rule only contains
+ *  a pattern property but is not declared as a string type.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function pattern(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, 'string') && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (!isEmptyValue(value, 'string')) {
+      rules.pattern(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default pattern;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/regexp.js b/node_modules/lin-ui/dist/common/async-validator/validator/regexp.js
new file mode 100644
index 0000000..c68883b
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/regexp.js
@@ -0,0 +1,29 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Validates the regular expression type.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function regexp(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options);
+    if (!isEmptyValue(value)) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default regexp;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/required.js b/node_modules/lin-ui/dist/common/async-validator/validator/required.js
new file mode 100644
index 0000000..00e6d01
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/required.js
@@ -0,0 +1,10 @@
+import rules from '../rule/index.js';
+
+function required(rule, value, callback, source, options) {
+  const errors = [];
+  const type = Array.isArray(value) ? 'array' : typeof value;
+  rules.required(rule, value, source, errors, options, type);
+  callback(errors);
+}
+
+export default required;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/string.js b/node_modules/lin-ui/dist/common/async-validator/validator/string.js
new file mode 100644
index 0000000..411fee7
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/string.js
@@ -0,0 +1,34 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+/**
+ *  Performs validation for string types.
+ *
+ *  @param rule The validation rule.
+ *  @param value The value of the field on the source object.
+ *  @param callback The callback function.
+ *  @param source The source object being validated.
+ *  @param options The validation options.
+ *  @param options.messages The validation messages.
+ */
+function string(rule, value, callback, source, options) {
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, 'string') && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options, 'string');
+    if (!isEmptyValue(value, 'string')) {
+      rules.type(rule, value, source, errors, options);
+      rules.range(rule, value, source, errors, options);
+      rules.pattern(rule, value, source, errors, options);
+      if (rule.whitespace === true) {
+        rules.whitespace(rule, value, source, errors, options);
+      }
+    }
+  }
+  callback(errors);
+}
+
+export default string;
diff --git a/node_modules/lin-ui/dist/common/async-validator/validator/type.js b/node_modules/lin-ui/dist/common/async-validator/validator/type.js
new file mode 100644
index 0000000..79a05fa
--- /dev/null
+++ b/node_modules/lin-ui/dist/common/async-validator/validator/type.js
@@ -0,0 +1,20 @@
+import rules from '../rule/index.js';
+import { isEmptyValue } from '../util';
+
+function type(rule, value, callback, source, options) {
+  const ruleType = rule.type;
+  const errors = [];
+  const validate = rule.required || (!rule.required && source.hasOwnProperty(rule.field));
+  if (validate) {
+    if (isEmptyValue(value, ruleType) && !rule.required) {
+      return callback();
+    }
+    rules.required(rule, value, source, errors, options, ruleType);
+    if (!isEmptyValue(value, ruleType)) {
+      rules.type(rule, value, source, errors, options);
+    }
+  }
+  callback(errors);
+}
+
+export default type;
diff --git a/node_modules/lin-ui/dist/count-selector/index.js b/node_modules/lin-ui/dist/count-selector/index.js
new file mode 100644
index 0000000..c037e05
--- /dev/null
+++ b/node_modules/lin-ui/dist/count-selector/index.js
@@ -0,0 +1,158 @@
+Component({
+  externalClasses: [
+    'l-class',
+    'l-symbol-class',
+    'l-count-class',
+    'l-disabled-class'
+  ],
+  properties: {
+    count: {
+      type: Number,
+      value: 1
+    },
+    max: {
+      type: Number,
+      value: 9999
+    },
+    min: {
+      type: Number,
+      value: 1
+    },
+    step: {
+      type: Number,
+      value: 1
+    },
+    disabled: Boolean,
+    iconSize: String,
+    iconColor: String
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    focus: false,
+    result: 1
+  },
+
+  observers: {
+    'count,min,max': function () {
+      this.valueRange(this.data.count, 'parameter');
+    }
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    doNothing(e) {
+      const { type } = e.currentTarget.dataset;
+      this.triggerEvent('linout', { type, way: 'icon' }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    onCount() {
+      this.setData({
+        focus: true
+      });
+    },
+
+    onBlur(e) {
+      this.setData({
+        focus: false
+      });
+      let {
+        value
+      } = e.detail;
+      setTimeout(() => {
+        this.blurCount(Number(value), () => {
+          this.data.count = this.data.result;
+          this.triggerEvent('lintap', {
+            count: this.data.result,
+            type: 'blur'
+          }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      }, 50);
+    },
+
+    blurCount(value, callback) {
+      if (value) {
+        this.valueRange(value);
+      } else {
+        this.setData({
+          result: this.properties.count
+        });
+      }
+      callback && callback();
+    },
+
+    valueRange(value, way = 'input') {
+      if (value > this.properties.max) {
+        this.setData({
+          result: this.properties.max
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_max', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else if (value < this.properties.min) {
+        this.setData({
+          result: this.properties.min
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_min', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else {
+        this.setData({
+          result: value
+        });
+      }
+    },
+
+    reduceTap() {
+      let distance = this.data.count - this.properties.step;
+      if (distance <= this.properties.min) {
+        this.data.count = this.properties.min;
+      } else {
+        this.data.count -= this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'reduce'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    addTap() {
+      let distance = this.data.count + this.properties.step;
+      if (distance >= this.properties.max) {
+        this.data.count = this.properties.max;
+      } else {
+        this.data.count += this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'add'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/count-selector/index.json b/node_modules/lin-ui/dist/count-selector/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/node_modules/lin-ui/dist/count-selector/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/count-selector/index.wxml b/node_modules/lin-ui/dist/count-selector/index.wxml
new file mode 100644
index 0000000..7a399ab
--- /dev/null
+++ b/node_modules/lin-ui/dist/count-selector/index.wxml
@@ -0,0 +1,22 @@
+<view class="l-class container-count">
+  <view class="symbol {{result<=min|| disabled?'disabled  l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result<=min|| disabled?'doNothing':'reduceTap'}}"
+        data-type="overflow_min"
+        hover-class="count-hover">
+    <view class="l-icon l-icon-reduce" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+  <input  wx:if="{{focus}}"
+          class="l-count-class count" 
+          disabled="{{disabled}}" 
+          type="number"
+          focus="{{focus}}" 
+          value="{{result}}"
+          bindblur="onBlur"></input>
+  <view wx:else class="l-count-class count" bindtap="onCount">{{result}}</view>        
+  <view class="symbol {{result>=max|| disabled?'disabled l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result>=max|| disabled?'doNothing':'addTap'}}"
+        data-type="overflow_max"
+        hover-class="count-hover">
+       <view class="l-icon l-icon-add" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/count-selector/index.wxss b/node_modules/lin-ui/dist/count-selector/index.wxss
new file mode 100644
index 0000000..929666b
--- /dev/null
+++ b/node_modules/lin-ui/dist/count-selector/index.wxss
@@ -0,0 +1 @@
+.container-count{display:flex;flex-direction:row;width:170rpx;height:56rpx}.symbol{height:100%;width:56rpx;font-size:28rpx;color:#596c8e;display:flex;align-items:center;justify-content:center}.disabled{background-color:#f3f3f3;color:#c4c9d2}.abled{background-color:#ecf1f8;color:#596c8e}.count{height:100%;flex:1;min-height:56rpx;line-height:56rpx;font-size:24rpx;color:#596c8e;background:#f6f7f9;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALEAAsAAAAABqwAAAJ3AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBFIEWATYCJAMMCwgABCAFhG0HNxvdBcgekiSBqhRCJKIogADMEYRr5GySu0dQoBAloETFRVKmqpWoK1wVG1th2Ij732n7N5fsqTh2xyneKfa2N3/anZKGvYXFohGGrUFIEA6JogD/fZ7L6U2gA7nGtyynNW3s8fyoF2AcUEBjbYqsRALxFtlF3ImLOE6g3ZheoYOxmRVIKtC4QLww9QYkCxFFMfKtQt2wtIjXKq3pZfrEq+j78d9qJEmqDE09fTTahoFf6deHfNxwgxOiBHl1hYx5oBC3GjMXIsLgItpN0e7yWhHSXPEmkcq31Dv94yWihmo7wbQcS/yiMoJf9yskkEFdzE0Diwo7eF2IkexeNr35cvtSjmQ/fjt5zeTy++93z1I4x8LHT3u9VVdH6SHr0r8+OjOTtCopyONe0uFsIlZDiaMZyTdAmzFfZzrm0+EOQPOcP/IeANGP4rNA8KN0+V8rbPwlMwX83P7UK0Wa5wJwS+sZvMEfUwMbiq9F1lxcFVWFvmwE4ErICtOvARTo9zPeMgROEVoL2hG+FqMeslbjZGHnUemwjlqrbbSbM766wwAuIkobZl1ICL0ekXT7jqzXF1nYb1SG/aLWGxG0O4uBLTtMhpne59gQ2CbNHWK2mEeJXaTj+iXUN5wGz2sjfg15YMaJJqvl/Dh6yOeYEWzqFSEooZy5ZEw6DR2HEZ8zC1tCNoTwq4pCm94kt5gLafs41CCgNqJpB2FqYTyUtxbSlc8vQboNjgbeIejJr0FcwOyc0MhUADlu8kCCe3klsElXIQgUQXGMixiTBiGHgyH85kEW1CLIjBEpX5WCm1GoSV7f4n7fNmiH9syRIkeR77bbiWdmwzMaDAAA') format('woff2')}.l-icon-add:before{content:"\e602"}.l-icon-reduce:before{content:"\e69c"}.l-icon{font-family:iconfont;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.l-icon::before{display:inline-flex}.count-hover{opacity:.8}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/countdown/index.js b/node_modules/lin-ui/dist/countdown/index.js
new file mode 100644
index 0000000..5bf852d
--- /dev/null
+++ b/node_modules/lin-ui/dist/countdown/index.js
@@ -0,0 +1,18 @@
+import countDownBehavios from '../behaviors/countdown';
+Component({
+  externalClasses: [
+    'l-class',
+    'l-class-time',
+    'l-time-class'
+  ],
+  behaviors:[countDownBehavios],
+  properties: {
+    doneText:{
+      type:String,
+      value:'已结束'
+    }
+  },
+  methods: {
+        
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/countdown/index.json b/node_modules/lin-ui/dist/countdown/index.json
new file mode 100644
index 0000000..a32a128
--- /dev/null
+++ b/node_modules/lin-ui/dist/countdown/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+       
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/countdown/index.wxml b/node_modules/lin-ui/dist/countdown/index.wxml
new file mode 100644
index 0000000..9e1db30
--- /dev/null
+++ b/node_modules/lin-ui/dist/countdown/index.wxml
@@ -0,0 +1,3 @@
+<view class="l-countdown l-class">
+    <view class="l-countdown-item" wx:for="{{date}}" wx:key="{{index}}"><text class="l-class-time l-time-class l-countdown-time">{{item.value}}</text>{{item.name}}</view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/countdown/index.wxss b/node_modules/lin-ui/dist/countdown/index.wxss
new file mode 100644
index 0000000..da50268
--- /dev/null
+++ b/node_modules/lin-ui/dist/countdown/index.wxss
@@ -0,0 +1 @@
+.l-countdown{font-size:28rpx;line-height:40px}.l-countdown-item{display:inline-block;color:inherit}.l-countdown-time{display:inline-flex;width:56rpx;height:56rpx;background:#45526b;border-radius:4rpx;color:#fff;align-items:center;justify-content:center;margin:0 16rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/counter/index.js b/node_modules/lin-ui/dist/counter/index.js
new file mode 100644
index 0000000..99bc9ab
--- /dev/null
+++ b/node_modules/lin-ui/dist/counter/index.js
@@ -0,0 +1,161 @@
+import hover from '../behaviors/hover';
+
+Component({
+  behaviors:[hover],
+  externalClasses: [
+    'l-class',
+    'l-symbol-class',
+    'l-count-class',
+    'l-disabled-class'
+  ],
+  properties: {
+    count: {
+      type: Number,
+      value: 1
+    },
+    max: {
+      type: Number,
+      value: 9999
+    },
+    min: {
+      type: Number,
+      value: 1
+    },
+    step: {
+      type: Number,
+      value: 1
+    },
+    disabled: Boolean,
+    iconSize: String,
+    iconColor: String
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    focus: false,
+    result: 1
+  },
+
+  observers: {
+    'count,min,max': function () {
+      this.valueRange(this.data.count, 'parameter');
+    }
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    doNothing(e) {
+      const { type } = e.currentTarget.dataset;
+      this.triggerEvent('linout', { type, way: 'icon' }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    onCount() {
+      this.setData({
+        focus: true
+      });
+    },
+
+    onBlur(e) {
+      this.setData({
+        focus: false
+      });
+      let {
+        value
+      } = e.detail;
+      setTimeout(() => {
+        this.blurCount(Number(value), () => {
+          this.data.count = this.data.result;
+          this.triggerEvent('lintap', {
+            count: this.data.result,
+            type: 'blur'
+          }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      }, 50);
+    },
+
+    blurCount(value, callback) {
+      if (value) {
+        this.valueRange(value);
+      } else {
+        this.setData({
+          result: this.properties.count
+        });
+      }
+      callback && callback();
+    },
+
+    valueRange(value, way = 'input') {
+      if (value > this.properties.max) {
+        this.setData({
+          result: this.properties.max
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_max', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else if (value < this.properties.min) {
+        this.setData({
+          result: this.properties.min
+        }, () => {
+          this.triggerEvent('linout', { type: 'overflow_min', way }, {
+            bubbles: true,
+            composed: true
+          });
+        });
+      } else {
+        this.setData({
+          result: value
+        });
+      }
+    },
+
+    reduceTap() {
+      let distance = this.data.count - this.properties.step;
+      if (distance <= this.properties.min) {
+        this.data.count = this.properties.min;
+      } else {
+        this.data.count -= this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'reduce'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+
+    addTap() {
+      let distance = this.data.count + this.properties.step;
+      if (distance >= this.properties.max) {
+        this.data.count = this.properties.max;
+      } else {
+        this.data.count += this.properties.step;
+      }
+      this.setData({
+        result: this.data.count
+      });
+      this.triggerEvent('lintap', {
+        count: this.data.result,
+        type: 'add'
+      }, {
+        bubbles: true,
+        composed: true
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/counter/index.json b/node_modules/lin-ui/dist/counter/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/node_modules/lin-ui/dist/counter/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/counter/index.wxml b/node_modules/lin-ui/dist/counter/index.wxml
new file mode 100644
index 0000000..964a441
--- /dev/null
+++ b/node_modules/lin-ui/dist/counter/index.wxml
@@ -0,0 +1,22 @@
+<view class="l-class container-count">
+  <view class="symbol {{result<=min|| disabled?'disabled  l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result<=min|| disabled?'doNothing':'reduceTap'}}"
+        data-type="overflow_min"
+        hover-class="{{isHover?'count-hover':''}}">
+    <view class="l-icon l-icon-reduce" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+  <input  wx:if="{{focus}}"
+          class="l-count-class count" 
+          disabled="{{disabled}}" 
+          type="number"
+          focus="{{focus}}" 
+          value="{{result}}"
+          bindblur="onBlur"></input>
+  <view wx:else class="l-count-class count" bindtap="onCount">{{result}}</view>        
+  <view class="symbol {{result>=max|| disabled?'disabled l-disabled-class':'abled l-symbol-class'}}" 
+        catchtap="{{result>=max|| disabled?'doNothing':'addTap'}}"
+        data-type="overflow_max"
+        hover-class="{{isHover?'count-hover':''}}">
+       <view class="l-icon l-icon-add" style="font-size:{{iconSize}};color:{{iconColor}}"></view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/counter/index.wxss b/node_modules/lin-ui/dist/counter/index.wxss
new file mode 100644
index 0000000..929666b
--- /dev/null
+++ b/node_modules/lin-ui/dist/counter/index.wxss
@@ -0,0 +1 @@
+.container-count{display:flex;flex-direction:row;width:170rpx;height:56rpx}.symbol{height:100%;width:56rpx;font-size:28rpx;color:#596c8e;display:flex;align-items:center;justify-content:center}.disabled{background-color:#f3f3f3;color:#c4c9d2}.abled{background-color:#ecf1f8;color:#596c8e}.count{height:100%;flex:1;min-height:56rpx;line-height:56rpx;font-size:24rpx;color:#596c8e;background:#f6f7f9;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALEAAsAAAAABqwAAAJ3AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBFIEWATYCJAMMCwgABCAFhG0HNxvdBcgekiSBqhRCJKIogADMEYRr5GySu0dQoBAloETFRVKmqpWoK1wVG1th2Ij732n7N5fsqTh2xyneKfa2N3/anZKGvYXFohGGrUFIEA6JogD/fZ7L6U2gA7nGtyynNW3s8fyoF2AcUEBjbYqsRALxFtlF3ImLOE6g3ZheoYOxmRVIKtC4QLww9QYkCxFFMfKtQt2wtIjXKq3pZfrEq+j78d9qJEmqDE09fTTahoFf6deHfNxwgxOiBHl1hYx5oBC3GjMXIsLgItpN0e7yWhHSXPEmkcq31Dv94yWihmo7wbQcS/yiMoJf9yskkEFdzE0Diwo7eF2IkexeNr35cvtSjmQ/fjt5zeTy++93z1I4x8LHT3u9VVdH6SHr0r8+OjOTtCopyONe0uFsIlZDiaMZyTdAmzFfZzrm0+EOQPOcP/IeANGP4rNA8KN0+V8rbPwlMwX83P7UK0Wa5wJwS+sZvMEfUwMbiq9F1lxcFVWFvmwE4ErICtOvARTo9zPeMgROEVoL2hG+FqMeslbjZGHnUemwjlqrbbSbM766wwAuIkobZl1ICL0ekXT7jqzXF1nYb1SG/aLWGxG0O4uBLTtMhpne59gQ2CbNHWK2mEeJXaTj+iXUN5wGz2sjfg15YMaJJqvl/Dh6yOeYEWzqFSEooZy5ZEw6DR2HEZ8zC1tCNoTwq4pCm94kt5gLafs41CCgNqJpB2FqYTyUtxbSlc8vQboNjgbeIejJr0FcwOyc0MhUADlu8kCCe3klsElXIQgUQXGMixiTBiGHgyH85kEW1CLIjBEpX5WCm1GoSV7f4n7fNmiH9syRIkeR77bbiWdmwzMaDAAA') format('woff2')}.l-icon-add:before{content:"\e602"}.l-icon-reduce:before{content:"\e69c"}.l-icon{font-family:iconfont;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.l-icon::before{display:inline-flex}.count-hover{opacity:.8}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/custom-tab-bar/index.js b/node_modules/lin-ui/dist/custom-tab-bar/index.js
new file mode 100644
index 0000000..b010c7c
--- /dev/null
+++ b/node_modules/lin-ui/dist/custom-tab-bar/index.js
@@ -0,0 +1,121 @@
+Component({
+  properties: {
+    position: {
+      type: String,
+      value: 'bottom'
+    },
+    show: {
+      type: Boolean,
+      value: true
+    },
+    selected: {
+      type: Number,
+      value: 0
+    },
+    color: {
+      type: String,
+      value: '#707070'
+    },
+    selectedColor: {
+      type: String,
+      value: '3963BC'
+    },
+    borderStyle: {
+      type: String,
+      value: '#f6f6f6'
+    },
+    backgroundColor: {
+      type: String,
+      value: '#fff'
+    },
+    backgroundImg: {
+      type: String,
+      value: ''
+    },
+    fontSize: {
+      type: Number,
+      value: 24
+    },
+    isRedirectToTab: {
+      type: Boolean,
+      value: true
+    },
+    // 是否跳转
+    isNav: {
+      type: Boolean,
+      value: true
+    },
+    list: {
+      type: Array,
+      value: []
+    }
+  },
+  data: {},
+  attached() {},
+
+  methods: {
+    switchTab(e) {
+      const data = e.currentTarget.dataset;
+      const url = data.path;
+      if (this.data.isNav) {
+        if (this.data.isRedirectToTab) {
+          wx.switchTab({
+            url
+          });
+        } else {
+          wx.switchTab({
+            url
+          });
+        }
+      }
+
+
+      this.showItem(data.index);
+    },
+    show() {
+      this.setData({
+        show: true
+      });
+    },
+    hide() {
+      this.setData({
+        show: false
+      });
+    },
+    showItem(idx) {
+      this.setData({
+        selected: idx
+      });
+      let detail = {
+        idx,
+        path:this.route
+      };
+      let option = { bubbles: true, composed: true };
+      this.triggerEvent('lintap', detail, option);
+    },
+    showRedDot(idx) {
+      const redDot = `list[${idx}].redDot`;
+      this.setData({
+        [redDot]: true
+      });
+    },
+    hideRedDot(idx) {
+      const redDot = `list[${idx}].redDot`;
+      this.setData({
+        [redDot]: false
+      });
+    },
+    setTabBarBadge(idx, text) {
+      const badge = `list[${idx}].badge`;
+      this.setData({
+        [badge]: text
+      });
+    },
+    removeTabBarBadge(idx) {
+      const badge = `list[${idx}].badge`;
+      this.setData({
+        [badge]: ''
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/custom-tab-bar/index.json b/node_modules/lin-ui/dist/custom-tab-bar/index.json
new file mode 100644
index 0000000..32640e0
--- /dev/null
+++ b/node_modules/lin-ui/dist/custom-tab-bar/index.json
@@ -0,0 +1,3 @@
+{
+  "component": true
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/custom-tab-bar/index.wxml b/node_modules/lin-ui/dist/custom-tab-bar/index.wxml
new file mode 100644
index 0000000..48bf52b
--- /dev/null
+++ b/node_modules/lin-ui/dist/custom-tab-bar/index.wxml
@@ -0,0 +1,33 @@
+<!--miniprogram/custom-tab-bar/index.wxml-->
+<view
+  wx:if="{{show}}"
+  class="tab-bar tab-bar-{{position}}"
+  style='background: {{backgroundImg? "url("+ backgroundImg+ ")" : backgroundColor}}'>
+  <view class="tab-bar-border" style='background: {{borderStyle}}' ></view>
+  <view
+    wx:for="{{list}}"
+    wx:for-index="idx"
+    wx:key="index"
+    class="tab-bar-item {{item.style === 'circle' ? 'circle': ''}}"
+    data-path="{{item.pagePath}}"
+    data-index="{{idx}}"
+    bindtap="switchTab">
+    <view  wx:if="{{item.style === 'circle'}}" class='item-circle'></view>
+    <image
+      class='tab-bar-item-image'
+      wx:if="{{item.style != 'circle'}}"
+      style='height: {{item.iconSize}}rpx; width: {{item.iconSize}}rpx'
+      src="{{selected === idx ? item.selectedIconPath : item.iconPath}}"></image>
+      <image
+        wx:else
+        class='tab-bar-item-image'></image>
+      <image
+        class='center-circle'
+        wx:if="{{item.style === 'circle'}}"
+        src="{{selected === idx ? item.selectedIconPath : item.iconPath}}" ></image>
+    <view
+      style="font-size: {{fontSize}}rpx ;color: {{selected === idx ? selectedColor : color}}">{{item.text}}</view>
+    <view wx:if="{{item.redDot}}" class='reddot'></view>
+    <view wx:if="{{item.badge}}" class='badge'>{{item.badge}}</view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/custom-tab-bar/index.wxss b/node_modules/lin-ui/dist/custom-tab-bar/index.wxss
new file mode 100644
index 0000000..b12c574
--- /dev/null
+++ b/node_modules/lin-ui/dist/custom-tab-bar/index.wxss
@@ -0,0 +1 @@
+.tab-bar{position:relative;height:110rpx;width:750rpx;background:#fff;display:flex;flex-direction:row;background-position:center center;background-size:100% 100%;padding-bottom:env(safe-area-inset-bottom)}.tab-bar-bottom{position:fixed!important;bottom:0;left:0;right:0}.tab-bar-border{position:absolute;left:0;top:0;width:100%;display:flex;flex-direction:row;height:1rpx;background:#f6f6f6;box-shadow:0 -1px 3px 1px #f6f6f6}.tab-bar-item{position:relative;flex:1;text-align:center;display:flex;justify-content:center;align-items:center;flex-direction:column}.item-circle{width:120rpx;height:60rpx;background-color:#fff;border-radius:200rpx 200rpx 0 0;border-bottom:none;background:#fff;position:absolute;top:-40rpx;box-shadow:0 -1px 1px 0 #f6f6f6}.tab-bar-item-image{width:64rpx;height:64rpx}.tab-bar-item view{font-size:24rpx}.reddot{height:20rpx;width:20rpx;background:red;border-radius:50%;position:absolute;top:15rpx;margin-left:25rpx}.badge{height:32rpx;line-height:32rpx;padding:0rpx 6rpx;background:red;border-radius:16rpx;position:absolute;font-size:18rpx;color:#fff;top:10rpx;margin-left:25rpx;box-sizing:border-box}.center-circle{height:100rpx;width:100rpx;border-radius:50%;position:absolute;top:-30rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/dialog/index.js b/node_modules/lin-ui/dist/dialog/index.js
new file mode 100644
index 0000000..d7a5a63
--- /dev/null
+++ b/node_modules/lin-ui/dist/dialog/index.js
@@ -0,0 +1,187 @@
+import computeOffset from '../behaviors/computeOffset';
+import zIndex from '../behaviors/zIndex';
+import hover from '../behaviors/hover';
+
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [computeOffset,zIndex,hover],
+  externalClasses: ['l-class', 'l-title-class', 'l-content-class', 'l-confirm-class', 'l-cancel-class', 'l-bg-class'],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 类型 【 alert: 提示框， confrim: 确认框 】
+    type: {
+      type: String,
+      value: 'alert'
+    },
+    // 标题文字
+    title: {
+      type: String,
+      value: '提示'
+    },
+    // 是否显示标题
+    showTitle: {
+      type: Boolean,
+      value: true
+    },
+    // 内容
+    content: {
+      type: String,
+      value: ''
+    },
+    // 锁定
+    locked: {
+      type: Boolean,
+      value: true
+    },
+    // 确定按钮的文本
+    confirmText: {
+      type: String,
+      value: '确定'
+    },
+    // 确定按钮的颜色
+    confirmColor: {
+      type: String,
+      value: '#3683d6'
+    },
+    // 取消按钮的文本
+    cancelText: {
+      type: String,
+      value: '取消'
+    },
+    cancelColor: {
+      type: String,
+      value: '#45526b'
+    },
+    titleColor: String,
+    contentColor: {
+      type: String,
+      value: 'rgba(89,108,142,1)'
+    },
+    openApi: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    success: null,
+    fail: null,
+  },
+  /**
+   * 组件的初始数据
+   */
+  attached() {
+    if (this.data.openApi) {
+      this.initDialog();
+    }
+  },
+
+  pageLifetimes: {
+    show() {
+      if (this.data.openApi) {
+        this.initDialog();
+      }
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initDialog() {
+      wx.lin = wx.lin || {};
+      wx.lin.showDialog = (options) => {
+        const {
+          type = 'alert',
+          title = '提示',
+          showTitle = true,
+          content = '',
+          locked = true,
+          confirmText = '确定',
+          contentColor = 'rgba(89,108,142,1)',
+          cancelColor = '#45526b',
+          cancelText = '取消',
+          confirmColor = '#3683d6',
+          success = null,
+          fail = null,
+        } = options;
+        this.setData({
+          type,
+          title,
+          showTitle,
+          content,
+          locked,
+          confirmText,
+          cancelColor,
+          cancelText,
+          confirmColor,
+          contentColor,
+          show: true,
+          fail,
+          success
+        });
+        return this;
+      };
+    },
+
+    // 确定按钮
+    onConfirmTap() {
+      let detail = 'confirm';
+      let option = { bubbles: true, composed: true };
+
+      const {
+        success
+      } = this.data;
+      success && success({
+        confirm: true,
+        cancel: false,
+        errMsg: 'showDialog: success'
+      });
+      this.setData({
+        show: !this.data.show
+      });
+      this.triggerEvent('linconfirm', detail, option);
+
+    },
+
+    // 取消按钮
+    onCancelTap() {
+
+      let detail = 'cancel';
+      let option = { bubbles: true, composed: true };
+
+      const {
+        success
+      } = this.data;
+      success && success({
+        confirm: false,
+        cancel: true,
+        errMsg: 'showDialog: success'
+      });
+      this.setData({
+        show: !this.data.show
+      });
+
+      this.triggerEvent('lincancel', detail, option);
+    },
+
+    // 背景点击事件
+    onDialogTap() {
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+
+      if (this.data.locked !== true) {
+        this.setData({
+          show: !this.data.show
+        });
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/dialog/index.json b/node_modules/lin-ui/dist/dialog/index.json
new file mode 100644
index 0000000..e72f4f5
--- /dev/null
+++ b/node_modules/lin-ui/dist/dialog/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-popup": "../popup/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/dialog/index.wxml b/node_modules/lin-ui/dist/dialog/index.wxml
new file mode 100644
index 0000000..cc57891
--- /dev/null
+++ b/node_modules/lin-ui/dist/dialog/index.wxml
@@ -0,0 +1,33 @@
+<!-- popup.wxml -->
+<l-popup
+    show="{{show}}"
+    animation="show"
+    contentAlign="center"
+    locked="{{true}}" 
+    bind:lintap="onDialogTap"
+    l-bg-class="l-bg-class"
+    z-index="{{zIndex}}"
+>
+    <view class="dialog-container l-class" style="margin-bottom:{{distance}}px">
+        <view class="dialog-title l-title-class" style="color:{{titleColor}}" wx:if="{{showTitle}}">{{title}}</view>
+        <view class="dialog-content l-content-class" style="color:{{contentColor}}">
+            <slot />
+            {{content}}
+        </view>
+        <view class="dialog-btn-group">
+            <view
+                class="dialog-btn-cancel l-cancel-class"
+                style="color: {{cancelColor}}"
+                catchtap="onCancelTap"
+                hover-class="{{isHover?'group-hover':''}}"
+                wx:if="{{type=='confirm'}}"
+                >{{cancelText}}</view>
+            <view
+                class="dialog-btn-confirm l-confirm-class"
+                style="color: {{confirmColor}}"
+                hover-class="{{isHover?'group-hover':''}}"
+                catchtap="onConfirmTap"
+            >{{confirmText}}</view>
+        </view>
+    </view>
+</l-popup>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/dialog/index.wxss b/node_modules/lin-ui/dist/dialog/index.wxss
new file mode 100644
index 0000000..fb6a7a5
--- /dev/null
+++ b/node_modules/lin-ui/dist/dialog/index.wxss
@@ -0,0 +1 @@
+.dialog-container{display:flex;flex-direction:column;align-items:center;width:520rpx;background:#fff;border-radius:12rpx}.dialog-title{font-size:32rpx;font-family:PingFangSC-Regular;color:#45526b;line-height:44rpx;margin-top:30rpx;padding:0 25rpx;text-align:center}.dialog-content{font-size:28rpx;font-family:PingFangSC-Regular;line-height:40rpx;margin-top:30rpx;margin-bottom:30rpx;display:flex;flex-direction:column;align-items:center;padding:0 25rpx}.dialog-btn-group{width:100%;height:80rpx;display:flex;flex-direction:row;justify-content:space-between;align-items:center;border-top:2rpx solid #f3f3f3}.dialog-btn-cancel{font-size:28rpx;height:80rpx;width:259rpx;border-right:2rpx solid #f3f3f3;display:flex;flex-direction:row;align-items:center;justify-content:center}.dialog-btn-confirm{font-size:28rpx;flex:1;color:#3963bc;height:80rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.active{color:#3683d6}.leave{color:#45526b}.group-hover{opacity:.8}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/error-tip/index.js b/node_modules/lin-ui/dist/error-tip/index.js
new file mode 100644
index 0000000..85db9da
--- /dev/null
+++ b/node_modules/lin-ui/dist/error-tip/index.js
@@ -0,0 +1,24 @@
+Component({
+  /**
+     * 组件的属性列表
+     */
+  externalClasses: ['l-error-text', 'l-error-text-class'],
+
+  properties: {
+    errorText:String
+  },
+  
+  /**
+     * 组件的初始数据
+     */
+  data: {
+  
+  },
+  
+  /**
+     * 组件的方法列表
+     */
+  methods: {
+  
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/error-tip/index.json b/node_modules/lin-ui/dist/error-tip/index.json
new file mode 100644
index 0000000..a1d9113
--- /dev/null
+++ b/node_modules/lin-ui/dist/error-tip/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+     
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/error-tip/index.wxml b/node_modules/lin-ui/dist/error-tip/index.wxml
new file mode 100644
index 0000000..0ce9d31
--- /dev/null
+++ b/node_modules/lin-ui/dist/error-tip/index.wxml
@@ -0,0 +1 @@
+<view class="error-text l-error-text l-error-text-class" wx:if="{{errorText}}">{{errorText}}</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/error-tip/index.wxss b/node_modules/lin-ui/dist/error-tip/index.wxss
new file mode 100644
index 0000000..38f29e3
--- /dev/null
+++ b/node_modules/lin-ui/dist/error-tip/index.wxss
@@ -0,0 +1 @@
+.error-text{font-size:22rpx;color:#f4516c;margin-right:20rpx;line-height:2}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/filter/array.wxs b/node_modules/lin-ui/dist/filter/array.wxs
new file mode 100644
index 0000000..745c6fd
--- /dev/null
+++ b/node_modules/lin-ui/dist/filter/array.wxs
@@ -0,0 +1,174 @@
+var is = require("./is.wxs");
+
+function _isArray(targetArray, funName) {
+    if (!is.isArray(targetArray)) {
+        console.log('[WXS:Array]' + funName + ',targetArray must be array');
+        return false;
+    };
+    return true;
+}
+
+/**
+ * concat 合并数组
+ * @param {Array} targetArray 目标数组
+ */
+function concat() {
+    var length = arguments.length;
+    var result = [];
+    var validatorArray = _isArray(arguments[0], 'concat');
+    if (validatorArray) {
+        for (var i = 1; i < length; i++) {
+            result = arguments[0].concat(arguments[i])
+        }
+        return result
+    }
+}
+
+/**
+ * join 数组转成字符串
+ * @param {Array} targetArray 目标数组
+ * @param {String} spearator 连接符
+ */
+function join(targetArray, spearator) {
+    var validatorArray = _isArray(arguments[0], 'concat');
+    if (validatorArray) return targetArray.join(spearator);
+}
+
+/**
+ * pop 移除最后一个数组元素，并返回移除后的数组和溢出的值
+ * @param {Array} targetArray 目标数组
+ */
+function pop(targetArray) {
+    var validatorArray = _isArray(arguments[0], 'pop');
+    if (validatorArray) {
+        var result = targetArray.pop();
+        return {
+            newArray: targetArray,
+            item: result
+        }
+    }
+}
+
+/**
+ * shift 移除第一个数组元素，并返回移除后的数组和溢出的值
+ * @param {Array} targetArray 目标数组
+ */
+function shift(targetArray) {
+    var validatorArray = _isArray(arguments[0], 'shift');
+    if (validatorArray) {
+        var result = targetArray.shift();
+        return {
+            newArray: targetArray,
+            item: result
+        }
+    }
+}
+
+/**
+ * push 从后追加数组元素，并返回新的数组
+ * @param {Array} targetArray 目标数组
+ */
+function push() {
+    var length = arguments.length;
+    var validatorArray = _isArray(arguments[0], 'push');
+    if (validatorArray) {
+        for (var i = 1; i < length; i++) {
+            arguments[0].push(arguments[i])
+        }
+        return arguments[0]
+    }
+}
+
+/**
+ * unshift 从前追加数组元素，并返回新的数组
+ * @param {Array} targetArray 目标数组
+ */
+function unshift(targetArray) {
+    var length = arguments.length;
+    var validatorArray = _isArray(arguments[0], 'unshift');
+    if (validatorArray) {
+        for (var i = length - 1; i > 0; i--) {
+            arguments[0].unshift(arguments[i])
+        }
+        return arguments[0]
+    }
+}
+/**
+ * reverse 倒序
+ * @param {Array} targetArray 目标数组
+ */
+function reverse(targetArray) {
+    var validatorArray = _isArray(targetArray, 'reverse');
+    if (validatorArray) return targetArray.reverse();
+}
+
+/**
+ * slice 截取数组
+ * @param {Array} targetArray 目标数组
+ * @param {Number} beginSlice 从该索引（以 0 为基数）处开始提取目标数组中的元素
+ * @param {Number} endSlice 在该索引（以 0 为基数）处结束提取数组元素
+ */
+function slice(targetArray, beginSlice, endSlice) {
+    var validatorArray = _isArray(targetArray, 'slice');
+    if (validatorArray) return targetArray.slice(beginSlice, endSlice);
+}
+
+/**
+ * splice 截取数组
+ * @param {Array} targetArray 目标数组
+ * @param {Number} start
+ * @param {Number} deleteCount 
+ */
+function splice(targetArray, start, deleteCount) {
+    var validatorArray = _isArray(targetArray, 'splice');
+    if (validatorArray) {
+        if (arguments.length < 4) {
+            targetArray.splice(start, deleteCount);
+        } else {
+            targetArray.splice(start, deleteCount, arguments[3]);
+            var length = arguments.length;
+            for (var i = 4; i < length; i++) {
+                arguments[i] && targetArray.splice(++start, 0, arguments[i])
+            }
+        }
+        return targetArray
+    }
+}
+
+/**
+ * indexOf 查找数组
+ * @param {Array} targetArray 目标数组
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置
+ * 
+ */
+function indexOf(targetArray, searchValue, fromIndex = 0) {
+    var validatorArray = _isArray(targetArray, 'indexOf');
+    if (validatorArray) return targetArray.indexOf(searchValue, fromIndex);
+}
+
+/**
+ * lastIndexOf 查找字符串最后出现的位置
+ * @param {Array} targetArray 目标数组
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置，str.length
+ * 
+ */
+function lastIndexOf(targetArray, searchValue, fromIndex = 0) {
+    var validatorArray = _isArray(targetArray, 'lastIndexOf');
+    if (validatorArray) return targetArray.lastIndexOf(searchValue, fromIndex || targetArray.length);
+}
+
+module.exports = {
+    concat: concat,
+    join: join,
+    pop: pop,
+    shift: shift,
+    push: push,
+    unshift: unshift,
+    reverse: reverse,
+    slice: slice,
+    splice: splice,
+    indexOf:indexOf,
+    lastIndexOf:lastIndexOf
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/filter/classnames.wxs b/node_modules/lin-ui/dist/filter/classnames.wxs
new file mode 100644
index 0000000..a83cbe0
--- /dev/null
+++ b/node_modules/lin-ui/dist/filter/classnames.wxs
@@ -0,0 +1,33 @@
+var is = require('./is.wxs');
+var object = require('./object.wxs');
+
+function apply(fun, args) {
+  return args.map(function (item) {
+    return fun(item)
+  })
+}
+
+function classnames() {
+  var classes = [];
+  for (var i = 0; i < arguments.length; i++) {
+    var arg = arguments[i];
+    if (!arg) continue;
+    if (is.isString(arg) || is.isNumber(arg)) {
+      classes.push(arg);
+    } else if (is.isArray(arg) && arg.length) {
+      var inner = apply(classnames, arg);
+      if (inner) {
+        classes.push(inner);
+      }
+    } else if (is.isObject(arg)) {
+      object.keys(arg).forEach(function (key) {
+        if (arg[key]) {
+          classes.push(key);
+        }
+      })
+    }
+  }
+  return classes.join(' ');
+}
+
+module.exports = classnames;
diff --git a/node_modules/lin-ui/dist/filter/is.wxs b/node_modules/lin-ui/dist/filter/is.wxs
new file mode 100644
index 0000000..9841e59
--- /dev/null
+++ b/node_modules/lin-ui/dist/filter/is.wxs
@@ -0,0 +1,70 @@
+var TYPE = {
+    NULL: 'null',
+    UNDEFINED: 'undefined',
+    NUMBER: 'Number',
+    STRING: 'String',
+    BOOLEAN: 'Boolean',
+    OBJECT: 'Object',
+    FUNCTION: 'Function',
+    ARRAY: 'Array',
+    DATE: 'Date',
+    REGEXP: 'RegExp',
+}
+
+function isUndefined(val) {
+    return TYPE.UNDEFINED === typeof val;
+}
+
+function isNull(val) {
+    return val === TYPE.NULL;
+}
+
+function _jadgeFun(val, type) {
+    if (isUndefined(val) || isNull(val)) return false;
+    return TYPE[type] === val.constructor;
+}
+
+function isNumber(val) {
+    return _jadgeFun(val, 'NUMBER');
+}
+
+function isString(val) {
+    return _jadgeFun(val, 'STRING');
+}
+
+function isBoolean(val) {
+    return _jadgeFun(val, 'BOOLEAN');
+}
+
+function isObject(val) {
+    return _jadgeFun(val, 'OBJECT');
+}
+
+function isFunction(val) {
+    return _jadgeFun(val, 'FUNCTION');
+}
+
+function isArray(val) {
+    return _jadgeFun(val, 'ARRAY');
+}
+
+function isDate(val) {
+    return _jadgeFun(val, 'DATE');
+}
+
+function isRegExp(val) {
+    return _jadgeFun(val, 'REGEXP');
+}
+
+module.exports = {
+    isNull: isNull,
+    isUndefined: isUndefined,
+    isNumber: isNumber,
+    isString: isString,
+    isBoolean: isBoolean,
+    isObject: isObject,
+    isFunction: isFunction,
+    isArray: isArray,
+    isDate: isDate,
+    isRegExp: isRegExp
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/filter/object.wxs b/node_modules/lin-ui/dist/filter/object.wxs
new file mode 100644
index 0000000..244fe4f
--- /dev/null
+++ b/node_modules/lin-ui/dist/filter/object.wxs
@@ -0,0 +1,12 @@
+var REGEXP = getRegExp('{|}|"', 'g');
+
+function keys(obj) {
+  return JSON.stringify(obj)
+    .replace(REGEXP, '')
+    .split(',')
+    .map(function(item) {
+      return item.split(':')[0];
+    });
+}
+
+module.exports.keys = keys;
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/filter/string.wxs b/node_modules/lin-ui/dist/filter/string.wxs
new file mode 100644
index 0000000..e6ce0dc
--- /dev/null
+++ b/node_modules/lin-ui/dist/filter/string.wxs
@@ -0,0 +1,178 @@
+var is = require("./is.wxs");
+
+function _isString(targetString, funName) {
+    if (!is.isString(targetString)) {
+        console.log('[WXS:String]' + funName + ',targetString must be string');
+        return false;
+    };
+    return true;
+}
+/**
+ * toString 返回指定对象的字符串形式
+ * @param {String} targetString 目标字符串
+ */
+
+function toString(targetString) {
+    return targetString && targetString.toString();
+}
+
+/**
+ * valueOf 返回指定对象的value
+ * @param {String} targetString 目标字符串
+ */
+
+function valueOf(targetString) {
+    return targetString && targetString.valueOf();
+}
+
+/**
+ * charAt 一个字符串中返回指定的字符。
+ * @param {String} targetString 目标字符串
+ * @param {Number} index 返回指定字符的位置
+ * 
+ */
+function charAt(targetString, index = 0) {
+    var validatorString = _isString(targetString, 'charAt');
+    if (validatorString) return targetString.charAt(index);
+}
+
+/**
+ * charCodeAt 返回0到65535之间的整数，表示给定索引处的UTF-16代码单元
+ * @param {String} targetString 目标字符串
+ * @param {Number} index 返回指定字符的位置
+ * 
+ */
+function charCodeAt(targetString, index = 0) {
+    var validatorString = _isString(targetString, 'charCodeAt');
+    if (validatorString) return targetString.charCodeAt(index);
+}
+
+/**
+ * indexOf 查找字符串
+ * @param {String} targetString 目标字符串
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置
+ * 
+ */
+function indexOf(targetString, searchValue, fromIndex = 0) {
+    var validatorString = _isString(targetString, 'indexOf');
+    if (validatorString) return targetString.indexOf(searchValue, fromIndex);
+}
+
+/**
+ * lastIndexOf 查找字符串最后出现的位置
+ * @param {String} targetString 目标字符串
+ * @param {String} searchValue 被查找的值
+ * @param {Number} fromIndex 开始查找的位置，str.length
+ * 
+ */
+function lastIndexOf(targetString, searchValue, fromIndex = 0) {
+    var validatorString = _isString(targetString, 'lastIndexOf');
+    if (validatorString) return targetString.lastIndexOf(searchValue, fromIndex || targetString.length);
+}
+
+/**
+ * slice 取一个字符串的一部分，并返回一新的字符串
+ * @param {String} targetString 目标字符串
+ * @param {Number} beginSlice 从该索引（以 0 为基数）处开始提取原字符串中的字符
+ * @param {Number} endSlice 在该索引（以 0 为基数）处结束提取字符
+ * 
+ */
+function slice(targetString, beginSlice, endSlice) {
+    var validatorString = _isString(targetString, 'slice');
+    if (validatorString) return targetString.slice(beginSlice, endSlice || targetString.length);
+}
+
+/**
+ * split 分割字符串
+ * @param {String} targetString 目标字符串
+ * @param {String} separator 从该索引（以 0 为基数）处开始提取原字符串中的字符
+ * @param {Number} limit 
+ * 
+ */
+function split(targetString, separator, limit) {
+    var validatorString = _isString(targetString, 'split');
+    if (validatorString) return targetString.split(separator, limit);
+}
+
+/**
+ * substring 取一个字符串的一部分，并返回一新的字符串
+ * @param {String} targetString 目标字符串
+ * @param {Number} indexStart 需要截取的第一个字符的索引，该字符作为返回的字符串的首字母。
+ * @param {Number} indexEnd 一个 0 到字符串长度之间的整数，以该数字为索引的字符不包含在截取的字符串内。
+ * 
+ */
+function substring(targetString, indexStart, indexEnd) {
+    var validatorString = _isString(targetString, 'substring');
+    if (validatorString) return targetString.substring(indexStart, indexEnd);
+}
+
+/**
+ * toLowerCase 字符串值转为小写形式
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toLowerCase(targetString) {
+    var validatorString = _isString(targetString, 'toLowerCase');
+    if (validatorString) return targetString.toLowerCase();
+}
+
+/**
+ * toLocaleLowerCase 字符串值转为小写形式
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toLocaleLowerCase(targetString) {
+    var validatorString = _isString(targetString, 'toLocaleLowerCase');
+    if (validatorString) return targetString.toLocaleLowerCase();
+}
+
+/**
+ * toUpperCase 字符串值转为大写形式
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toUpperCase(targetString) {
+    var validatorString = _isString(targetString, 'toUpperCase');
+    if (validatorString) return targetString.toUpperCase();
+}
+
+/**
+ * toLocaleUpperCase 根据任何特定于语言环境的案例映射，返回调用字符串值转换为大写的值。
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function toLocaleUpperCase(targetString) {
+    var validatorString = _isString(targetString, 'toLocaleUpperCase');
+    if (validatorString) return targetString.toLocaleUpperCase();
+}
+
+/**
+ * trim 从一个字符串的两端删除空白字符
+ * @param {String} targetString 目标字符串
+ * 
+ */
+function trim(targetString) {
+    var validatorString = _isString(targetString, 'trim');
+    if (validatorString) return targetString.trim();
+}
+
+
+
+
+module.exports = {
+    indexOf: indexOf,
+    charAt: charAt,
+    charCodeAt: charCodeAt,
+    toString: toString,
+    valueOf: valueOf,
+    lastIndexOf: lastIndexOf,
+    slice: slice,
+    split: split,
+    substring: substring,
+    toLowerCase: toLowerCase,
+    toLocaleLowerCase: toLocaleLowerCase,
+    toUpperCase: toUpperCase,
+    toLocaleUpperCase: toLocaleUpperCase,
+    trim: trim
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/filter/zero-padding.wxs b/node_modules/lin-ui/dist/filter/zero-padding.wxs
new file mode 100644
index 0000000..a6b4eb0
--- /dev/null
+++ b/node_modules/lin-ui/dist/filter/zero-padding.wxs
@@ -0,0 +1,8 @@
+function zeroPadding(num, length = 2) {
+    if((num + "").length >= length) {
+        return num;
+    }
+    return zeroPadding("0" + num, length)
+}
+
+module.exports = zeroPadding;
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/grid-item/index.js b/node_modules/lin-ui/dist/grid-item/index.js
new file mode 100644
index 0000000..031c0e6
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid-item/index.js
@@ -0,0 +1,46 @@
+Component({
+  relations: {
+    '../grid/index': {
+      type: 'parent'
+    },
+  },
+  externalClasses: ['l-grid-item', 'l-grid-item-class'],
+  properties: {
+    key: String,
+    cell:{
+      type:Object,
+      value:{}
+    },
+  },
+  data: {
+    index:0,
+  },
+  attached() {
+
+  },
+  observers: {
+    'key': function() {
+      const parent = this.getRelationNodes('../grid/index')[0];
+      if (parent) {
+        parent.setData({
+          gridItems: [],
+          childNum: 0
+        });
+        parent.initGrids();
+      }
+    }
+  },
+
+  lifetimes: {
+    show() {
+
+    },
+  },
+  methods: {
+    tapGridItem() {
+      this.triggerEvent('linitemtap', {
+        ...this.data
+      }, { bubbles: true, composed: true });
+    },
+  }
+});
diff --git a/node_modules/lin-ui/dist/grid-item/index.json b/node_modules/lin-ui/dist/grid-item/index.json
new file mode 100644
index 0000000..7a47d16
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid-item/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+  
+    }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/grid-item/index.wxml b/node_modules/lin-ui/dist/grid-item/index.wxml
new file mode 100644
index 0000000..49a59ea
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid-item/index.wxml
@@ -0,0 +1,3 @@
+<view class="l-grid-item l-grid-item-class grid-item" bindtap="tapGridItem">
+    <slot></slot>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/grid-item/index.wxss b/node_modules/lin-ui/dist/grid-item/index.wxss
new file mode 100644
index 0000000..f7b1273
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid-item/index.wxss
@@ -0,0 +1 @@
+.grid-item{max-width:initial;max-height:initial;display:flex;justify-content:center;align-items:center;flex-direction:column}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/grid/index.js b/node_modules/lin-ui/dist/grid/index.js
new file mode 100644
index 0000000..872c6cd
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid/index.js
@@ -0,0 +1,85 @@
+import hover from '../behaviors/hover';
+
+Component({
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  behaviors: [hover],
+  relations: {
+    '../grid-item/index': {
+      type: 'child',
+      linked() {
+        this.initGrids();
+
+      },
+      unlinked() {
+        this.initGrids();
+      }
+    },
+
+  },
+  externalClasses: ['l-class', 'l-class-grid', 'l-grid-class'],
+  properties: {
+    rowNum: {
+      type: String,
+      value: 3,
+    },
+    showBorder: Boolean,
+    showColBorder: Boolean,
+    showRowBorder: Boolean,
+  },
+  data: {
+    gridItems: [],
+    childNum: 0,
+    currentIndex: -1,
+    currentCell: -1,
+  },
+  ready() {
+    this.initGrids();
+  },
+
+  lifetimes: {
+    show() {
+
+    },
+  },
+  methods: {
+    initGrids() {
+      let items = this.getRelationNodes('../grid-item/index');
+      if (this.data.childNum === items.length) return;
+      const gridItems = items.map((item, index) => {
+        item.setData({
+          index,
+        });
+        return {
+          index:index,
+          key: item.data.key,
+          cell: item.data.cell
+        };
+      });
+      this.setData({
+        gridItems: gridItems,
+        childNum: items.length
+      });
+    },
+    tapGridItem(e) {
+      const { gridIndex } = e.target.dataset;
+      this.setData({
+        currentIndex: gridIndex,
+        currentCell: this.data.gridItems[gridIndex].cell
+      });
+    },
+
+    tapGrid() {
+      this.triggerEvent('lintap', {
+        index: this.data.currentIndex,
+        cell: this.data.currentCell
+      }, { bubbles: true, composed: true });
+
+      this.setData({
+        currentIndex: -1,
+        currentCell: -1
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/grid/index.json b/node_modules/lin-ui/dist/grid/index.json
new file mode 100644
index 0000000..93860ea
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+      "l-grid-item":"../grid-item/index"
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/grid/index.wxml b/node_modules/lin-ui/dist/grid/index.wxml
new file mode 100644
index 0000000..3adb13f
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid/index.wxml
@@ -0,0 +1,11 @@
+<view class="l-grid l-class" bindtap="tapGrid">
+    <view bindtap="tapGridItem" 
+          hover-class="{{isHover?'l-gird-hover':''}}" 
+          hover-start-time="20"
+          hover-stay-time="50" 
+          data-grid-index="{{item.index}}" 
+          class="l-grid-item l-class-grid l-grid-class {{index%rowNum !== rowNum-1 &&(showBorder||showColBorder) ? 'side-grid':''}} {{(index<gridItems.length-(gridItems.length%rowNum||rowNum)) &&(showBorder||showRowBorder)? 'center-grid':''}}" wx:for="{{gridItems}}" wx:key="{{item.key}}" 
+          style="min-width:{{100/rowNum}}%;">
+        <slot name="{{item.key}}"></slot>
+    </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/grid/index.wxss b/node_modules/lin-ui/dist/grid/index.wxss
new file mode 100644
index 0000000..56f29f5
--- /dev/null
+++ b/node_modules/lin-ui/dist/grid/index.wxss
@@ -0,0 +1 @@
+.l-grid{display:flex;width:inherit;flex-wrap:wrap}.l-grid .l-grid-item{display:flex;justify-content:center;align-items:center;flex-direction:column;text-align:center;box-sizing:border-box;border-style:solid;border-color:#ededed;border-width:0}.l-grid .center-grid{border-bottom-width:2rpx}.l-grid .side-grid{border-right-width:2rpx}.l-gird-hover{opacity:.8}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/icon/index.js b/node_modules/lin-ui/dist/icon/index.js
new file mode 100644
index 0000000..027b2fa
--- /dev/null
+++ b/node_modules/lin-ui/dist/icon/index.js
@@ -0,0 +1,26 @@
+Component({
+  externalClasses: ['l-class', 'l-class-self', 'l-self-class'],
+  options: {
+    addGlobalClass: true
+  },
+  properties: {
+    name: String,
+    color: String,
+    size: String,
+  },
+
+  data: {
+    default: {
+      size: 40,
+      color: '#45526B',
+    },
+  },
+
+  ready: function () {
+    if (!this.data.name) {
+      console.error('请传入Icon组件的name属性');
+    }
+  },
+  methods: {
+  }
+});
diff --git a/node_modules/lin-ui/dist/icon/index.json b/node_modules/lin-ui/dist/icon/index.json
new file mode 100644
index 0000000..8bc8f18
--- /dev/null
+++ b/node_modules/lin-ui/dist/icon/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+   
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/icon/index.wxml b/node_modules/lin-ui/dist/icon/index.wxml
new file mode 100644
index 0000000..5140cde
--- /dev/null
+++ b/node_modules/lin-ui/dist/icon/index.wxml
@@ -0,0 +1 @@
+<view class="l-class l-class-self l-self-class l-icon {{ name === '' ? '' : 'l-icon-' +  name }}" style="{{ size ? 'font-size:'+size+'rpx;':''}}{{ color ? 'color:' + color+';' : '' }}" />
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/icon/index.wxss b/node_modules/lin-ui/dist/icon/index.wxss
new file mode 100644
index 0000000..5bb74c1
--- /dev/null
+++ b/node_modules/lin-ui/dist/icon/index.wxss
@@ -0,0 +1 @@
+.l-icon{font-family:l-iconfont;font-size:40rpx;color:#3963bc;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@font-face{font-family:l-iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,') format('woff2')}.l-icon-error:before{content:"\e605"}.l-icon-duihao:before{content:"\e63c"}.l-icon-video:before{content:"\e609"}.l-icon-fork:before{content:"\e632"}.l-icon-address:before{content:"\e606"}.l-icon-backward:before{content:"\e607"}.l-icon-add:before{content:"\e608"}.l-icon-cart:before{content:"\e60a"}.l-icon-close:before{content:"\e60b"}.l-icon-checked:before{content:"\e60c"}.l-icon-comment:before{content:"\e60d"}.l-icon-down:before{content:"\e60e"}.l-icon-customer-service:before{content:"\e60f"}.l-icon-delete:before{content:"\e610"}.l-icon-edit:before{content:"\e611"}.l-icon-download:before{content:"\e612"}.l-icon-ellipsis:before{content:"\e613"}.l-icon-favor:before{content:"\e614"}.l-icon-favor-fill:before{content:"\e631"}.l-icon-forward:before{content:"\e615"}.l-icon-help:before{content:"\e616"}.l-icon-eye:before{content:"\e617"}.l-icon-history:before{content:"\e618"}.l-icon-left:before{content:"\e619"}.l-icon-like:before{content:"\e61a"}.l-icon-notification:before{content:"\e61b"}.l-icon-order:before{content:"\e61c"}.l-icon-loading:before{content:"\e61d"}.l-icon-password:before{content:"\e61e"}.l-icon-more:before{content:"\e61f"}.l-icon-picture:before{content:"\e620"}.l-icon-pull-down:before{content:"\e621"}.l-icon-right:before{content:"\e622"}.l-icon-research:before{content:"\e623"}.l-icon-phone:before{content:"\e624"}.l-icon-setting:before{content:"\e625"}.l-icon-scan:before{content:"\e626"}.l-icon-share:before{content:"\e627"}.l-icon-success:before{content:"\e628"}.l-icon-soud:before{content:"\e629"}.l-icon-time:before{content:"\e62a"}.l-icon-warning:before{content:"\e62b"}.l-icon-to-top:before{content:"\e62c"}.l-icon-up:before{content:"\e62d"}.l-icon-WiFi:before{content:"\e62e"}.l-icon-user:before{content:"\e62f"}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/image-picker/image/add.png b/node_modules/lin-ui/dist/image-picker/image/add.png
new file mode 100644
index 0000000..4253bd3
Binary files /dev/null and b/node_modules/lin-ui/dist/image-picker/image/add.png differ
diff --git a/node_modules/lin-ui/dist/image-picker/index.js b/node_modules/lin-ui/dist/image-picker/index.js
new file mode 100644
index 0000000..63d22f5
--- /dev/null
+++ b/node_modules/lin-ui/dist/image-picker/index.js
@@ -0,0 +1,254 @@
+// mask
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-class', 'l-item-class'],
+  behaviors: ['wx://form-field'],
+  properties: {
+    urls: {
+      type: Array,
+      value: []
+    },
+    // 最多可以选择的图片张数
+    count: {
+      type: [String, Number],
+      value: 9
+    },
+    // 清除urls
+    clear: {
+      type: Boolean,
+      value: false,
+      observer: function (newVal) {
+        if (newVal) {
+          this.handleClear();
+        }
+      }
+    },
+    // 每行可显示的个数
+    size: {
+      type: [String, Number],
+      value: 3
+    },
+    // 所选的图片的尺寸 ['original', 'compressed']
+    sizeType: {
+      type: String,
+      value: 'original',
+    },
+    // 图片裁剪、缩放的模式
+    mode: {
+      type: String,
+      value: 'aspectFit', // 参考微信小程序 image 组件的mode属性列表
+    },
+    // 设置是否传入slot
+    custom: {
+      type: Boolean,
+      value: false
+    },
+    // 是否可以预览
+    preview: {
+      type: Boolean,
+      value: true
+    },
+    // 所选图片最大限制，单位字节
+    maxImageSize: {
+      type: Number,
+      value: 10000000,
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    showBtn: true,
+    tempFilePath: '',
+  },
+
+  lifetimes: {
+    attached: function () {
+      // 在组件实例进入页面节点树时执行
+      const newOrOld = this.judgeNewOrOld();
+      this.setData({
+        newOrOld
+      });
+      if (newOrOld == 'old') {
+        console.warn('image-picker组件已经升级，建议使用最新版本，当前用法会在后续版本中暂停支持');
+      }
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    handleClear() {
+      let urls = this.data.urls;
+      this.setData({
+        urls: [],
+        clear: false,
+        showBtn: true
+      });
+      let info = {
+        all: urls,
+        current: urls,
+      };
+
+      let option = {};
+      this.triggerEvent('linclear', info, option);
+    },
+
+    // 预览 preview
+    onPreviewTap(e) {
+      const index = e.currentTarget.dataset.index;
+      const urls = this.data.urls;
+      let tempFilePath = '';
+      let previewImageList = [];
+      const newOrOld = this.data.newOrOld;
+
+      if (newOrOld == 'old') {
+        tempFilePath = this.data.urls[index];
+        previewImageList = this.data.urls;
+
+      } else {
+        tempFilePath = this.data.urls[index].url;
+        for (let i = 0; i < urls.length; i++) {
+          previewImageList.push(urls[i].url);
+        }
+      }
+
+
+      let detail = {
+        index, // 下标
+        current: urls[index], // 当前显示图片的http链接
+        all: urls // 需要预览的图片http链接列表
+      };
+      let option = {};
+      if (this.data.preview === true) {
+        wx.previewImage({
+          current: tempFilePath, // 当前显示图片的http链接
+          urls: previewImageList // 需要预览的图片http链接列表
+        });
+      }
+      this.triggerEvent('linpreview', detail, option);
+    },
+
+
+    // 增加 add
+    onAddTap() {
+      const that = this;
+      const count = this.data.count - this.data.urls.length;
+      if (count === 0) {
+        return;
+      }
+      const newOrOld = this.data.newOrOld;
+      wx.chooseImage({
+        count,
+        sizeType: this.data.sizeType,
+        sourceType: ['album', 'camera'],
+        success(res) {
+          // tempFilePath可以作为img标签的src属性显示图片
+          let tempFilePath = [];
+          if (newOrOld == 'old') {
+            tempFilePath = res.tempFilePaths;
+          } else {
+            for (let i = 0; i < res.tempFilePaths.length; i++) {
+              tempFilePath.push({
+                url: res.tempFilePaths[i],
+                // key: null
+                imageSize: res.tempFiles[i].size
+              });
+              if (res.tempFiles[i].size > that.data.maxImageSize) {
+                tempFilePath[i].overSize = true;
+              } else {
+                tempFilePath[i].overSize = false;
+              }
+            }
+          }
+          const newtempFilePaths = that.data.urls.concat(tempFilePath);
+          // 判断是否还能继续添加图片 
+          if (newtempFilePaths.length === parseInt(that.data.count)) {
+            that.setData({
+              showBtn: false
+            });
+          }
+          that.setData({
+            urls: newtempFilePaths,
+            value: newtempFilePaths,
+            tempFilePath
+          });
+          let detail = {
+            current: tempFilePath,
+            all: newtempFilePaths
+          };
+          let option = {};
+
+          that.triggerEvent('linchange', detail, option);
+          that.triggerEvent('linpush', detail, option);
+
+          // 超过大小的image集合
+          let overSizeList = [];
+          for (let n = 0; n < newtempFilePaths.length; n++) {
+            if (newtempFilePaths[n].overSize) {
+              overSizeList.push(newtempFilePaths[n]);
+            }
+          }
+
+          if (overSizeList.length > 0) {
+            let detail = {
+              current: tempFilePath,
+              all: newtempFilePaths,
+              overSizeList: overSizeList,
+            };
+            that.triggerEvent('linoversize', detail, option);
+          }
+        }
+      });
+
+    },
+
+    // 删除 remove
+    onDelTap(e) {
+      const index = e.currentTarget.dataset.index;
+      const urls = this.data.urls;
+      const tempFilePath = urls[index];
+      const tempFilePaths = this.handleSplice(urls, tempFilePath);
+      // 判断是否还能继续添加图片 
+      if (tempFilePaths.length < parseInt(this.data.count)) {
+        this.setData({
+          showBtn: true
+        });
+      }
+      this.setData({
+        tempFilePath,
+        urls: tempFilePaths,
+        value: tempFilePaths,
+      });
+      let detail = {
+        index,
+        current: tempFilePath,
+        all: tempFilePaths
+      };
+      let option = {};
+
+      this.triggerEvent('linremove', detail, option);
+
+    },
+    handleSplice(arr, current) {
+      const newArr = arr.filter(item => item !== current);
+      return newArr;
+    },
+
+    judgeNewOrOld: function () {
+      const urls = this.data.urls;
+      if (urls.length != 0) {
+        if (typeof (urls[0]) != 'object') {
+          return 'old';
+        }
+        return 'new';
+      }
+      return 'new';
+    }
+
+  },
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/image-picker/index.json b/node_modules/lin-ui/dist/image-picker/index.json
new file mode 100644
index 0000000..af2d0be
--- /dev/null
+++ b/node_modules/lin-ui/dist/image-picker/index.json
@@ -0,0 +1,8 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-grid-item": "../grid-item/index",
+    "l-grid": "../grid/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/image-picker/index.wxml b/node_modules/lin-ui/dist/image-picker/index.wxml
new file mode 100644
index 0000000..d7c9b22
--- /dev/null
+++ b/node_modules/lin-ui/dist/image-picker/index.wxml
@@ -0,0 +1,21 @@
+<!-- image-picker.wxml -->
+<l-grid row-num="{{ size }}" l-class="l-class">
+  <l-grid-item wx:for="{{ urls }}" wx:key="{{ index }}" key="{{ index }}" slot="{{ index }}">
+    <view class="item l-item-class" catchtap="onPreviewTap" data-index="{{ index }}">
+      <view class="close" data-index="{{ index }}" catchtap="onDelTap">
+        <l-icon name="close" color="#fff" size="22" l-self-class="close-icon" />
+      </view>
+      <image class="{{size == 3? 'img': 'min-img'}}" mode="{{ mode }}" src="{{newOrOld=='old'? item:item.url }}" />
+    </view>
+  </l-grid-item>
+  <!-- add 按钮 -->
+  <l-grid-item wx:if="{{ showBtn }}">
+    <!-- 自定义图片选择按钮 -->
+    <view class="item l-item-class {{size == 3? 'img': 'min-img'}}" catchtap="onAddTap" wx:if="{{ custom }}">
+      <slot></slot>
+    </view>
+    <view class="item l-item-class {{size == 3? 'img': 'min-img'}}" catchtap="onAddTap" wx:else>
+      <image class="add-icon" src="./image/add.png" />
+    </view>
+  </l-grid-item>
+</l-grid>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/image-picker/index.wxss b/node_modules/lin-ui/dist/image-picker/index.wxss
new file mode 100644
index 0000000..a4b4d8a
--- /dev/null
+++ b/node_modules/lin-ui/dist/image-picker/index.wxss
@@ -0,0 +1 @@
+.item{position:relative}.close{position:absolute;right:10rpx;top:10rpx;height:40rpx;width:40rpx;border-radius:50%;background:rgba(0,0,0,.4);display:flex;flex-direction:row;align-items:center;justify-content:center;box-sizing:border-box;z-index:99}.add{height:220rpx;width:220rpx;border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.add-icon{height:100rpx;width:100rpx}.img{height:220rpx;width:220rpx;margin-bottom:10rpx;border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.min-img{height:160rpx;width:160rpx;margin-bottom:10rpx;border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}.flex{border:1rpx solid #eee;border-radius:4rpx;display:flex;flex-direction:row;align-items:center;justify-content:center}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/input/index.js b/node_modules/lin-ui/dist/input/index.js
new file mode 100644
index 0000000..e5f21b3
--- /dev/null
+++ b/node_modules/lin-ui/dist/input/index.js
@@ -0,0 +1,161 @@
+// input/input.js
+import rules from '../behaviors/rules';
+
+Component({
+  /**
+   * 组件的属性列表
+   */
+  options: {
+    multipleSlots: true,
+  },
+  behaviors: ['wx://form-field', rules],
+  externalClasses: ['l-class', 'l-label-class','l-error-text','l-error-text-class'],
+  properties: {
+    // 表单标题（label）的文本
+    label: {
+      type: String,
+      value: ''
+    },
+    // 是否隐藏label
+    hideLabel:{
+      type: Boolean,
+      value: false
+    },
+    // 是否自定义label部分
+    labelCustom: {
+      type: Boolean,
+      value: false
+    },
+    // 是否显示下划线
+    showRow: {
+      type: Boolean,
+      value: true
+    },
+    // 是否必选
+    required: {
+      type: Boolean,
+      value: false
+    },
+    // 占位文本
+    placeholder: {
+      type: String,
+      value: ''
+    },
+    // 输入框类型
+    type: {
+      type: String,
+      value: 'text'
+    },
+    // 输入框的值
+    value: {
+      type: String,
+      value: ''
+    },
+    // 是否需要冒号
+    colon: {
+      type: Boolean,
+      value: false
+    },
+    // 获取焦点
+    focus: {
+      type: Boolean,
+      value: false
+    },
+    // 是否显示清除按钮
+    clear: {
+      type: Boolean,
+      value: false
+    },
+    // 最大输入长度
+    maxlength: {
+      type: Number,
+      value: 140
+    },
+    // 表单项的宽度，单位rpx
+    width: {
+      type: Number,
+      value: 750
+    },
+    // 表单项标题部分的宽度，单位rpx
+    labelWidth: {
+      type: Number,
+      value: 200
+    },
+    // label标题的显示位置 left top right
+    labelLayout: {
+      type: String,
+      value: 'left'
+    },
+    // 是否禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 占位文字的样式  
+    placeholderStyle: {
+      type: String,
+      value: ''
+    },
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+  attached() {
+    this.initRules();
+  },
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+
+    handleInputChange(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('lininput', event.detail);
+    },
+
+    handleInputFocus(event) {
+      this.triggerEvent('linfocus', event.detail);
+    },
+
+    handleInputBlur(event) {
+      this.validatorData({
+        value: event.detail.value
+      });
+      this.triggerEvent('linblur', event.detail);
+    },
+    handleInputConfirm(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('linconfirm', event.detail);
+    },
+    onClearTap(event) {
+      this.setData({
+        value: ''
+      });
+      this.triggerEvent('linclear', event.detail);
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/input/index.json b/node_modules/lin-ui/dist/input/index.json
new file mode 100644
index 0000000..fe1a1ff
--- /dev/null
+++ b/node_modules/lin-ui/dist/input/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-error-tip":"../error-tip/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/input/index.wxml b/node_modules/lin-ui/dist/input/index.wxml
new file mode 100644
index 0000000..a11f090
--- /dev/null
+++ b/node_modules/lin-ui/dist/input/index.wxml
@@ -0,0 +1,37 @@
+<!--  input/input.wxml -->
+<label
+  class='form-item {{disabled? "disabled": ""}} l-class form-item-{{labelLayout}}'
+  style="width:{{width}}rpx">
+  <view class='mask' wx:if="{{disabled}}"></view>
+  <view class='row' hidden="{{ showRow ? '' : 'hidden' }}" style="width:{{width}}rpx;"></view>
+  <view wx:if="{{label && !labelCustom}}" hidden="{{hideLabel}}" class='form-label l-label-class form-label-{{labelLayout}}' style='{{labelLayout !== "top" ? "width:"+ labelWidth+ "rpx;" : "" }} height:{{labelLayout== "top" ? labelWidth + "rpx" : "" }}'>
+    <text><text class='text-require' wx:if="{{required}}">* </text>{{label}}<text wx:if="{{colon}}">：</text>
+    </text>
+  </view>
+  <view wx:else hidden="{{hideLabel}}" class='form-label l-label-class form-label-{{labelLayout}}' style='{{labelLayout !== "top" ? "width:"+ labelWidth+ "rpx;" : "" }} height:{{labelLayout== "top" ? labelWidth + "rpx" : "" }}'>
+    <slot name="left" />
+  </view>
+  <!-- 小程序表单组件 -->
+  <input
+    class="input {{hideLabel?'hideLabel':''}}"
+    value="{{ value }}"
+    type="{{type}}"
+    password="{{type==='password'}}"
+    placeholder="{{placeholder}}"
+    maxlength="{{maxlength}}"
+    placeholder-class="pls-class"
+    placeholder-style="{{placeholderStyle}}"
+    disabled="{{disabled}}"
+    focus="{{focus}}"
+    bindinput="handleInputChange"
+    bindfocus="handleInputFocus"
+    bindblur="handleInputBlur"
+    bindconfirm="handleInputConfirm" />
+  <view class="close" wx:if="{{clear&&value}}" bindtap="onClearTap">
+    <view  class="close-icon">
+      <l-icon  name="close" color="#fff" size="16" />
+    </view>
+  </view>
+  <slot name="right"/>
+  <l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
+</label>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/input/index.wxss b/node_modules/lin-ui/dist/input/index.wxss
new file mode 100644
index 0000000..9ccc460
--- /dev/null
+++ b/node_modules/lin-ui/dist/input/index.wxss
@@ -0,0 +1 @@
+.form-item{position:relative;font-size:28rpx;color:#333;width:750rpx;height:88rpx;display:flex;flex-direction:row;align-items:center;padding-right:25rpx;box-sizing:border-box}.row{position:absolute;bottom:0;right:0;height:2rpx;width:730rpx;background:#f3f3f3}.text-require{color:#e23;vertical-align:middle}.form-label{display:flex;flex-direction:row;align-items:center;height:88rpx;padding-left:25rpx;padding-right:15rpx;box-sizing:border-box}.disabled{color:#9a9a9a!important}.mask{position:absolute;z-index:999;height:100%;width:100%}.form-label-right{justify-content:flex-end}.form-label-left{justify-content:flex-start}.input{height:100%;line-height:100%;flex:1}.close{height:36rpx;width:36rpx;background:#ddd;display:flex;flex-direction:row;align-items:center;justify-content:center;border-radius:50%;margin-right:20rpx}.pls-class{color:#9a9a9a}.hideLabel{padding-left:25rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/list/index.js b/node_modules/lin-ui/dist/list/index.js
new file mode 100644
index 0000000..72b360f
--- /dev/null
+++ b/node_modules/lin-ui/dist/list/index.js
@@ -0,0 +1,106 @@
+import hover from '../behaviors/hover';
+
+Component({
+  behaviors:[hover],
+  relations: {
+    '../list/index': {
+      type: 'parent', // 关联的目标节点应为子节点
+      linked() {
+        // 每次有custom-li被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+      },
+      linkChanged() {
+        // 每次有custom-li被移动后执行，target是该节点实例对象，触发在该节点moved生命周期之后
+      },
+      unlinked() {
+        // 每次有custom-li被移除时执行，target是该节点实例对象，触发在该节点detached生命周期之后
+      }
+    }
+  },
+
+  options: {
+    multipleSlots: true
+  },
+  externalClasses: [
+    'l-class',
+    'l-class-icon',
+    'l-icon-class',
+    'l-class-image',
+    'l-image-class',
+    'l-class-right',
+    'l-right-class',
+    'l-class-content',
+    'l-content-class',
+    'l-class-desc',
+    'l-desc-class'
+  ],
+  properties: {
+    icon: String,
+    iconColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    image: String,
+    title: String,
+    desc: String,
+    tagPosition: {
+      type: String,
+      value: 'left'
+    },
+    tagContent: String,
+    tagShape: {
+      type: String,
+      value: 'square'
+    },
+    tagColor: String,
+    tagPlain: Boolean,
+    badgePosition: {
+      type: String,
+      value: 'left'
+    },
+    dotBadge: Boolean,
+    badgeCount: Number,
+    badgeMaxCount: {
+      type: Number,
+      value: 99
+    },
+    badgeCountType: {
+      type: String,
+      value: 'overflow'
+    },
+    rightDesc: String,
+    gap: Number,
+    leftGap: Number,
+    rightGap: Number,
+    isLink: {
+      type: Boolean,
+      value: true,
+    },
+    linkType: {
+      type: String,
+      value: 'navigateTo'
+    },
+    url: String
+
+  },
+
+  methods: {
+    tapcell: function (e) {
+      const {
+        linkType,
+        url
+      } = e.currentTarget.dataset;
+      if (url) {
+        wx[linkType]({
+          url
+        });
+      }
+      this.triggerEvent('lintap', {
+        e
+      }, { bubbles: true, composed: true });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/list/index.json b/node_modules/lin-ui/dist/list/index.json
new file mode 100644
index 0000000..0dd8908
--- /dev/null
+++ b/node_modules/lin-ui/dist/list/index.json
@@ -0,0 +1,8 @@
+{
+    "component": true,
+    "usingComponents": {
+      "l-icon":"../icon/index",
+      "l-badge":"../badge/index",
+      "l-tag":"../tag/index"
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/list/index.wxml b/node_modules/lin-ui/dist/list/index.wxml
new file mode 100644
index 0000000..28d98fd
--- /dev/null
+++ b/node_modules/lin-ui/dist/list/index.wxml
@@ -0,0 +1,34 @@
+<view class="l-list l-class" hover-class="{{isHover?'l-list-hover':''}}" hover-start-time="20" hover-stay-time="50"  style="{{gap?'padding:0 '+gap+'rpx;':''}} {{leftGap?'padding-left:'+leftGap+'rpx':''}} {{rightGap?'padding-right:'+rightGap+'rpx':''}}" bind:tap="tapcell" data-url="{{url}}" data-link-type="{{linkType}}">
+    <!-- left -->
+    <l-badge wx:if="{{(badgeCount > 0 || dotBadge ) && badgePosition ==='left'}}" value="{{badgeCount}}" dot="{{dotBadge}}" max-count="{{badgeMaxCount}}" number-type="{{badgeCountType}}">
+        <template is="cell-left-main" data="{{image,icon,title,desc,tagContent,tagPosition,tagColor,tagShape,tagPlain}}" />
+    </l-badge>
+    <template is="cell-left-main" data="{{image,icon,title,desc,tagContent,tagPosition,tagColor,tagShape,tagPlain}}" wx:else />
+    <!-- right -->
+    <l-badge l-class="badge-right" wx:if="{{(badgeCount > 0 || dotBadge ) && badgePosition ==='right'}}" value="{{badgeCount}}" dot="{{dotBadge}}" max-count="{{badgeMaxCount}}" number-type="{{badgeCountType}}">
+        <template is="cell-right-main" data="{{rightDesc,tagContent,tagPosition,isLink,tagColor,tagShape,tagPlain}}" />
+    </l-badge>
+    <template is="cell-right-main" data="{{rightDesc,tagContent,tagPosition,isLink,tagColor,tagShape,tagPlain}}" wx:else />
+</view>
+<template name="cell-left-main">
+    <view class="left-section ">
+        <image wx:if="{{image}}" class="l-image l-class-image l-image-class" src="{{image}}" mode="aspectFit|aspectFill|widthFix" />
+        <l-icon wx:elif="{{icon}}" l-self-class="l-icon" l-class="l-class-icon l-icon-class" name="{{icon}}" size="{{iconSize}}" color="{{iconColor}}" />
+        <view class="l-text">
+            <view class="l-content l-class-content l-content-class">{{title}}</view>
+            <view class="l-desc l-class-desc l-desc-class" wx:if="{{desc}}">{{desc}}</view>
+        </view>
+        <l-tag size="mini"  shape="{{tagShape}}" bg-color="{{tagColor}}" l-class="cell-tag" wx:if="{{tagContent && tagPosition ==='left' && !tagPlain}}">{{tagContent}}</l-tag>
+        <l-tag size="mini" shape="{{tagShape}}" plain="{{tagPlain}}" font-color="{{tagColor}}" l-class="cell-tag" wx:elif="{{tagContent && tagPosition ==='left' && tagPlain}}">{{tagContent}}</l-tag>
+        <slot name="left-section"></slot>
+    </view>
+</template>
+<template name="cell-right-main">
+    <view class="right-section l-class-right l-right-class">
+        <slot name="right-section"></slot>
+        <l-tag size="mini" shape="{{tagShape}}" bg-color="{{tagColor}}" l-class="cell-tag" wx:if="{{tagContent && tagPosition ==='right' && !tagPlain }}">{{tagContent}}</l-tag>
+        <l-tag size="mini" shape="{{tagShape}}" plain="{{tagPlain}}" font-color="{{tagColor}}" l-class="cell-tag" wx:if="{{tagContent && tagPosition ==='right' && tagPlain }}">{{tagContent}}</l-tag>
+        <view class="l-text" wx:if="{{rightDesc}}">{{rightDesc}}</view>
+        <l-icon l-self-class="l-arrow" name="right" wx:if="{{isLink}}" />
+    </view>
+</template>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/list/index.wxss b/node_modules/lin-ui/dist/list/index.wxss
new file mode 100644
index 0000000..49ca7fa
--- /dev/null
+++ b/node_modules/lin-ui/dist/list/index.wxss
@@ -0,0 +1 @@
+.l-list{width:100%;min-height:88rpx;display:flex;justify-content:space-between;align-items:center;color:#333;font-size:28rpx;border-bottom:1px solid #f3f3f3;box-sizing:border-box}.l-list-hover{opacity:.8}.l-list .left-section{display:flex;justify-content:space-between;align-items:center}.l-list .left-section .l-icon{margin-right:20rpx}.l-list .left-section .l-desc{color:#d1d3d7;font-size:24rpx}.l-list .left-section .cell-tag{margin-left:20rpx}.l-list .left-section .l-image{width:44rpx;height:44rpx;margin-right:20rpx}.l-list .right-section{display:flex;justify-content:space-between;align-items:center;line-height:1.2}.l-list .right-section .l-arrow{color:#8c98ae;font-size:26rpx}.l-list .right-section .l-text{margin-right:20rpx}.l-list .right-section .cell-tag{margin-right:20rpx}.l-list .badge-right{border-radius:28rpx;min-width:28rpx;left:-20rpx;right:auto;top:0;bottom:0;transform:translate(-100%,2rpx)}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/loading/index.js b/node_modules/lin-ui/dist/loading/index.js
new file mode 100644
index 0000000..a087f10
--- /dev/null
+++ b/node_modules/lin-ui/dist/loading/index.js
@@ -0,0 +1,90 @@
+import computeOffset from '../behaviors/computeOffset';
+Component({
+  behaviors: [computeOffset],
+  externalClasses: ['l-container-class', 'l-class'],
+  options: {
+    multipleSlots: true
+  },
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    opacity:{
+      type: String,
+      value: '1'
+    },
+    bgColor: {
+      type: String,
+      value: '#fff'
+    },
+    zIndex:{
+      type: Number,
+      value: 776
+    },
+    // 类型
+    type: {
+      type: String,
+      value: 'rotate'
+    },
+    // 动画颜色
+    color: {
+      type: String,
+      value: ''
+    },
+    // loading 动画大小
+    size: {
+      type: String,
+      value: 'medium',
+    },
+    // 自定义
+    custom: Boolean,
+    // 全屏模式
+    fullScreen: Boolean
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showLoading = (options) => {
+        const {
+          custom = false,
+          fullScreen = false,
+          color = '',
+          type = 'rotate',
+          size = 'medium',
+          opacity = '1'
+        } = { ...options };
+        this.setData({
+          custom,
+          fullScreen,
+          color,
+          type,
+          size,
+          opacity,
+          show: true
+        });
+      };
+      wx.lin.hideLoading = () => {
+        this.setData({
+          show: false
+        });
+      };
+    },
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+  }
+});
diff --git a/node_modules/lin-ui/dist/loading/index.json b/node_modules/lin-ui/dist/loading/index.json
new file mode 100644
index 0000000..4a42478
--- /dev/null
+++ b/node_modules/lin-ui/dist/loading/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/loading/index.wxml b/node_modules/lin-ui/dist/loading/index.wxml
new file mode 100644
index 0000000..4de3bd5
--- /dev/null
+++ b/node_modules/lin-ui/dist/loading/index.wxml
@@ -0,0 +1,77 @@
+<view class="container-loading l-container-class {{fullScreen ? 'content': ''}}" wx:if="{{show && fullScreen}}" style="background:{{bgColor}};opacity:{{opacity}};z-index:{{zIndex}}" catchtouchmove="doNothingMove">
+  <view wx:if="{{show}}"
+        class="l-class {{type + '-spinner'}} {{type=='change'||custom?'':'spinner-' + type + '-' + size}}"
+        style="margin-bottom:{{distance}}px">
+    <block wx:if="{{custom}}">
+      <slot />
+    </block>
+    <block wx:else>
+      <view wx:if="{{type=='flash' || type=='change' || type=='flip'}}"  style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce1'}}   {{'spinner-'+ type + '-' + size}}"></view>
+      <view wx:if="{{type=='flash' || type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce2'}} {{'spinner-'+ type + '-' + size}}"></view>
+      <view wx:if="{{type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce3'}}   {{'spinner-'+ type + '-' + size}}"></view>
+      <view class="spinner-circle {{'spinner-circle-' + size}}" wx:if="{{ type === 'circle'}}">
+        <view class="spinner-container container1">
+          <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+        </view>
+        <view class="spinner-container container2">
+          <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+        </view>
+        <view class="spinner-container container3">
+          <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+          <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+        </view>
+      </view>
+      <view wx:if="{{ type === 'rotate'}}">
+        <view class="rotate rotate-{{size}}" style="border-color: {{color}};"></view>
+      </view>
+    </block>
+  </view>
+</view>
+<view wx:if="{{!fullScreen}}" class="l-container-class" style="position: relative">
+    <slot name="content"/>
+    <view wx:if="{{show}}" class="inner-loading-container" style="background:{{bgColor}};opacity:{{opacity}};z-index:{{zIndex}}"></view>
+    <view wx:if="{{show}}" class="l-class loading-icon-container" style="z-index:{{zIndex + 1}}">
+        <view class="{{type + '-spinner'}} {{type=='change'||custom?'':'spinner-' + type + '-' + size}}">
+            <block wx:if="{{custom}}">
+                <slot />
+            </block>
+            <block wx:else>
+                <view wx:if="{{type=='flash' || type=='change' || type=='flip'}}"  style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce1'}}   {{'spinner-'+ type + '-' + size}}"></view>
+                <view wx:if="{{type=='flash' || type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce2'}} {{'spinner-'+ type + '-' + size}}"></view>
+                <view wx:if="{{type=='change'}}" style="{{color?'background-color:'+color:''}}" class="{{type+'-bounce3'}}   {{'spinner-'+ type + '-' + size}}"></view>
+                <view wx:if="{{ type === 'circle'}}" class="spinner-circle {{'spinner-circle-' + size}}">
+                    <view class="spinner-container container1">
+                        <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+                    </view>
+                    <view class="spinner-container container2">
+                        <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+                    </view>
+                    <view class="spinner-container container3">
+                        <view class="circle1  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle2  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle3  {{type + '-' + size}}" style="background: {{color}}"></view>
+                        <view class="circle4  {{type + '-' + size}}" style="background: {{color}}"></view>
+                    </view>
+                </view>
+                <view wx:if="{{ type === 'rotate'}}">
+                    <view class="rotate rotate-{{size}}" style="border-color: {{color}};"></view>
+                </view>
+            </block>
+        </view>
+    </view>
+</view>
+
diff --git a/node_modules/lin-ui/dist/loading/index.wxss b/node_modules/lin-ui/dist/loading/index.wxss
new file mode 100644
index 0000000..9b45683
--- /dev/null
+++ b/node_modules/lin-ui/dist/loading/index.wxss
@@ -0,0 +1 @@
+.container-loading{position:fixed;height:100%;width:100%;top:0;left:0}.content{display:flex;flex-direction:column;align-items:center;justify-content:center;background:#fff;height:100%}.spinner-flash-medium{width:60rpx;height:60rpx}.spinner-flash-mini{width:40rpx;height:40rpx}.spinner-flash-large{width:80rpx;height:80rpx}.spinner-flip-medium{width:60rpx;height:60rpx}.spinner-flip-mini{width:40rpx;height:40rpx}.spinner-flip-large{width:80rpx;height:80rpx}.spinner-change-medium{width:30rpx;height:30rpx}.spinner-change-mini{width:20rpx;height:20rpx}.spinner-change-large{width:50rpx;height:50rpx}.flash-spinner{position:relative}.flash-bounce1,.flash-bounce2{width:100%;height:100%;border-radius:50%;background-color:#3963bc;opacity:.6;position:absolute;top:0;left:0;-webkit-animation:bounce 2s infinite ease-in-out;animation:bounce 2s infinite ease-in-out}.flash-bounce2{-webkit-animation-delay:-1s;animation-delay:-1s}@-webkit-keyframes bounce{0%,100%{-webkit-transform:scale(0)}50%{-webkit-transform:scale(1)}}@keyframes bounce{0%,100%{transform:scale(0);-webkit-transform:scale(0)}50%{transform:scale(1);-webkit-transform:scale(1)}}.flip-bounce1{background-color:#3963bc;-webkit-animation:rotateplane 1.2s infinite ease-in-out;animation:rotateplane 1.2s infinite ease-in-out}@-webkit-keyframes rotateplane{0%{-webkit-transform:perspective(120px)}50%{-webkit-transform:perspective(120px) rotateY(180deg)}100%{-webkit-transform:perspective(120px) rotateY(180deg) rotateX(180deg)}}@keyframes rotateplane{0%{transform:perspective(120px) rotateX(0) rotateY(0);-webkit-transform:perspective(120px) rotateX(0) rotateY(0)}50%{transform:perspective(120px) rotateX(-180.1deg) rotateY(0);-webkit-transform:perspective(120px) rotateX(-180.1deg) rotateY(0)}100%{transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg);-webkit-transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)}}.change-spinner{width:240rpx;text-align:center}.change-bounce1{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.32s;animation-delay:-.32s}.change-bounce2{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.16s;animation-delay:-.16s}.change-bounce3{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}@-webkit-keyframes bouncedelay{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes bouncedelay{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}.spinner-circle{position:relative}.spinner-circle-mini{width:40rpx;height:40rpx}.spinner-circle-medium{width:60rpx;height:60rpx}.spinner-circle-large{width:70rpx;height:70rpx}.container1>view,.container2>view,.container3>view{border-radius:50%;position:absolute;background-color:#3963bc;-webkit-animation:bouncedelay4 1.2s infinite ease-in-out;animation:bouncedelay4 1.2s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}.circle-mini{width:12rpx;height:12rpx}.circle-medium{width:15rpx;height:15rpx}.circle-large{width:20rpx;height:20rpx}.spinner-circle .spinner-container{position:absolute;width:100%;height:100%}.container2{-webkit-transform:rotateZ(45deg);transform:rotateZ(45deg)}.container3{-webkit-transform:rotateZ(90deg);transform:rotateZ(90deg)}.circle1{top:0;left:0}.circle2{top:0;right:0}.circle3{right:0;bottom:0}.circle4{left:0;bottom:0}.container2 .circle1{-webkit-animation-delay:-1.1s;animation-delay:-1.1s}.container3 .circle1{-webkit-animation-delay:-1s;animation-delay:-1s}.container1 .circle2{-webkit-animation-delay:-.9s;animation-delay:-.9s}.container2 .circle2{-webkit-animation-delay:-.8s;animation-delay:-.8s}.container3 .circle2{-webkit-animation-delay:-.7s;animation-delay:-.7s}.container1 .circle3{-webkit-animation-delay:-.6s;animation-delay:-.6s}.container2 .circle3{-webkit-animation-delay:-.5s;animation-delay:-.5s}.container3 .circle3{-webkit-animation-delay:-.4s;animation-delay:-.4s}.container1 .circle4{-webkit-animation-delay:-.3s;animation-delay:-.3s}.container2 .circle4{-webkit-animation-delay:-.2s;animation-delay:-.2s}.container3 .circle4{-webkit-animation-delay:-.1s;animation-delay:-.1s}@-webkit-keyframes bouncedelay4{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes bouncedelay4{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}.rotate{border-radius:50%;animation:rotate .7s linear infinite}.rotate-mini{height:40rpx;width:40rpx;border-top:6rpx solid #3963bc;border-right:6rpx solid transparent!important;border-bottom:6rpx solid #3963bc;border-left:6rpx solid #3963bc}.rotate-medium{height:50rpx;width:50rpx;border-top:6rpx solid #3963bc;border-right:6rpx solid transparent!important;border-bottom:6rpx solid #3963bc;border-left:6rpx solid #3963bc}.rotate-large{height:70rpx;width:70rpx;border-top:8rpx solid #3963bc;border-right:8rpx solid transparent!important;border-bottom:8rpx solid #3963bc;border-left:8rpx solid #3963bc}@keyframes rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}.inner-loading-container{position:absolute;width:100%;left:0;height:100%;top:0}.loading-icon-container{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/loadmore/index.js b/node_modules/lin-ui/dist/loadmore/index.js
new file mode 100644
index 0000000..157225f
--- /dev/null
+++ b/node_modules/lin-ui/dist/loadmore/index.js
@@ -0,0 +1,80 @@
+Component({
+  externalClasses: ['l-class','l-loading-class','l-end-class','l-line-class'],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    show: Boolean,
+    custom: Boolean,
+    line: Boolean,
+    color: String,
+    size: {
+      type: String,
+      value: '28'
+    },
+    type: {
+      type: String,
+      value: 'loading'
+    },
+    endText: {
+      type: String,
+      value: '我是有底线的~'
+    },
+    loadingText: {
+      type: String,
+      value: '加载中...'
+    }
+  },
+
+  data: {
+
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showLoadmore = (options) => {
+        const {
+          custom = false,
+          line = false,
+          color = '',
+          size = '28',
+          type = 'loading',
+          endText = '我是有底线的',
+          loadingText = '加载中...'
+        } = { ...options };
+        this.setData({
+          custom,
+          line,
+          color,
+          size,
+          type,
+          endText,
+          loadingText,
+          show: true
+        });
+      };
+      wx.lin.hideLoadmore = () => {
+        this.setData({
+          show: false
+        });
+      };
+    },
+    onLoadmore() {
+      this.triggerEvent('lintap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/loadmore/index.json b/node_modules/lin-ui/dist/loadmore/index.json
new file mode 100644
index 0000000..270874f
--- /dev/null
+++ b/node_modules/lin-ui/dist/loadmore/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-loading":"../loading/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/loadmore/index.wxml b/node_modules/lin-ui/dist/loadmore/index.wxml
new file mode 100644
index 0000000..d702f4e
--- /dev/null
+++ b/node_modules/lin-ui/dist/loadmore/index.wxml
@@ -0,0 +1,19 @@
+<!-- 内容插槽 -->
+<slot name="content" />
+<view bindtap="onLoadmore" wx:if="{{show}}">
+  <view wx:if="{{custom && type==='end'}}">
+    <slot name="end" />
+  </view>
+  <view wx:elif="{{custom && type==='loading'}}">
+    <slot name="loading" />
+  </view>
+  <view class="loading l-class" wx:else>
+    <view class="line" 
+          style="{{'background-color:'+color}}" 
+          wx:if="{{line}}"></view>
+    <view class="rotate" style="border-color: {{color}};width:{{size}}rpx;height:{{size}}rpx" wx:if="{{type=='loading'}}"></view>
+    <view class="loading-text l-loading-class" style="color:{{color}};font-size:{{size}}rpx" wx:if="{{type=='loading'}}">{{loadingText}}</view>
+    <view class="loading-text l-end-class" style="{{'color:'+color}};font-size:{{size}}rpx" wx:if="{{type=='end'}}">{{endText}}</view>
+    <view class="line l-line-class" style="{{'background-color:'+color}}" wx:if="{{line}}"></view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/loadmore/index.wxss b/node_modules/lin-ui/dist/loadmore/index.wxss
new file mode 100644
index 0000000..50d25b9
--- /dev/null
+++ b/node_modules/lin-ui/dist/loadmore/index.wxss
@@ -0,0 +1 @@
+.loadmore-container{display:flex;flex-direction:column;background-color:transparent}.loading{display:flex;flex-direction:row;width:100%;height:72rpx;align-items:center;justify-content:center;background-color:transparent}.loading view:nth-child(2){margin-left:36rpx}.loading-text{color:#bbb;font-size:28rpx;margin:0 12rpx}.line{width:80rpx;height:2rpx;background-color:#d1d3d7}.rotate{border-radius:50%;animation:rotate .7s linear infinite;height:28rpx;width:28rpx;border-top:4rpx solid #bbb;border-right:4rpx solid transparent!important;border-bottom:4rpx solid #bbb;border-left:4rpx solid #bbb;margin-left:12rpx}@keyframes rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/mask/index.js b/node_modules/lin-ui/dist/mask/index.js
new file mode 100644
index 0000000..ff93938
--- /dev/null
+++ b/node_modules/lin-ui/dist/mask/index.js
@@ -0,0 +1,84 @@
+import zIndex from '../behaviors/zIndex';
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [zIndex],
+  externalClasses: ['l-class','l-mask-class'],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 不透明度
+    opacity: {
+      type: [String, Number],
+      value: .4
+    },
+    // mask的z-index值
+    zIndex: {
+      type: Number,
+      value: 99,
+
+    },
+    // slot是否居中
+    center: {
+      type: Boolean,
+      value: false,
+    },
+    // 锁定
+    locked: {
+      type: Boolean,
+      value: true
+    },
+    // 全屏幕模式 暂不可用
+    fullScreen: {
+      type: String,
+      value: ''
+    },
+    // 导航栏颜色
+    NavColor: {
+      type: String,
+      value: ''
+    },
+
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+
+    // 点击事件
+    onMaskTap() {
+
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+
+      if (this.data.locked !== true) {
+        this.setData({
+          // fullScreen: 'hide',
+          show: false,
+        });
+      }
+      this.triggerEvent('lintap', detail, option);
+    }
+  },
+
+  attached: function () {
+  },
+
+
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/mask/index.json b/node_modules/lin-ui/dist/mask/index.json
new file mode 100644
index 0000000..4a42478
--- /dev/null
+++ b/node_modules/lin-ui/dist/mask/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/mask/index.wxml b/node_modules/lin-ui/dist/mask/index.wxml
new file mode 100644
index 0000000..18383c1
--- /dev/null
+++ b/node_modules/lin-ui/dist/mask/index.wxml
@@ -0,0 +1,13 @@
+<!-- mask.wxml -->
+<view
+  class="container-mask  {{center? 'center' : ''}} l-class"
+  hidden="{{ show? '' :  'hidden'}}"
+  catchtouchmove="doNothingMove"
+  catchtap="onMaskTap"
+  style="z-index:{{zIndex}}; {{show? 'background: rgba(0,0,0,' + opacity+ ')' :  ''}}"
+>
+  <!-- <view class="mask-bg" catchtap="onMaskTap" ></view> -->
+  <view class="mask-content l-mask-class" >
+    <slot></slot>
+  </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/mask/index.wxss b/node_modules/lin-ui/dist/mask/index.wxss
new file mode 100644
index 0000000..f2dbe42
--- /dev/null
+++ b/node_modules/lin-ui/dist/mask/index.wxss
@@ -0,0 +1 @@
+.container-mask{position:fixed;top:0;left:0;width:100%;height:100%;transition:all .3s}.mask-bg{height:100%;width:100%;background:#fff;z-index:99}.mask-content{display:inline-block;z-index:101;overflow:hidden}.center{display:flex;flex-direction:row;align-items:center;justify-content:center}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/message/index.js b/node_modules/lin-ui/dist/message/index.js
new file mode 100644
index 0000000..1bbca43
--- /dev/null
+++ b/node_modules/lin-ui/dist/message/index.js
@@ -0,0 +1,82 @@
+import zIndex from '../behaviors/zIndex';
+import watchShow from '../behaviors/watchShow';
+Component({
+  behaviors: [zIndex, watchShow],
+  externalClasses: ['l-class', 'l-image-class'],
+  properties: {
+    show: Boolean,
+    icon: String,
+    iconColor: {
+      type: String,
+      value: '#fff'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    image: String,
+    content: String,
+    type: {
+      type: String,
+      value: 'primary'
+    },
+    duration: {
+      type: Number,
+      value: 1500
+    },
+    openApi: {
+      type: Boolean,
+      value: true
+    }
+  },
+
+  data: {
+    status: false
+  },
+
+  // 解决 addListener undefined 的错误
+  observers: {
+    'icon': function () {}
+  },
+
+  attached() {
+    this.initMessage();
+  },
+
+  pageLifetimes: {
+    show() {
+      this.initMessage();
+    },
+  },
+
+  methods: {
+    initMessage() {
+      wx.lin = wx.lin || {};
+      wx.lin.showMessage = (options = {}) => {
+        const {
+          content = '',
+          icon = '',
+          image = '',
+          type = 'primary',
+          duration = 1500,
+          success = null
+        } = options;
+        this.data.success = success;
+        this.setData({
+          content,
+          icon,
+          image,
+          duration,
+          type
+        });
+        this.changeStatus();
+        return this;
+      };
+      wx.lin.hideMessage = ()=>{
+        this.setData({
+          status: false
+        });
+      };
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/message/index.json b/node_modules/lin-ui/dist/message/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/node_modules/lin-ui/dist/message/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/message/index.wxml b/node_modules/lin-ui/dist/message/index.wxml
new file mode 100644
index 0000000..da126e4
--- /dev/null
+++ b/node_modules/lin-ui/dist/message/index.wxml
@@ -0,0 +1,10 @@
+<view class="l-message l-class {{'l-message-'+type}} {{status?'l-message-show':''}}" style="z-index:{{zIndex}}">
+  <block wx:if="{{status}}">
+    <view style="margin-right:15rpx">
+      <l-icon name="{{icon?icon:type}}" size="{{iconSize}}" color="{{type=='warning'?'#333':iconColor}}" />
+    </view>
+    <image wx:if="{{image}}" src="{{image}}" class="l-message-image l-class-image"/>
+    {{content}}
+    <slot /> 
+  </block>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/message/index.wxss b/node_modules/lin-ui/dist/message/index.wxss
new file mode 100644
index 0000000..4d1308f
--- /dev/null
+++ b/node_modules/lin-ui/dist/message/index.wxss
@@ -0,0 +1 @@
+.l-message{width:750rpx;height:72rpx;border-radius:0rpx 0rpx 16rpx 16rpx;display:flex;justify-content:center;align-items:center;position:fixed;top:0rpx;left:50%;font-size:28rpx;color:#fff;opacity:0;box-shadow:0rpx 6rpx 16rpx 0rpx rgba(217,212,191,.5);transform:translateX(-50%) translateZ(0) translateY(-100%);transition:all .4s ease-in-out}.l-message-success{background-color:#34bfa3}.l-message-error{background-color:#f4516c}.l-message-warning{background-color:#ffe57f;color:#333}.l-message-primary{background-color:#3963bc}.l-message-show{transform:translateX(-50%) translateZ(0) translateY(0);opacity:1}.l-message-image{width:30rpx;height:30rpx;margin-right:15rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/notice-bar/index.js b/node_modules/lin-ui/dist/notice-bar/index.js
new file mode 100644
index 0000000..f6f5d2a
--- /dev/null
+++ b/node_modules/lin-ui/dist/notice-bar/index.js
@@ -0,0 +1,152 @@
+Component({
+  externalClasses: ['l-class'],
+
+  properties: {
+    type: {
+      type: String,
+      value: 'still'
+    },
+    // 轮播数组
+    swipArr: Array,
+    // 前置图标
+    frontIconName: {
+      type: String,
+      value: ''
+    },
+    frontIconSize: {
+      type: Number,
+      value: 28
+    },
+    frontIconColor: {
+      type: String,
+      value: '#3683D6'
+    },
+    endIconName: {
+      type: String,
+      value: ''
+    },
+    endIconSize: {
+      type: Number,
+      value: 28
+    },
+    endIconColor: {
+      type: String,
+      value: '#3683D6'
+    },
+    // 背景颜色
+    backgroundcolor: {
+      type: String,
+      value: '#DFEDFF'
+    },
+    // 字体及图标颜色
+    color: {
+      type: String,
+      value: '#3683D6'
+    },
+    // 滚动速度
+    speed: {
+      type: Number,
+      value: 1500
+    },
+    show: {
+      type: Boolean,
+      value: true
+    },
+    close: {
+      type: Boolean,
+      value: false
+    }
+  },
+
+  data: {
+    wrapWidth: 0,
+    width: 0,
+    duration: 0,
+    animation: null,
+    timer: null,
+  },
+
+  detached() {
+    this.destroyTimer();
+  },
+
+  ready() {
+    if (this.properties.type == 'roll' && this.properties.show) {
+      this.initAnimation();
+    }
+  },
+
+  methods: {
+    initAnimation() {
+      wx.createSelectorQuery().in(this).select('.l-noticebar-content-wrap').boundingClientRect((wrapRect) => {
+        wx.createSelectorQuery().in(this).select('.l-noticebar-content').boundingClientRect((rect) => {
+          const duration = rect.width / 40 * this.data.speed;
+          const animation = wx.createAnimation({
+            duration: duration,
+            timingFunction: 'linear',
+          });
+          this.setData({
+            wrapWidth: wrapRect.width,
+            width: rect.width,
+            duration: duration,
+            animation: animation
+          }, () => {
+            this.startAnimation();
+          });
+        }).exec();
+
+      }).exec();
+    },
+    startAnimation() {
+      //reset
+      if (this.data.animation.option.transition.duration !== 0) {
+        this.data.animation.option.transition.duration = 0;
+        const resetAnimation = this.data.animation.translateX(this.data.wrapWidth).step();
+        this.setData({
+          animationData: resetAnimation.export()
+        });
+      }
+      this.data.animation.option.transition.duration = this.data.duration;
+      const animationData = this.data.animation.translateX(-this.data.width).step();
+      setTimeout(() => {
+        this.setData({
+          animationData: animationData.export()
+        });
+      }, 100);
+      const timer = setTimeout(() => {
+        this.startAnimation();
+      }, this.data.duration);
+      this.setData({
+        timer,
+      });
+    },
+    destroyTimer() {
+      if (this.data.timer) {
+        clearTimeout(this.data.timer);
+      }
+    },
+    handleTap() {
+      this.triggerEvent('lintap',{},{ bubbles: true, composed: true });
+      this.setData({
+        timer: null
+      });
+    },
+    onSwip(e) {
+      this.triggerEvent('lintap', {
+        ...e.currentTarget.dataset
+      },{ bubbles: true, composed: true });
+    },
+    onIconTap(){
+      this.triggerEvent('linicontap',{},{ bubbles: true, composed: true });
+      this.setData({
+        timer: null
+      });
+    },
+    onClose() {
+      this.setData({
+        timer: null,
+        show: false
+      });
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/notice-bar/index.json b/node_modules/lin-ui/dist/notice-bar/index.json
new file mode 100644
index 0000000..b5e3f56
--- /dev/null
+++ b/node_modules/lin-ui/dist/notice-bar/index.json
@@ -0,0 +1,8 @@
+{
+    "component": true,
+    "usingComponents":
+    {
+        "l-icon": "../icon/index"
+    }
+}
+
diff --git a/node_modules/lin-ui/dist/notice-bar/index.wxml b/node_modules/lin-ui/dist/notice-bar/index.wxml
new file mode 100644
index 0000000..33df6f2
--- /dev/null
+++ b/node_modules/lin-ui/dist/notice-bar/index.wxml
@@ -0,0 +1,17 @@
+<view wx:if="{{ show }}" class="l-class l-noticebar" style="color: {{ color }}; background-color: {{ backgroundcolor }}">
+  <l-icon wx:if="{{ frontIconName }}" size="{{frontIconSize}}" color="{{frontIconColor}}" name="{{ frontIconName }}" class="l-noticebar-icon" />
+  <swiper autoplay vertical interval="{{4*speed}}" class="l-noticebar-content-wrap" wx:if="{{type=='swip'}}">
+    <block wx:for="{{swipArr}}" wx:key="swip">
+      <swiper-item data-index="{{index}}" bindtap="onSwip">
+        {{item}}
+      </swiper-item>
+    </block>
+  </swiper>
+  <view class="l-noticebar-content-wrap" wx:else>
+    <view class="l-noticebar-content"  bindtap="handleTap" animation="{{ animationData }}">
+      <slot></slot>
+    </view>
+  </view>
+  <l-icon wx:if="{{ endIconName && !close }}" size="{{endIconSize}}" color="{{endIconColor}}" class="l-noticebar-operation" name="{{ endIconName }}" bindtap="onIconTap"  />
+  <l-icon wx:if="{{close}}" class="l-noticebar-operation" name="close" size="{{endIconSize}}" color="{{endIconColor}}" bindtap="onClose"/>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/notice-bar/index.wxss b/node_modules/lin-ui/dist/notice-bar/index.wxss
new file mode 100644
index 0000000..7180b0e
--- /dev/null
+++ b/node_modules/lin-ui/dist/notice-bar/index.wxss
@@ -0,0 +1 @@
+.l-noticebar{display:flex;height:72rpx;width:750rpx;line-height:72rpx;font-size:28rpx;color:#3963bc;background-color:#dfedff;overflow:hidden;box-shadow:0 2px 5px 0 rgba(218,224,233,.4);border-radius:0 0 8px 8px}.l-noticebar-icon{display:flex;margin-left:20rpx;margin-right:18rpx;align-items:center}.l-noticebar-icon+view{margin-left:5rpx}.l-noticebar-operation{display:flex;margin-right:16rpx;margin-left:8rpx;align-items:center}.l-noticebar-content-wrap{display:flex;margin-left:5rpx;flex:1;height:72rpx;position:relative;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.l-noticebar-content-wrap .l-noticebar-content{position:absolute;transition-duration:20s}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/popup/index.js b/node_modules/lin-ui/dist/popup/index.js
new file mode 100644
index 0000000..6c21518
--- /dev/null
+++ b/node_modules/lin-ui/dist/popup/index.js
@@ -0,0 +1,117 @@
+import zIndex from '../behaviors/zIndex';
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [zIndex],
+  externalClasses: ['l-bg-class'],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 动画效果的显示和隐藏
+    animation: {
+      type: Boolean,
+      value: true
+    },
+    // slot的位置
+    contentAlign: {
+      type: String,
+      value: 'center'
+    },
+    // 锁定
+    locked: {
+      type: Boolean,
+      value: false
+    }
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    status: 'show'
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showPopup = (options) => {
+        const {
+          zIndex = 99,
+          animation = true,
+          contentAlign = 'center',
+          locked = false
+        } = { ...options };
+        this.setData({
+          zIndex,
+          animation,
+          contentAlign,
+          locked,
+          show: true
+        });
+      };
+      wx.lin.hidePopup = () => {
+        this.setData({
+          status: 'hide'
+        });
+        setTimeout(()=>{
+          this.setData({
+            show: false,
+            status: 'show'
+          });
+        },300);
+      };
+    },
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+    doNothingTap() {
+      // do nathing
+    },
+
+    // 点击事件
+    onPupopTap() {
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+      if (this.data.locked !== true) {
+        if(!this.data.show) {
+          this.setData({
+            show: true,
+            status: 'show'
+          });
+        } else {
+          this.setData({
+            status: 'hide'
+          });
+          setTimeout(()=>{
+            this.setData({
+              show: false,
+              status: 'show'
+            });
+          },300);
+        }
+        // this.setData({
+        //   show: !this.data.show
+        // });
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/popup/index.json b/node_modules/lin-ui/dist/popup/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/node_modules/lin-ui/dist/popup/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/popup/index.wxml b/node_modules/lin-ui/dist/popup/index.wxml
new file mode 100644
index 0000000..6ba2c25
--- /dev/null
+++ b/node_modules/lin-ui/dist/popup/index.wxml
@@ -0,0 +1,11 @@
+<!-- popup.wxml -->
+<view class='container-popup {{ show ? "popup-show" : "" }}   {{ "l-popup-" + contentAlign }}  ' style="z-index:{{zIndex}}; " catchtouchmove="doNothingMove">
+  <view class='container-bg l-bg-class'></view>
+  <view
+    wx:if="{{show}}"
+    class="popup-content {{ show ? contentAlign : ''}}   popup-fade-{{contentAlign}}-active-{{animation ? status:''}}" catchtap='onPupopTap'>
+    <view catchtap="doNothingTap">
+      <slot></slot>
+    </view>
+  </view>
+</view>
diff --git a/node_modules/lin-ui/dist/popup/index.wxss b/node_modules/lin-ui/dist/popup/index.wxss
new file mode 100644
index 0000000..616b7e5
--- /dev/null
+++ b/node_modules/lin-ui/dist/popup/index.wxss
@@ -0,0 +1 @@
+.container-popup{visibility:hidden;position:fixed;top:0;left:0;right:0;bottom:0}.popup-show{visibility:visible}.popup-show .container-bg{display:block;opacity:1}.container-bg{opacity:0;position:fixed;top:0;left:0;right:0;bottom:0;z-index:6;background:rgba(0,0,0,.4);transition:all .3s ease-in-out}.popup-bg{height:100%;width:100%;position:absolute;z-index:90}.popup-content{position:absolute;z-index:100;width:100%;max-width:100%;height:100%}.center{display:flex;height:100%;width:100%;flex-direction:row;align-items:center;justify-content:center}.left{display:flex;flex-direction:row;height:100%}.right{display:flex;flex-direction:row;justify-content:flex-end;height:100%}.bottom{display:flex;flex-direction:column-reverse;width:100%}.popup-fade-center-active-show{animation:popup-center-fadein .4s}.popup-fade-center-active-hide{animation:popup-center-fadeout .4s}.popup-fade-top-active-show{animation:popup-top-fadein .3s ease-in-out}.popup-fade-top-active-hide{animation:popup-top-fadeout .3s ease-in-out}.popup-fade-right-active-show{animation:popup-right-fadein .3s ease-in-out}.popup-fade-right-active-hide{animation:popup-right-fadeout .3s ease-in-out}.popup-fade-left-active-show{animation:popup-left-fadein .3s ease-in-out}.popup-fade-left-active-hide{animation:popup-left-fadeout .3s ease-in-out}.popup-fade-bottom-active-show{animation:popup-bottom-fadein .3s ease-in-out}.popup-fade-bottom-active-hide{animation:popup-bottom-fadeout .3s ease-in-out}@keyframes popup-center-fadein{0%{transform:scale(.8);opacity:0}50%{transform:scale(1.1)}100%{transform:scale(1);opacity:1}}@keyframes popup-center-fadeout{0%{transform:scale(1);opacity:1}50%{transform:scale(1.1)}100%{transform:scale(.8);opacity:0}}@keyframes popup-top-fadein{0%{transform:translate3d(0,-100%,0);opacity:.1}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes popup-top-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(0,-100%,0);opacity:.1}}@keyframes popup-left-fadein{0%{transform:translate3d(-100%,0,0);opacity:.1}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes popup-left-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(-100%,0,0);opacity:.1}}@keyframes popup-right-fadein{0%{transform:translate3d(100%,0,0);opacity:.1}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes popup-right-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(100%,0,0);opacity:.1}}@keyframes popup-bottom-fadeout{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(0,100%,0);opacity:.1}}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/price/index.js b/node_modules/lin-ui/dist/price/index.js
new file mode 100644
index 0000000..6ceadff
--- /dev/null
+++ b/node_modules/lin-ui/dist/price/index.js
@@ -0,0 +1,78 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-deleted-class', 'l-unit-class', 'l-value-class', 'l-class'],
+  properties: {
+    unit: {
+      type: String,
+      value: '￥'
+    },
+    size: {
+      type: String,
+      value: '28'
+    },
+    color: {
+      type: String,
+      value: '#3963BC'
+    },
+    bold: {
+      type: String,
+      value: '500'
+    },
+    unitColor: String,
+    unitSize: String,
+    unitBold: String,
+    value: {
+      type: String,
+      value: '0.00'
+    },
+    mode: {
+      type: String,
+      value: 'number'
+    },
+    valueColor: String,
+    valueSize: String,
+    valueBold: String,
+    deleted: Boolean,
+    delColor: String,
+    reserveDigit: {
+      type: Number,
+      value: 2
+    },
+    autofix: Boolean
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  observers: {
+    'value': function () {
+      this.reserveNumber();
+    }
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    reserveNumber() {
+      const countToNumber = Number(this.data.value);
+      const isText = isNaN(Number(countToNumber)) || (this.data.mode === 'text');
+      if (!isText && this.data.autofix) {
+        const result = countToNumber.toFixed(this.data.reserveDigit);
+        this.setData({
+          result
+        });
+      } else {
+        this.setData({
+          result: this.data.value
+        });
+      }
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/price/index.json b/node_modules/lin-ui/dist/price/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/node_modules/lin-ui/dist/price/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/price/index.wxml b/node_modules/lin-ui/dist/price/index.wxml
new file mode 100644
index 0000000..8f5f00e
--- /dev/null
+++ b/node_modules/lin-ui/dist/price/index.wxml
@@ -0,0 +1,6 @@
+<view class='price-container l-class {{deleted ? "price-del l-deleted-class" : ""}}' style='color: {{delColor?delColor:color}}'>
+  <!-- unit -->
+  <text class="l-unit-class" style="color: {{unitColor?unitColor:color}}; font-size: {{unitSize?unitSize:size}}rpx; font-weight: {{unitBold?unitBold:bold}}">{{unit}}</text>
+  <!-- count -->
+  <text class="l-value-class" style="color: {{valueColor?valueColor:color}}; font-size: {{valueSize?valueSize:size}}rpx; font-weight: {{valueBold?valueBold:bold}}">{{result}}</text>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/price/index.wxss b/node_modules/lin-ui/dist/price/index.wxss
new file mode 100644
index 0000000..892dfbd
--- /dev/null
+++ b/node_modules/lin-ui/dist/price/index.wxss
@@ -0,0 +1 @@
+.price-del{text-decoration:line-through!important}.price-container{display:inline-block;text-align:center;color:#3963bc;font-size:28rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/radio-group/index.js b/node_modules/lin-ui/dist/radio-group/index.js
new file mode 100644
index 0000000..aaf20f8
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio-group/index.js
@@ -0,0 +1,101 @@
+Component({
+  externalClasses: ['l-class', 'l-error-text', 'l-error-text-class'],
+  behaviors: ['wx://form-field'],
+  relations: {
+    '../radio/index': {
+      type: 'child',
+      linked() {
+        // const currentLength = this.add();
+        // if (currentLength === this.properties.length) {
+        this.init();
+        // }
+      },
+      linkChanged() {
+      },
+      unlinked() {
+        this.init();
+      }
+    }
+  },
+  properties: {
+    current: {
+      type: String
+    },
+    noneChecked: {
+      type: Boolean,
+      value: true
+    },
+    placement: {
+      type: String,
+      value: 'column', //column row
+    },
+  },
+  data: {
+    currentLength: 0
+  },
+
+  methods: {
+    // add() {
+    //   if (this.properties.length <= 0) {
+    //     throw new Error('为提高性能，请主动设置radio-group的length属性');
+    //   }
+    //   return this.data.currentLength += 1;
+    // },
+    // reduce() {
+    //   this.length -= 1;
+    //   return this.data.currentLength -= 1;
+    // },
+
+    checkedKeyRepeat(items) {
+      let keys = items.map(item => {
+        return item.data.key;
+      });
+      const repeat = this.isRepeat(keys);
+      if (repeat !== false) {
+        throw new Error(`keys有重复元素, radio的key属性不能重复：${repeat}`);
+      }
+    },
+
+    isRepeat(arr) {
+      let hash = {};
+      for (let i in arr) {
+        if (hash[arr[i]]) //hash 哈希
+          return arr[i];
+        hash[arr[i]] = true;
+      }
+      return false;
+    },
+
+    init() {
+      const items = this.getRelationNodes('../radio/index');
+      this.checkedKeyRepeat(items);
+      this.onChangeHandle(items);
+    },
+
+    onChangeHandle(items) {
+      items.forEach((item) => {
+        let checked = this.properties.current == item.data.key;
+        item.setChecked(checked, item.data.key);
+      });
+    },
+
+    onEmitEventHandle(currentItem, select) {
+      this.properties.current = select?currentItem.key:null;
+      const items = this.getRelationNodes('../radio/index');
+      this.onChangeHandle(items);
+      // currentItem.currentKey = this.properties.current
+      Object.assign(currentItem, {
+        currentKey: this.properties.current
+      });
+      this.triggerEvent('linchange', currentItem, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  },
+  observers: {
+    'current': function() {
+      this.init();
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/radio-group/index.json b/node_modules/lin-ui/dist/radio-group/index.json
new file mode 100644
index 0000000..9b5b1c5
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio-group/index.json
@@ -0,0 +1,7 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-error-tip": "../error-tip/index",
+        "l-radio":"../radio/index"
+    }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/radio-group/index.wxml b/node_modules/lin-ui/dist/radio-group/index.wxml
new file mode 100644
index 0000000..f22eb96
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio-group/index.wxml
@@ -0,0 +1,4 @@
+<view class="l-class radio-group radio-group-{{placement}}">
+    <slot></slot>
+</view>
+<l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
diff --git a/node_modules/lin-ui/dist/radio-group/index.wxss b/node_modules/lin-ui/dist/radio-group/index.wxss
new file mode 100644
index 0000000..ab2973e
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio-group/index.wxss
@@ -0,0 +1 @@
+.radio-group{width:100%}.radio-group-row{display:flex;flex-direction:row}.radio-group-column{display:flex;flex-direction:column}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/radio/index.js b/node_modules/lin-ui/dist/radio/index.js
new file mode 100644
index 0000000..b8d2365
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio/index.js
@@ -0,0 +1,90 @@
+Component({
+  externalClasses: ['l-class', 'l-disabled-class'],
+  behaviors: ['wx://form-field'],
+  relations: {
+    '../radio-group/index': {
+      type: 'parent'
+    }
+  },
+  properties: {
+    key: String,
+    cell: Object,
+    // radio的大小
+    size: {
+      type: String,
+      value: '38rpx'
+    },
+    disabled: {
+      type: Boolean
+    },
+    custom: Boolean,
+    color: {
+      type: String,
+      value: '#ccc'
+    },
+    //  选中后的颜色
+    selectColor: {
+      type: String,
+      value: '#3963BC'
+    },
+    disabledColor: {
+      type: String,
+      value: '#ccc'
+    },
+    placement: {
+      type: String,
+      value: 'left'
+    },
+    transition: {
+      type: Boolean,
+      value: true
+    }
+  },
+  data: {
+    checked: false
+  },
+  methods: {
+    setChecked(checked) {
+      this.setData({
+        checked,
+      });
+    },
+    // 点击radio
+    onRadioChangeTap() {
+      if (this.properties.disabled) {
+        return;
+      }
+      const parent = this.getRelationNodes('../radio-group/index')[0];
+      const noneChecked = parent.properties.noneChecked;
+      const isCurrent = this.isCurrentSelectedKey(parent);
+      let select = true;
+      if (isCurrent) {
+        select = false;
+        if (!noneChecked) {
+          return;
+        }
+      }
+      const checked = !this.data.checked;
+      this.data.checked = checked;
+
+      // 子组件不能修改父组件属性
+      // parent.properties.current = null
+      const item = {
+        checked,
+        key: this.properties.key,
+        cell: this.properties.cell
+      };
+      if (parent) {
+        parent.onEmitEventHandle(item, select);
+      }
+    },
+
+    isCurrentSelectedKey(parent) {
+      const currentKey = parent.properties.current;
+      if (currentKey == this.properties.key) {
+        return true;
+      }
+      return false;
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/radio/index.json b/node_modules/lin-ui/dist/radio/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/radio/index.wxml b/node_modules/lin-ui/dist/radio/index.wxml
new file mode 100644
index 0000000..d3d6015
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio/index.wxml
@@ -0,0 +1,9 @@
+<view bind:tap="onRadioChangeTap" 
+      class="label label-{{placement}} {{disabled?'label-disabled l-disabled-class':'l-class'}}">
+        <view class="radio"
+              style="color:{{checked?selectColor:(disabled?disabledColor:color)}};font-size:{{size}}">
+            <slot wx:if="{{custom}}" name="icon"/>
+            <view wx:else class="iconfont {{checked?'icon-select':'icon-unselect'}}"></view>
+        </view>
+        <slot/>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/radio/index.wxss b/node_modules/lin-ui/dist/radio/index.wxss
new file mode 100644
index 0000000..ef79dc8
--- /dev/null
+++ b/node_modules/lin-ui/dist/radio/index.wxss
@@ -0,0 +1 @@
+.label{display:flex;flex:1;align-items:center;font-size:30rpx;color:#333;width:100%}.label-left{flex-direction:row}.label-right{flex-direction:row-reverse;justify-content:space-between}.label-disabled{color:#ccc}.radio{margin-right:20rpx}.iconfont{font-family:iconfont!important;display:inline-flex;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAMMAAsAAAAABwQAAAK9AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgqBaIFyATYCJAMMCwgABCAFhG0HOxs9BsgekiQlqiBBkCKqgBDbFA9f+72eu7sf0SUKUEYCjq8CJBWhqlrpakx5POtO5RtaczeTEm4dEZ0nl3vZ/P4QsbZQwBuhkJZZe0ElkSkAzf+5nN4oP2/Mb1kucw086gUYBxToHtgmK5FAPIXhtYt1GOcJtC1qIDsxOz1Aq6DTAvGYpZNAm4sqilRoCvWatUW8V9NMb9Mt4F34/firLbQktYzOPXN3MgNGfhz/9uXVatVlHyGbzw1pExlbgEJcrfWep4izWxTahlppdgJ1RUhzJaqKUGrq6zv94yWijtZ3wRo06aZkroDgZ58ENGRb3WvkdwEvYZyONecufVjvlP/yCN9e6dcv/syKok+S/ILg5fk4v+4VjvzShk88ZPlDX7WRthx5hXV881Hg5krDX9Z84j7MqK4cjZR1JuLFnjJtMX7ePssP3xVQnfFiKPkScCUeVTcdonq0qYhT/P/M8y4Q5ZkuBeY3m1/gqWk5FFo2LcA/s72GnXZzDSQAVPNPvhv+Qobg0R/V/2uDnX/NTgHftl/fyIRqAfkuAJr34wv+r6xnVzEV1JaLLnWltj9bvld3AmI5oEKDYy/j9bPeaUIzJ5MgaViArGkJLdQtqOnYhrqmfWjbZNncMYEpRGlhwxaBMHQNSd8HyIbqaKE+Q83cH9QNQwFtZ2OyZ8dKsPpjjJIEZWBqDrLpUpFyHEQfNboQPZVP4qwiZPsQ5tgEbG1qKRYsqIjwHAu4abqNEApSuFSAZnIZyudLsIxLWZQmTQwh5b7mZqruTU3pUgHoHcOQJALJgFLmQKy0kiLK70/oS593QWhT8pJwC6kh7INgHHZ4qFWTlh6oRVvsRbqXazjTaG0IggJRsJICyExGIXl5JVC5flQWkkY0YUaky/o0s15UX23T+vrC9x2ANrogR4ocRfNNkUP5u9SpAwsAAAAA') format('woff2')}.icon-unselect:before{content:"\e6a1"}.icon-select:before{content:"\e73a"}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/rate/index.js b/node_modules/lin-ui/dist/rate/index.js
new file mode 100644
index 0000000..a0190b1
--- /dev/null
+++ b/node_modules/lin-ui/dist/rate/index.js
@@ -0,0 +1,59 @@
+Component({
+  /**
+     * 组件的属性列表
+     */
+  externalClasses: ['l-class', 'l-class-icon','l-class-image', 'l-icon-class','l-image-class'],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    count: {
+      type: Number,
+      value: 5
+    },
+    score:{
+      type: Number,
+      value: 0
+    },
+    size: {
+      type: String,
+      value: '36'
+    },
+    disabled: Boolean,
+    activeColor: {
+      type: String,
+      value: '#FF5252'
+    },
+    inActiveColor: {
+      type: String,
+      value: '#FFE5E5'
+    },
+    name:{
+      type:String,
+      value:'favor-fill'
+    },
+    activeImage:String,
+    inActiveImage:String
+  },
+
+  /**
+     * 组件的初始数据
+     */
+  data: {
+
+  },
+
+  /**
+     * 组件的方法列表
+     */
+  methods: {
+    handleClick(e){
+      if(this.data.disabled) return;
+      const {index} = e.currentTarget.dataset;
+      this.setData({
+        score:index + 1 
+      });
+      this.triggerEvent('linchange',{score:index+1});
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/rate/index.json b/node_modules/lin-ui/dist/rate/index.json
new file mode 100644
index 0000000..dd10af0
--- /dev/null
+++ b/node_modules/lin-ui/dist/rate/index.json
@@ -0,0 +1,6 @@
+{
+    "component": true,
+    "usingComponents": {
+        "l-icon":"../icon/index"
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/rate/index.wxml b/node_modules/lin-ui/dist/rate/index.wxml
new file mode 100644
index 0000000..477adfa
--- /dev/null
+++ b/node_modules/lin-ui/dist/rate/index.wxml
@@ -0,0 +1,10 @@
+<view class="l-rate l-class">
+    <view wx:for="{{count}}" wx:key="{{item}}" class="l-rate-star" data-index="{{index}}" bindtap="handleClick">
+        <view class="icon-checked" wx:if="{{score > index}}" hover-class="none" hover-stop-propagation="false" data-rate="{{score-index}}" style="width:{{score-index<1?(score-index)*100:100}}%">
+            <image wx:if="{{activeImage &&  inActiveImage}}" class="image-item l-class-image l-image-class" src="{{activeImage}}" mode="aspectFit|aspectFill|widthFix" lazy-load="false"></image>
+            <l-icon wx:else name="{{name}}" l-class="l-class-icon l-icon-class" size="{{size}}" color="{{activeColor}}" />
+        </view>
+        <image wx:if="{{activeImage &&  inActiveImage}}" class="image-item l-class-image l-image-class" src="{{inActiveImage}}" mode="aspectFit|aspectFill|widthFix" lazy-load="false"></image>
+        <l-icon wx:else name="{{name}}" l-class="l-class-icon l-icon-class" size="{{size}}" color="{{inActiveColor}}"></l-icon>
+    </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/rate/index.wxss b/node_modules/lin-ui/dist/rate/index.wxss
new file mode 100644
index 0000000..de88ea2
--- /dev/null
+++ b/node_modules/lin-ui/dist/rate/index.wxss
@@ -0,0 +1 @@
+.l-rate,.l-rate-star{display:inline-flex}.l-rate-star{position:relative}.l-rate-star~.l-rate-star{margin-left:10rpx}.icon-checked{position:absolute;overflow:hidden}.image-item{width:80rpx;height:80rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/search-bar/index.js b/node_modules/lin-ui/dist/search-bar/index.js
new file mode 100644
index 0000000..8395757
--- /dev/null
+++ b/node_modules/lin-ui/dist/search-bar/index.js
@@ -0,0 +1,150 @@
+// cpn/search-bar/index.js
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: [
+    'l-class',
+    'l-container-class',
+    'l-placeholder-class',
+    'l-icon-class',
+    'l-input-class',
+    'l-cancel-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  properties: {
+    confirmType: {
+      type: String,
+      value: 'search'
+    },
+    placeholder: String,
+    cancelText: {
+      type: String,
+      value: '取消'
+    },
+    address: String,
+    custom: Boolean,
+    value: String,
+    type: String,
+    icon: {
+      type: String,
+      value: 'research'
+    },
+    iconColor: {
+      type: String,
+      value: '#bdbdbd'
+    },
+    iconSize: {
+      type: String,
+      value: '28'
+    },
+    bgColor: {
+      type: String,
+      value: '#f3f3f3'
+    },
+    showCancel: {
+      type: Boolean,
+      value: true
+    },
+    shape: {
+      type: String,
+      value: 'primary'
+    },
+    TextAlign: {
+      type: String,
+      value: 'left'
+    },
+    adress: String,
+    // 获取焦点
+    focus: Boolean,
+    // 是否显示清除按钮
+    clear: {
+      type: Boolean,
+      value: true
+    },
+    // 最大输入长度
+    maxlength: {
+      type: Number,
+      value: 140
+    },
+    // 是否禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 占位文字的样式  
+    placeholderStyle: {
+      type: String,
+      value: ''
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    onCancel() {
+      this.triggerEvent('lincancel', {}, {
+        bubbles: true,
+        composed: true
+      });
+    },
+    // input属性列表
+    handleInputChange(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('linchange', detail);
+    },
+
+    handleInputFocus(event) {
+      this.triggerEvent('linfocus', event.detail);
+    },
+
+    handleInputBlur(event) {
+      this.triggerEvent('linblur', event.detail);
+    },
+
+    handleInputConfirm(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('linconfirm', detail);
+    },
+
+    onClearTap(event) {
+      this.setData({
+        value: ''
+      });
+      this.triggerEvent('linclear', event.detail, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/search-bar/index.json b/node_modules/lin-ui/dist/search-bar/index.json
new file mode 100644
index 0000000..ccccaa9
--- /dev/null
+++ b/node_modules/lin-ui/dist/search-bar/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-input": "../input/index",
+    "l-icon": "../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/search-bar/index.wxml b/node_modules/lin-ui/dist/search-bar/index.wxml
new file mode 100644
index 0000000..6363ed2
--- /dev/null
+++ b/node_modules/lin-ui/dist/search-bar/index.wxml
@@ -0,0 +1,38 @@
+<view class="search-bar l-container-class">
+  <slot name="before"/>
+  <view wx:if="{{address}}" class="icon-container">
+    <text class="city">{{address}}</text>
+    <l-icon name="down" color="#333" size="22" />
+  </view>
+  <view class="search-input l-class {{'search-input-'+ shape}}" style="{{'background-color:'+bgColor}}">
+    <slot wx:if="{{custom}}" name="icon"/>
+    <l-icon wx:else name="{{icon}}" size="{{iconSize}}" color="{{iconColor}}" l-class="l-icon-class" />
+    <input
+        confirm-type="{{confirmType}}"
+        class="input l-input-class {{'input'+ TextAlign}}"
+        value="{{ value }}"
+        type="{{type}}"
+        password="{{type==='password'}}"
+        placeholder="{{placeholder}}"
+        maxlength="{{maxlength}}"
+        placeholder-class="pls-class l-placeholder-class"
+        placeholder-style="{{placeholderStyle}}"
+        disabled="{{disabled}}"
+        focus="{{focus}}"
+        bindinput="handleInputChange"
+        bindfocus="handleInputFocus"
+        bindblur="handleInputBlur"
+        bindconfirm="handleInputConfirm"/>
+    <view class="close-wrap" wx:if="{{clear&&value}}" bindtap="onClearTap">
+        <view class="close">
+            <l-icon  name="close" color="#fff" size="15" />
+        </view>
+    </view>
+  </view>
+  <view wx:if="{{showCancel}}" 
+        class="cancle l-cancel-class" 
+        bindtap="onCancel">
+        {{cancelText}}
+  </view>
+  <slot name="after"/>
+</view>
diff --git a/node_modules/lin-ui/dist/search-bar/index.wxss b/node_modules/lin-ui/dist/search-bar/index.wxss
new file mode 100644
index 0000000..24d0b42
--- /dev/null
+++ b/node_modules/lin-ui/dist/search-bar/index.wxss
@@ -0,0 +1 @@
+.search-bar{display:flex;flex-direction:row;align-items:center;padding:0 20rpx;box-sizing:border-box;width:100%}.search-input{height:60rpx;background-color:#f3f3f3;display:flex;flex-direction:row;flex:1;align-items:center;padding-left:30rpx;box-sizing:border-box}.search-input-primary{border-radius:8rpx}.search-input-circle{border-radius:30rpx}.cancle{font-size:28rpx;color:#666;display:flex;align-items:center;width:60rpx;justify-content:center;height:60rpx;margin-left:15rpx}.input{height:40rpx;line-height:40rpx;flex:1;margin-left:15rpx;font-size:28rpx;color:#666}.input-center{text-align:center}.input-left{text-align:left}.close-wrap{padding:10rpx}.close{height:30rpx;width:30rpx;background:#ddd;display:flex;align-items:center;justify-content:center;border-radius:50%;padding-top:3rpx;box-sizing:border-box;margin-right:15rpx}.pls-class{color:#bdbdbd;font-size:28rpx}.icon-container{display:flex;flex-direction:row;align-items:center;margin-right:15rpx}.city{font-size:28rpx;color:#333;margin-right:10rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/segment-item/index.js b/node_modules/lin-ui/dist/segment-item/index.js
new file mode 100644
index 0000000..c9b540e
--- /dev/null
+++ b/node_modules/lin-ui/dist/segment-item/index.js
@@ -0,0 +1,74 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+
+  relations: {
+    '../segment/index': {
+      type: 'parent',
+      linked() { },
+      unlinked() { }
+    },
+  },
+
+  properties: {
+    tab: String,
+    key: String,
+    icon: String,
+    iconSize: {
+      type: String,
+      value: '20'
+    },
+    image: Object,
+    picPlacement: {
+      type: String,
+      value: 'top'
+    },
+    dotBadge: Boolean,
+    badgeCount: {
+      type: Number,
+    },
+    badgeMaxCount: {
+      type: Number,
+      value: 99
+    },
+    badgeCountType: {
+      type: String,
+      value: 'overflow'
+    },
+  },
+  observers: {
+    '**': function (filed) {
+      this.updateData(filed);
+    }
+  },
+  /**
+   * 组件的初始数据
+   */
+  data: {},
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    updateData(filed) {
+      let parent = this.getRelationNodes('../segment/index')[0];
+      if (!parent) return;
+      const tabList = parent.data.tabList;
+      if (!(tabList && tabList.length > 0)) return;
+      const index = tabList.findIndex(tab => tab.key === this.data.key);
+      tabList[index] = filed;
+      parent.setData({
+        tabList: tabList
+      }, () => {
+        if (parent.data.scrollable) {
+          parent.queryMultipleNodes();
+        }
+      });
+
+    },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/segment-item/index.json b/node_modules/lin-ui/dist/segment-item/index.json
new file mode 100644
index 0000000..62389a9
--- /dev/null
+++ b/node_modules/lin-ui/dist/segment-item/index.json
@@ -0,0 +1,4 @@
+{
+    "component": true,
+    "usingComponents": {}
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/segment-item/index.wxml b/node_modules/lin-ui/dist/segment-item/index.wxml
new file mode 100644
index 0000000..49aeb95
--- /dev/null
+++ b/node_modules/lin-ui/dist/segment-item/index.wxml
@@ -0,0 +1 @@
+<slot></slot>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/segment-item/index.wxss b/node_modules/lin-ui/dist/segment-item/index.wxss
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/lin-ui/dist/segment/index.js b/node_modules/lin-ui/dist/segment/index.js
new file mode 100644
index 0000000..cffb4be
--- /dev/null
+++ b/node_modules/lin-ui/dist/segment/index.js
@@ -0,0 +1,142 @@
+import scrollCenter from '../behaviors/scrollCenter';
+
+Component({
+  /**
+     * 组件的属性列表
+     */
+  behaviors: [scrollCenter],
+  externalClasses: [
+    'l-class',
+    'l-header-class',
+    'l-class-active',
+    'l-active-class',
+    'l-class-inactive',
+    'l-inactive-class',
+    'l-class-tabimage',
+    'l-tab-image-class',
+    'l-class-header-line',
+    'l-header-line-class',
+    'l-class-line',
+    'l-line-class',
+    'l-class-icon',
+    'l-icon-class',
+    'l-class-badge',
+    'l-badge-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+
+  relations: {
+    '../segment-item/index': {
+      type: 'child',
+      linked() {
+        // 每次有子节点被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+        this.initTabs();
+      },
+      unlinked() {
+        this.initTabs();
+      }
+    },
+  },
+  properties: {
+    activeKey: {
+      type: String,
+      value: '',
+      observer: 'changeCurrent'
+    },
+    placement: {
+      type: String,
+      value: 'top',
+    },
+    scrollable: Boolean,
+    hasLine: {
+      type: Boolean,
+      value: true
+    },
+    animatedForLine: Boolean,
+    activeColor: {
+      type: String,
+    },
+    inactiveColor: {
+      type: String,
+    },
+    equalWidth: {
+      type: Boolean,
+      value: true
+    },
+    even: {
+      type: Boolean,
+      value: true
+    },
+    width: Number,
+    height: Number,
+    itemHeight: Number,
+    itemWidth: Number
+  },
+
+  /**
+     * 组件的初始数据
+     */
+  data: {
+    tabList: [],
+    currentIndex: 0
+  },
+
+  /**
+     * 组件的方法列表
+     */
+  methods: {
+    initTabs(val = this.data.activeKey) {
+      let items = this.getRelationNodes('../segment-item/index');
+      if (items.length > 0) {
+        if (items.length === this.data.tabList.length) return;
+        let activeKey = val,
+          currentIndex = this.data.currentIndex;
+        const tab = items.map((item, index) => {
+          activeKey = !val && index == 0 ? item.data.key : activeKey;
+          currentIndex = item.data.key === activeKey ? index : currentIndex;
+          return {
+            ...item.data
+          };
+        });
+        this.setData({
+          tabList: tab,
+          activeKey,
+          currentIndex,
+        }, () => {
+          if (this.data.scrollable) {
+            this.queryMultipleNodes();
+          }
+        });
+      }
+    },
+
+    handleChange(e) {
+      const activeKey = e.currentTarget.dataset.key;
+      const currentIndex = e.currentTarget.dataset.index;
+      this._setChangeData({
+        activeKey,
+        currentIndex
+      });
+    },
+
+    _setChangeData({
+      activeKey,
+      currentIndex
+    }) {
+      this.setData({
+        activeKey,
+        currentIndex
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+      this.triggerEvent('linchange', {
+        activeKey,
+        currentIndex
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/segment/index.json b/node_modules/lin-ui/dist/segment/index.json
new file mode 100644
index 0000000..503bf6f
--- /dev/null
+++ b/node_modules/lin-ui/dist/segment/index.json
@@ -0,0 +1,8 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-badge": "../badge/index",
+    "l-segment-item":"../segment-item/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/segment/index.wxml b/node_modules/lin-ui/dist/segment/index.wxml
new file mode 100644
index 0000000..b4cc7a2
--- /dev/null
+++ b/node_modules/lin-ui/dist/segment/index.wxml
@@ -0,0 +1,27 @@
+<view class="l-tabs l-class {{'l-placement-'+placement}} {{placement=='left'||placement=='right'?'l-tabs-vertical':'l-tabs-horizontal'}} {{scrollable ? 'l-tabs-scroll':''}}"  style="{{width?'width:'+ width +'rpx;':'' }}{{height?'height:'+height+'rpx':''}}">
+    <scroll-view scroll-x="{{placement=='top'||placement=='bottom' && scrollable}}" scroll-y="{{placement=='left'||placement=='right' && scrollable}}" scroll-top="{{transformY}}" scroll-left="{{transformX}}" scroll-with-animation 
+    class="l-tabsscroll l-header-class {{hasLine?'l-tabs-header-line l-class-header-line l-header-line-class':''}}"
+    style="{{width?'width:'+ width +'rpx;':'' }} {{height?'height:'+height+'rpx':''}}">
+        <view class="l-tabs-header {{( even && equalWidth)?'l-tabs-equal-header':'l-tabs-unequal-header'}}">
+            <block wx:for="{{tabList}}" wx:key="{{item.key}}">
+                <view wx:if="{{item.tab}}" class="l-tabs-item {{( even && equalWidth)?'l-tabs-equal-width':'l-tabs-unequal-width'}} {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+item.picPlacement}}" 
+                    style="color:{{item.key===activeKey?activeColor:inactiveColor}};{{itemWidth?'width:'+ itemWidth +'rpx':'' }};{{itemHeight?'height:'+itemHeight+'rpx':''}}" data-key="{{item.key}}" data-index="{{index}}" bind:tap="handleChange">
+                    <l-badge l-self-class="badge-view" l-class="l-class-badge l-badge-class" wx:if="{{(item.badgeCount > 0 || item.dotBadge )}}" value="{{item.badgeCount}}" dot="{{item.dotBadge}}" max-count="{{item.badgeMaxCount}}" number-type="{{item.badgeCountType}}">
+                        <template is="tab-item" data="{{item,activeKey,hasLine,activeColor,inactiveColor,animatedForLine}}" />
+                    </l-badge>
+                    <template is="tab-item" data="{{item,activeKey,hasLine,activeColor,inactiveColor,animatedForLine}}" wx:else />
+                    <view class="l-tab-line {{item.key===activeKey?'l-class-line l-line-class':''}} {{animatedForLine?'l-line-aminmated':''}}" wx:if="{{hasLine}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+                </view>
+                <view wx:else class="l-tabs-item {{(even && equalWidth)?'l-tabs-equal-width':'l-tabs-unequal-width'}} {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+picPlacement}}" style="color:{{item.key===activeKey?activeColor:inactiveColor}}" data-key="{{item.key}}" data-index="{{index}}" bind:tap="handleChange">
+                    <slot name="{{item.key}}"></slot>
+                    <view class="l-tab-line {{item.key===activeKey?'l-class-line l-line-class':''}} {{animatedForLine?'l-line-aminmated':''}}" wx:if="{{hasLine}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+                </view>
+            </block>
+        </view>
+    </scroll-view>
+</view>
+<template name="tab-item">
+    <image wx:if="{{ item.image.activeImage || item.image.defaultImage }}" src="{{item.key===activeKey? item.image.activeImage:item.image.defaultImage}}" class="l-tab-image l-class-tabimage l-tab-image-class" />
+    <l-icon wx:if="{{item.icon}}" l-class="l-class-icon l-icon-class" l-self-class="{{item.key===activeKey ? 'l-icon-active':'l-icon-inactive'}}" name="{{item.icon}}" color="{{item.key===activeKey?activeColor:inactiveColor}}" size="{{item.iconSize}}"/>
+    {{item.tab}}
+</template>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/segment/index.wxss b/node_modules/lin-ui/dist/segment/index.wxss
new file mode 100644
index 0000000..2b961d3
--- /dev/null
+++ b/node_modules/lin-ui/dist/segment/index.wxss
@@ -0,0 +1 @@
+.l-tabs{overflow:auto;width:100%}.l-tabs-header{display:flex;width:100%;flex-direction:row;align-items:center}.l-tabs-header .l-tabs-item{font-size:28rpx;text-align:center;box-sizing:border-box;display:flex;justify-content:center;align-items:center}.l-tabs-header .l-icon-active,.l-tabs-header .l-tabs-active{color:#333}.l-tabs-header .l-icon-active,.l-tabs-header .l-icon-inactive{font-size:28rpx}.l-tabs-header .l-icon-inactive,.l-tabs-header .l-tabs-inactive{color:#bbb}.l-tabs-header .l-tabsitems-row{flex-direction:row}.l-tabs-header .l-tabsitems-row .l-icon-active,.l-tabs-header .l-tabsitems-row .l-icon-inactive{margin-right:10rpx}.l-tabs-header .l-tabsitems-row-reverse{flex-direction:row-reverse}.l-tabs-header .l-tabsitems-row-reverse .l-icon-active,.l-tabs-header .l-tabsitems-row-reverse .l-icon-inactive{margin-left:10rpx}.l-placement-bottom,.l-placement-top{height:80rpx}.l-placement-bottom .l-tabs-header,.l-placement-top .l-tabs-header{height:100%}.l-placement-bottom .l-tabs-header .l-tabs-item,.l-placement-top .l-tabs-header .l-tabs-item{min-height:100%}.l-placement-right{flex-direction:row-reverse}.l-placement-bottom{flex-direction:column-reverse}.l-tabs-vertical .l-tabpanel-swiper{height:initial}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header{-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header .l-tabs-item{overflow:visible}.l-tabs-vertical{width:160rpx}.l-tabs-vertical .l-tabsscroll{width:160rpx;box-sizing:border-box}.l-tabs-vertical .l-tabs-equal-header{height:100%}.l-tabs-vertical .l-tabs-header{width:100%;flex-direction:column;-webkit-overflow-scrolling:touch;white-space:nowrap;overflow-x:hidden}.l-tabs-vertical .l-tabs-header .l-tabs-item.l-tabs-active{background:#fff}.l-tabs-vertical .l-tabs-header .l-tabs-unequal-width{height:80rpx}.l-tabs-vertical .l-tabs-header .l-tabs-item{overflow:visible;background:#f6f8fa;width:100%}.l-tabs-item{position:relative}.l-tab-line{position:absolute;bottom:0;left:0;background:#000}.l-tabs-horizontal .l-tabs-equal-width{flex:1}.l-tabs-horizontal .l-tabs-unequal-width{padding:0 20rpx}.l-tabs-horizontal .l-tabsscroll{height:100%;box-sizing:border-box}.l-tabs-horizontal .l-tab-line{height:4rpx;width:0;left:100%;right:0;margin:0 auto}.l-tabs-horizontal .l-line-aminmated{transition:.2s all linear}.l-tabs-horizontal .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{left:0}.l-tabs-horizontal .l-tabs-active .l-tab-line{width:100%;left:0}.l-tabs-horizontal .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-placement-top .l-tab-line{bottom:0;transform:translateY(-100%)}.l-placement-top .l-tabs-header-line{border-bottom:1px solid #f3f3f3}.l-placement-bottom .l-tab-line{top:0}.l-placement-bottom .l-tabs-header-line{border-top:1px solid #f3f3f3}.l-tabs-vertical .l-tab-line{width:6rpx;height:0;border-radius:0 6rpx 6rpx 0;top:0;margin:auto 0}.l-tabs-vertical .l-line-aminmated{transition:.2s all linear}.l-tabs-vertical .l-tabs-active .l-tab-line{height:40rpx}.l-tabs-vertical .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-tabs-vertical .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{height:0;top:0}.l-placement-left .l-tab-line{right:auto}.l-placement-left .l-tabs-header-line{border-left:1px solid #f3f3f3}.l-placement-right .l-tab-line{right:0;left:auto}.l-placement-right .l-tabs-header-line{border-right:1px solid #f3f3f3}.l-tab-image{width:100rpx;height:100rpx}.l-tab-image-placement-top{flex-direction:column}.l-tab-image-placement-bottom{flex-direction:column-reverse}.l-tab-image-placement-left{flex-direction:row}.l-tab-image-placement-right{flex-direction:row-reverse}.l-tabs-header .badge-view{top:-20rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/slide-view/index.js b/node_modules/lin-ui/dist/slide-view/index.js
new file mode 100644
index 0000000..1f46356
--- /dev/null
+++ b/node_modules/lin-ui/dist/slide-view/index.js
@@ -0,0 +1,187 @@
+// slide-view/slide-view.js
+const _windowWidth = wx.getSystemInfoSync().windowWidth;
+Component({
+  /**
+   * 组件的属性列表
+   */
+  options: {
+    multipleSlots: true,
+  },
+  properties: {
+    // 组件显示区域的宽度
+    width: {
+      type: Number,
+      value: _windowWidth
+    },
+    // 组件显示区域的高度
+    height: {
+      type: Number,
+      value: 100,
+    },
+    // 组件滑动显示区域的宽度
+    slideWidth: {
+      type: Number,
+      value: 0
+    },
+    // 阈值
+    threshold: {
+      type: Number,
+      value: 0
+    },
+    // 禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 自动关闭
+    autoClose: {
+      type: Boolean,
+      value: false
+    },
+    // 主动关闭
+    close: {
+      type: Boolean,
+      value: false,
+      observer: function (newVal) {
+        if (newVal) {
+          this.setData({
+            popup: false,
+            x: 0
+          });
+          this.onCloseTap();
+        } 
+      }
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    viewWidth: _windowWidth,
+    //  movable-view偏移量
+    x: 0,
+    //  movable-view是否可以出界
+    out: false,
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  ready() {
+    this.updateRight();
+  },
+  methods: {
+    updateRight() {
+
+      // 获取右侧滑动显示区域的宽度
+      const that = this; 
+      const query = wx.createSelectorQuery().in(this);
+      query.select('.right').boundingClientRect(function (res) {
+        that._slideWidth = res.width;
+        let width = res.width <=50 ? res.width : 50;
+        that._threshold = that.properties.threshold ? that.properties.threshold : width;
+        that._viewWidth = that.data.width + res.width * (750 / _windowWidth);
+        that.setData({
+          viewWidth: that._viewWidth
+        });
+      }).exec();
+    },
+    onTouchStart(e) {
+      this._startX = e.changedTouches[0].pageX;
+    },
+    //  当滑动范围超过阈值自动完成剩余滑动
+    onTouchEnd(e) {
+      if (this.properties.disabled) return;
+
+      this._endX = e.changedTouches[0].pageX;
+      this._length = this._endX - this._startX;
+
+      const {
+        _endX,
+        _startX,
+        _threshold
+      } = this;
+
+      if (this._length > _threshold) {
+        this.setData({
+          popup: false,
+          x: 0,
+        });
+        this.onCloseTap();
+
+      }
+      if (_endX > _startX && this.data.out === false) return;
+      if (_startX - _endX >= _threshold) {
+        this.setData({
+          x: -this._slideWidth,
+          popup: true,
+          close: false
+        });
+        this.onOpenTap();
+      } else if (_startX - _endX < _threshold && _startX - _endX > 0 && this.data.popup != true) {
+        this.setData({
+          x: 0
+        });
+        this.onCloseTap();
+
+      } else if (_endX - _startX >= _threshold) {
+        this.setData({
+          x: 0
+        });
+        this.onCloseTap();
+
+      } else if (_endX - _startX < _threshold && _endX - _startX > 0) {
+        this.setData({
+          x: -this._slideWidth,
+          close: false
+        });
+        this.onOpenTap();
+
+      }
+    },
+    //  根据滑动的范围设定是否允许movable-view出界
+    onChange(e) {
+      if (!this.data.out && e.detail.x < -this._threshold) {
+        this.setData({
+          out: true
+        });
+      } else if (this.data.out && e.detail.x >= -this._threshold) {
+        this.setData({
+          out: false
+        });
+      }
+    },
+
+    // 点击 右边区域
+    onRightTap() {
+      let detail = 'click right';
+      let option = { bubbles: true, composed: true };
+      if (this.properties.autoClose) {
+        this.setData({
+          popup: false,
+          x: 0
+        });
+        this.onCloseTap();
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    },
+
+    // 打开后触发
+    onOpenTap() {
+      let detail = true;
+      let option = { bubbles: true, composed: true };
+
+      this.triggerEvent('slideopen', detail, option);
+    },
+
+    // 关闭后触发
+    onCloseTap() {
+      let detail = false;
+      let option = { bubbles: true, composed: true };
+
+      this.triggerEvent('slideclose', detail, option);
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/slide-view/index.json b/node_modules/lin-ui/dist/slide-view/index.json
new file mode 100644
index 0000000..78013bd
--- /dev/null
+++ b/node_modules/lin-ui/dist/slide-view/index.json
@@ -0,0 +1,5 @@
+{
+  "component": true,
+  "usingComponents": {
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/slide-view/index.wxml b/node_modules/lin-ui/dist/slide-view/index.wxml
new file mode 100644
index 0000000..c0bc342
--- /dev/null
+++ b/node_modules/lin-ui/dist/slide-view/index.wxml
@@ -0,0 +1,24 @@
+
+<!-- slide-view/slide-view.wxml -->
+<movable-area class="container" style="width: {{width}}rpx; height: {{height}}rpx;">
+  <movable-view
+    direction="horizontal"
+    class="movable-content"
+    out-of-bounds="{{out}}"
+    damping="20"
+    disabled="{{disabled}}"
+    x="{{x}}"
+    style="width: {{width + slideWidth}}rpx; height: {{height}}rpx;"
+    inertia
+    bindtouchend="onTouchEnd"
+    bindtouchstart="onTouchStart"
+    bindchange="onChange"
+  >
+    <view class="left"  style="width: {{width}}rpx; height: {{height}}rpx;">
+      <slot name="left"></slot>
+    </view>
+    <view class="right" bindtap="onRightTap" style="width: {{slideWidth}}rpx; height: {{height}}rpx;">
+      <slot name="right"></slot>
+    </view>
+  </movable-view>
+</movable-area>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/slide-view/index.wxss b/node_modules/lin-ui/dist/slide-view/index.wxss
new file mode 100644
index 0000000..581bd5c
--- /dev/null
+++ b/node_modules/lin-ui/dist/slide-view/index.wxss
@@ -0,0 +1 @@
+.movable-content{display:flex;direction:row;overflow:hidden}.container{overflow:hidden}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/spin/index.js b/node_modules/lin-ui/dist/spin/index.js
new file mode 100644
index 0000000..8afa7f1
--- /dev/null
+++ b/node_modules/lin-ui/dist/spin/index.js
@@ -0,0 +1,19 @@
+Component({
+  externalClasses: ['l-class'],
+  properties: {
+    color: String,
+    show: Boolean,
+    type: {
+      type: String,
+      value: 'flash'
+    },
+    // 自定义
+    custom: Boolean,
+    size: {
+      type: String,
+      value: 'default',
+    },
+  },
+  methods: {
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/spin/index.json b/node_modules/lin-ui/dist/spin/index.json
new file mode 100644
index 0000000..4a42478
--- /dev/null
+++ b/node_modules/lin-ui/dist/spin/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/spin/index.wxml b/node_modules/lin-ui/dist/spin/index.wxml
new file mode 100644
index 0000000..af5cd83
--- /dev/null
+++ b/node_modules/lin-ui/dist/spin/index.wxml
@@ -0,0 +1,10 @@
+<view wx:if="{{show}}" class="{{type=='flash'?'l-class':''}} {{type + '-spinner'}} {{type=='change'||custom?'':'spinner-' + type + '-' + size}}">
+  <block wx:if="{{custom}}">
+    <slot />  
+  </block>
+  <block wx:else>
+    <view style="{{color?'background-color:'+color:''}}" class="l-class {{type+'-bounce1'}}   {{'spinner-'+ type + '-' + size}}"></view>
+    <view wx:if="{{type=='flash' || type=='change'}}" style="{{color?'background-color:'+color:''}}" class="l-class {{type+'-bounce2'}} {{'spinner-'+ type + '-' + size}}"></view>
+    <view wx:if="{{type=='change'}}" style="{{color?'background-color:'+color:''}}" class="l-class {{type+'-bounce3'}}   {{'spinner-'+ type + '-' + size}}"></view>
+  </block>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/spin/index.wxss b/node_modules/lin-ui/dist/spin/index.wxss
new file mode 100644
index 0000000..8bd139a
--- /dev/null
+++ b/node_modules/lin-ui/dist/spin/index.wxss
@@ -0,0 +1 @@
+.spinner-flash-default{width:60rpx;height:60rpx}.spinner-flash-mini{width:40rpx;height:40rpx}.spinner-flash-large{width:80rpx;height:80rpx}.spinner-flip-default{width:60rpx;height:60rpx}.spinner-flip-mini{width:40rpx;height:40rpx}.spinner-flip-large{width:80rpx;height:80rpx}.spinner-change-default{width:50rpx;height:50rpx}.spinner-change-mini{width:30rpx;height:30rpx}.spinner-change-large{width:70rpx;height:70rpx}.flash-spinner{position:relative}.flash-bounce1,.flash-bounce2{width:100%;height:100%;border-radius:50%;background-color:#3963bc;opacity:.6;position:absolute;top:0;left:0;-webkit-animation:bounce 2s infinite ease-in-out;animation:bounce 2s infinite ease-in-out}.flash-bounce2{-webkit-animation-delay:-1s;animation-delay:-1s}@-webkit-keyframes bounce{0%,100%{-webkit-transform:scale(0)}50%{-webkit-transform:scale(1)}}@keyframes bounce{0%,100%{transform:scale(0);-webkit-transform:scale(0)}50%{transform:scale(1);-webkit-transform:scale(1)}}.flip-bounce1{background-color:#3963bc;-webkit-animation:rotateplane 1.2s infinite ease-in-out;animation:rotateplane 1.2s infinite ease-in-out}@-webkit-keyframes rotateplane{0%{-webkit-transform:perspective(120px)}50%{-webkit-transform:perspective(120px) rotateY(180deg)}100%{-webkit-transform:perspective(120px) rotateY(180deg) rotateX(180deg)}}@keyframes rotateplane{0%{transform:perspective(120px) rotateX(0) rotateY(0);-webkit-transform:perspective(120px) rotateX(0) rotateY(0)}50%{transform:perspective(120px) rotateX(-180.1deg) rotateY(0);-webkit-transform:perspective(120px) rotateX(-180.1deg) rotateY(0)}100%{transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg);-webkit-transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)}}.change-spinner{width:240rpx;text-align:center}.change-bounce1{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.32s;animation-delay:-.32s}.change-bounce2{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-delay:-.16s;animation-delay:-.16s}.change-bounce3{background-color:#3963bc;border-radius:100%;display:inline-block;-webkit-animation:bouncedelay 1.4s infinite ease-in-out;animation:bouncedelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}@-webkit-keyframes bouncedelay{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes bouncedelay{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/status-show/image/address.png b/node_modules/lin-ui/dist/status-show/image/address.png
new file mode 100644
index 0000000..add1bcf
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/address.png differ
diff --git a/node_modules/lin-ui/dist/status-show/image/cart.png b/node_modules/lin-ui/dist/status-show/image/cart.png
new file mode 100644
index 0000000..a7cd892
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/cart.png differ
diff --git a/node_modules/lin-ui/dist/status-show/image/data.png b/node_modules/lin-ui/dist/status-show/image/data.png
new file mode 100644
index 0000000..6c9baf3
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/data.png differ
diff --git a/node_modules/lin-ui/dist/status-show/image/error.png b/node_modules/lin-ui/dist/status-show/image/error.png
new file mode 100644
index 0000000..900ae9d
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/error.png differ
diff --git a/node_modules/lin-ui/dist/status-show/image/network.png b/node_modules/lin-ui/dist/status-show/image/network.png
new file mode 100644
index 0000000..f82ec6d
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/network.png differ
diff --git a/node_modules/lin-ui/dist/status-show/image/order.png b/node_modules/lin-ui/dist/status-show/image/order.png
new file mode 100644
index 0000000..8e95de8
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/order.png differ
diff --git a/node_modules/lin-ui/dist/status-show/image/product.png b/node_modules/lin-ui/dist/status-show/image/product.png
new file mode 100644
index 0000000..5574a24
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/product.png differ
diff --git a/node_modules/lin-ui/dist/status-show/image/success.png b/node_modules/lin-ui/dist/status-show/image/success.png
new file mode 100644
index 0000000..d03f7e9
Binary files /dev/null and b/node_modules/lin-ui/dist/status-show/image/success.png differ
diff --git a/node_modules/lin-ui/dist/status-show/index.js b/node_modules/lin-ui/dist/status-show/index.js
new file mode 100644
index 0000000..3bbe18b
--- /dev/null
+++ b/node_modules/lin-ui/dist/status-show/index.js
@@ -0,0 +1,145 @@
+// dist/status-show/index.js
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: ['l-class', 'l-image-class', 'l-button-class', 'l-describe-class'],
+  properties: {
+    show: Boolean,
+    type: {
+      type: String,
+      value: 'success',
+      observer: '_changeStatus'
+    },
+    image: String,
+    describe: String,
+    buttonText: String,
+    bgColor: {
+      type: String,
+      value: '#fff'
+    },
+    fullScreen: {
+      type: Boolean,
+      value: true,
+    },
+    openApi: {
+      type: Boolean,
+      value: true
+    },
+    custom: {
+      type: Boolean,
+      value: false
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  attached() {
+    this._changeStatus();
+    if (this.data.openApi) this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.showStatusShow = (options) => {
+        const {
+          type = 'success',
+          image = '',
+          describe = '',
+          buttonText = '',
+          bgColor = '#fff',
+          fullScreen = true
+        } = { ...options };
+        this.setData({
+          show: true,
+          type,
+          image,
+          describe,
+          buttonText,
+          bgColor,
+          fullScreen
+        });
+      };
+      wx.lin.hideStatusShow = () => {
+        this.setData({
+          show: false
+        });
+      };
+    },
+
+    _changeStatus() {
+      switch (this.properties.type) {
+      case 'success':
+        this.setData({
+          typeImage: 'image/success.png',
+          typeText: '操作成功~'
+        });
+        break;
+      case 'error':
+        this.setData({
+          typeImage: 'image/error.png',
+          typeText: '操作失败~'
+        });
+        break;
+      case 'cart':
+        this.setData({
+          typeImage: 'image/cart.png',
+          typeText: '购物车空空如也，去逛逛吧~'
+        });
+        break;
+      case 'order':
+        this.setData({
+          typeImage: 'image/order.png',
+          typeText: '您暂时还没有订单哦~'
+        });
+        break;
+      case 'network':
+        this.setData({
+          typeImage: 'image/network.png',
+          typeText: '糟糕！网络错误~'
+        });
+        break;
+      case 'address':
+        this.setData({
+          typeImage: 'image/address.png',
+          typeText: '您暂时还没有地址哦~'
+        });
+        break;
+      case 'product':
+        this.setData({
+          typeImage: 'image/product.png',
+          typeText: '暂时还没有商品哦~~'
+        });
+        break;
+      case 'data':
+        this.setData({
+          typeImage: 'image/data.png',
+          typeText: '暂时还没有相关数据哦~~'
+        });
+        break;
+      }
+    },
+
+    tapStatusShow() {
+      this.triggerEvent('lincorvertap', {}, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/status-show/index.json b/node_modules/lin-ui/dist/status-show/index.json
new file mode 100644
index 0000000..6a37aa3
--- /dev/null
+++ b/node_modules/lin-ui/dist/status-show/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-button":"../button/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/status-show/index.wxml b/node_modules/lin-ui/dist/status-show/index.wxml
new file mode 100644
index 0000000..0067a5c
--- /dev/null
+++ b/node_modules/lin-ui/dist/status-show/index.wxml
@@ -0,0 +1,20 @@
+<view wx:if="{{show}}" class="l-status-container l-class {{fullScreen ? 'content': ''}}" style="{{'background:'+bgColor}}" bind:tap="tapStatusShow">
+  <block wx:if="{{custom}}">
+    <slot />
+  </block>
+  <block wx:else>
+    <image wx:if="{{image}}" class="left-img l-image-class {{fullScreen ? 'image_margin_top': ''}}" src="{{image}}"></image>
+    <image wx:else class="{{type=='success'||type=='error'?'left-img':'top-img'}} {{type=='address'?'ad-img':''}} l-image-class {{fullScreen ? 'image_margin_top': ''}}" src="{{typeImage}}"></image>
+    <text wx:if="{{describe}}" class="status-text l-describe-class">{{describe}}</text>
+    <text wx:else class="status-text l-describe-class">{{typeText}}</text>
+    <l-button l-class="l-button-class button_margin_top" wx:if="{{buttonText}}">
+      <view>{{buttonText}}</view>
+    </l-button>
+    <l-button l-class="l-button-class button_margin_top" wx:if="{{!buttonText && type =='network'}}">
+      <view>重新加载</view>
+    </l-button>
+    <l-button l-class="l-button-class button_margin_top" wx:if="{{!buttonText && type =='cart'}}">
+      <view>去逛逛</view>
+    </l-button>
+  </block>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/status-show/index.wxss b/node_modules/lin-ui/dist/status-show/index.wxss
new file mode 100644
index 0000000..12cfec8
--- /dev/null
+++ b/node_modules/lin-ui/dist/status-show/index.wxss
@@ -0,0 +1 @@
+.l-status-container{background-color:#fff;flex-direction:column;display:flex;align-items:center;justify-content:center;width:500rpx}.content{position:fixed;top:0;left:0;background:#fff;height:100%;width:100%}.ad-img{width:198rpx!important;height:204rpx!important}.top-img{width:264rpx;height:204rpx}.left-img{width:120rpx;height:184rpx}.image_margin_top{margin-top:-250rpx}.status-text{font-size:30rpx;color:#45526b;margin-top:40rpx}.button_margin_top{margin-top:80rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/step/index.js b/node_modules/lin-ui/dist/step/index.js
new file mode 100755
index 0000000..285689d
--- /dev/null
+++ b/node_modules/lin-ui/dist/step/index.js
@@ -0,0 +1,50 @@
+Component({
+  /**
+   * 组件的属性列表
+   */
+  externalClasses: [
+    'l-class',
+    'l-step-class',
+    'l-title-class',
+    'l-describe-class',
+    'l-line-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  relations: {
+    '../steps/index': {
+      type: 'parent'
+    },
+  },
+  properties: {
+    icon: String,
+    title: String,
+    describe: String,
+    iconSize: {
+      type: Number,
+      value: 24
+    },
+    iconColor: String,
+    custom: Boolean
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    // 与父组件通信并绑定相关配置数据
+    updateDataChange(options) {
+      this.setData({
+        ...options
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/step/index.json b/node_modules/lin-ui/dist/step/index.json
new file mode 100755
index 0000000..9ea06fa
--- /dev/null
+++ b/node_modules/lin-ui/dist/step/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/step/index.wxml b/node_modules/lin-ui/dist/step/index.wxml
new file mode 100755
index 0000000..bbb90ca
--- /dev/null
+++ b/node_modules/lin-ui/dist/step/index.wxml
@@ -0,0 +1,75 @@
+<view class="step {{'step-'+direction}} l-class"  
+      style="{{direction==='row'?'width:'+(1/length)*stepsWidth+'px':'min-height:'+stepMinHeight+'rpx'}}">
+  <view class="step-container l-step-class {{'step-container-'+direction}}">
+    <view wx:if="{{custom}}" class="step-custom">
+      <slot name="dot"/>
+    </view>
+    <view wx:else
+          class="l-step-class {{dot && !icon?'step-dot-'+currentStatus.setStatus(activeIndex,index,status)+' step-dot':'step-'+currentStatus.setStatus(activeIndex,index,status)+' step-icon'}}"
+          style="{{dot?currentStatus.dotStyle(activeIndex,index,color):currentStatus.statusStyle(activeIndex,index,color,status)}}">
+      <l-icon wx:if="{{icon}}" name="{{icon}}" size="{{iconSize}}" color="{{(currentStatus.setStatus(activeIndex,index,status))==='process'?'#3963BC':iconColor}}"/>
+      <block wx:if="{{!dot && !icon}}">
+        <view wx:if="{{currentStatus.setStatus(activeIndex,index,status)==='error' || currentStatus.setStatus(activeIndex,index,status)==='finish'}}" 
+              class="iconfont icon-{{currentStatus.setStatus(activeIndex,index,status)}}"></view>
+        <block wx:else>{{index+1}}</block>
+      </block>
+    </view>
+  </view>
+  <view class="step-content {{'step-content-'+direction}}">
+    <view class="l-title-class {{activeIndex===index?'step-title-process':'step-title'}}">
+      {{title}}
+    </view>
+    <view class="l-describe-class step-describe">
+      {{describe}}
+      <slot name="describe"/>
+    </view>
+  </view>
+  <view class="step-line l-line-class {{'step-line-'+ direction}} {{currentStatus.isReverse(reverse,activeIndex,index)?'step-line-finish':'step-line-wait'}}"
+        style="{{activeIndex>index?('background-color:'+color):''}}" 
+        wx:if="{{reverse?(index!==0):(length!==index+1)}}">
+  </view>
+</view>
+
+<wxs module="currentStatus">
+var setStatus = function(activeIndex,index,status){
+  if(activeIndex===index){
+    return status || 'process'
+  } else if(activeIndex>index){
+    return 'finish'
+  }else{
+    return 'wait'
+  }
+}
+
+var statusStyle = function(activeIndex,index,color,status){
+  if(activeIndex===index){
+    return status==='error'?'':('background-color:' + color)
+  } else if(activeIndex>index){
+    return ('border-color:' + color + ';color:' + color)
+  }else{
+    return ''
+  }
+}
+
+var dotStyle = function(activeIndex,index,color){
+  if(activeIndex>=index){
+    return ('background-color:' + color)
+  } else{
+    return ''
+  }
+}
+
+var isReverse = function(reverse,activeIndex,index) {
+  if(reverse){
+    return (activeIndex>=index)
+  }
+  return (activeIndex>index)
+}
+
+module.exports = {
+  setStatus:setStatus,
+  statusStyle:statusStyle,
+  dotStyle:dotStyle,
+  isReverse:isReverse
+}
+</wxs>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/step/index.wxss b/node_modules/lin-ui/dist/step/index.wxss
new file mode 100755
index 0000000..767b8eb
--- /dev/null
+++ b/node_modules/lin-ui/dist/step/index.wxss
@@ -0,0 +1 @@
+.step{display:flex;position:relative}.step-custom{z-index:2}.step-row{flex-direction:column;align-items:center}.step-column{flex-direction:row;padding-left:30rpx;box-sizing:border-box}.step-container{display:flex;justify-content:center;z-index:2;align-items:center;background-color:#fff}.step-container-row{width:70rpx;height:40rpx}.step-container-column{height:60rpx;width:40rpx}.step-icon{width:40rpx;height:40rpx;display:flex;align-items:center;justify-content:center;font-size:22rpx;transition:.5s;box-sizing:border-box}.step-process{color:#fff;background-color:#3963bc;border-radius:50%}.step-error{background-color:#fff;border:1px solid #f4516c;color:#f4516c;border-radius:50%}.step-finish{background-color:#fff;color:#3963bc;border:1px solid #3963bc;border-radius:50%}.step-wait{background-color:#fff;color:#c4c9d2;border:1px solid #c4c9d2;border-radius:50%}.step-dot{width:24rpx;height:24rpx;border-radius:50%;transition:.5s}.step-dot-process{background-color:#3963bc}.step-dot-wait{background-color:#c4c9d2}.step-dot-error{background-color:#f4516c}.step-dot-finish{background-color:#3963bc}.step-line{background:#c4c9d2;transition:.5s;position:absolute;z-index:0}.step-line-row{height:2rpx;width:100%;left:50%;top:18rpx}.step-line-column{width:2rpx;height:100%;top:20rpx;left:48rpx}.step-line-wait{background-color:#e8e8e8}.step-line-finish{background-color:#3963bc}.step-content{display:flex;flex-direction:column}.step-content-row{align-items:center;width:100%}.step-content-column{margin-left:15rpx}.step-title{color:#595959;font-size:26rpx;line-height:40rpx;margin:10rpx 0}.step-title-process{color:#333;font-size:28rpx;line-height:40rpx;margin:10rpx 0}.step-describe{color:#8c98ae;font-size:22rpx}@font-face{font-family:iconfont;src:url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAK8AAsAAAAABpQAAAJvAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDBgp8gQsBNgIkAwwLCAAEIAWEbQc2G9EFyK4wbuGJaCgrSmkBCSe/ZeUtviBzEXztx/bd3f+oNEiuzaerJhKN6WQSJFqlZELxTOZqTS9l0hsflgVC/bD3z/dzv8lMXAksyeryeByfVkhgV93EvwdIwC+b/hetH5jPyAA+z+X0JtCBXONbltMcw496AcYBBbYnRoEEXEQBcAqyOwK15PsEmg2KiewMTy6yCoWzLBD3lqGwilJKUaRqo1C37C3iRaUxPaUnPMffj18LUUFSZc7a3bshnfV++DD/2GVISBPo4QoZU5hCXLeWThULiSvWbCrpb64VIS2VhYlVpqU+6B8vETWnsxWM0XLiI19G8OGABDKoy5VBzDRje98gRHertt+2fLx2cdC6ZJwcnK226Ifh0uzy4vzK8sLSytxprqHAHexGbz8/6za6C3ePjwW29viP3ailnm7Zz+SntAd5IV0IBHuvvy3Xd/41thTw/osdBRahcefh4Gepwb5iah13LrrKV9mRrBsIJKhCjvrnxLq9Trf0wb2ERn0TIg0GcmSNhsjCTqHSYgm1RutoNmnkcIseUrEoTZiwRRA63SBp94as0zNZ2BdU+v2h1hnFaHYczWe2GAmrakCiQqiDmgdLEz73vFSVdM+jkXUVWdTG/DLK0MpCOpGqVkfQR7nEhjBnZIg4cCk8GCaPoesKCKSwUaOESRS0J5O87UUJTXisyjYJKQjSAVUesGgEHw+Hk6ra5+chQ5ZLIXsEDfllSApZ44O0hBRAjph8SPAoz4RyDBmEcICTBA8YJrOQyyWAoH2WDWlIgjmhEGiXdAdx1JTY3uL93xFo5kzMkSJHUT+g+5BNxVpWMAYAAA==') format('woff2')}.iconfont{font-family:iconfont!important;font-size:24rpx;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-finish:before{content:"\e600"}.icon-error:before{content:"\e6cf"}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/steps/index.js b/node_modules/lin-ui/dist/steps/index.js
new file mode 100755
index 0000000..73a2fc5
--- /dev/null
+++ b/node_modules/lin-ui/dist/steps/index.js
@@ -0,0 +1,76 @@
+Component({
+  externalClasses: [
+    'l-class'
+  ],
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  relations: {
+    '../step/index': {
+      type: 'child',
+      linked() {
+        this._initSteps();
+      },
+      unlinked() {
+        this._initSteps();
+      }
+    },
+  },
+
+  properties: {
+    direction: {
+      type: String,
+      value: 'row'
+    },
+    activeIndex: {
+      type: Number,
+      value: 0
+    },
+    color: String,
+    stepMinHeight: {
+      type: String,
+      value: '120'
+    },
+    status: {
+      type: String,
+      value: 'process'
+    },
+    dot: Boolean,
+    reverse: Boolean
+  },
+
+  observers: {
+    'activeIndex': function () {
+      this._initSteps();
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _initSteps() {
+      const query = wx.createSelectorQuery().in(this);
+      query.select('.steps-container').boundingClientRect().exec(res => {
+        let steps = this.getRelationNodes('../step/index');
+        this.data.length = steps.length;
+        if (this.data.length > 0) {
+          steps.forEach((step, index) => {
+            step.updateDataChange({
+              index,
+              ...this.data,
+              stepsWidth: res[0].width
+            });
+          });
+        }
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/steps/index.json b/node_modules/lin-ui/dist/steps/index.json
new file mode 100755
index 0000000..a45dede
--- /dev/null
+++ b/node_modules/lin-ui/dist/steps/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index",
+    "l-step":"../step/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/steps/index.wxml b/node_modules/lin-ui/dist/steps/index.wxml
new file mode 100755
index 0000000..1d665a9
--- /dev/null
+++ b/node_modules/lin-ui/dist/steps/index.wxml
@@ -0,0 +1,3 @@
+<view class="l-class steps-container {{reverse?'steps-container-'+direction+'-reverse':'steps-container-'+direction}}">
+    <slot />
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/steps/index.wxss b/node_modules/lin-ui/dist/steps/index.wxss
new file mode 100755
index 0000000..c05d83e
--- /dev/null
+++ b/node_modules/lin-ui/dist/steps/index.wxss
@@ -0,0 +1 @@
+.steps-container{display:flex;width:100%}.steps-container-row{flex-direction:row}.steps-container-row-reverse{flex-direction:row-reverse}.steps-container-column{flex-direction:column}.steps-container-column-reverse{flex-direction:column-reverse}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tabpanel/index.js b/node_modules/lin-ui/dist/tabpanel/index.js
new file mode 100644
index 0000000..a650f96
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabpanel/index.js
@@ -0,0 +1,65 @@
+// components/tab/index.js
+Component({
+  relations: {
+    '../tabs/index': {
+      type: 'parent',
+      linked: function(target) {
+        !this.data.parent && this.setData({
+          parent: target
+        });
+        // 每次被插入到custom-ul时执行，target是custom-ul节点实例对象，触发在attached生命周期之后
+      }
+    },
+    '../combined-tabs/index': {
+      type: 'parent',
+      linked: function(target) {
+        !this.data.parent && this.setData({
+          parent: target
+        });
+        // 每次被插入到custom-ul时执行，target是custom-ul节点实例对象，触发在attached生命周期之后
+      }
+    }
+  },
+  /**
+   * 组件的属性列表
+   */
+  properties: {
+    tab: String,
+    subTab: String,
+    subKey: String,
+    key: String,
+    icon: String,
+    iconSize: {
+      type: String,
+      value: '20'
+    },
+    image: Object,
+    picPlacement: {
+      type: String,
+      value: 'top'
+    }
+  },
+
+  observers: {
+    '**': function(filed) {
+      this.updateData(filed);
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    isCurrent: false,
+    index: 0,
+    parent: null
+  },
+
+  methods: {
+    updateData() {
+      let parent = this.data.parent;
+      if (!parent) return;
+      parent.initTabs();
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/tabpanel/index.json b/node_modules/lin-ui/dist/tabpanel/index.json
new file mode 100644
index 0000000..e8cfaaf
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabpanel/index.json
@@ -0,0 +1,4 @@
+{
+  "component": true,
+  "usingComponents": {}
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tabpanel/index.wxml b/node_modules/lin-ui/dist/tabpanel/index.wxml
new file mode 100644
index 0000000..56e0446
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabpanel/index.wxml
@@ -0,0 +1,4 @@
+<!-- components/tab/index.wxml -->
+<view class="l-tabpanel-content">
+    <slot></slot>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tabpanel/index.wxss b/node_modules/lin-ui/dist/tabpanel/index.wxss
new file mode 100644
index 0000000..a77a4fa
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabpanel/index.wxss
@@ -0,0 +1 @@
+.l-tabpanel-content{width:100%;height:100%}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tabs/index.js b/node_modules/lin-ui/dist/tabs/index.js
new file mode 100644
index 0000000..dbf9205
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabs/index.js
@@ -0,0 +1,174 @@
+import scrollCenter from '../behaviors/scrollCenter';
+Component({
+  behaviors: [scrollCenter],
+  externalClasses: [
+    'l-class-tabs',
+    'l-class-header',
+    'l-class-active',
+    'l-class-content',
+    'l-class-inactive',
+    'l-class-line',
+    'l-class-tabimage',
+    'l-class-header-line',
+    'l-class-icon',
+    'l-tabs-class',
+    'l-header-class',
+    'l-active-class',
+    'l-content-class',
+    'l-inactive-class',
+    'l-line-class',
+    'l-tabimage-class',
+    'l-header-line-class',
+    'l-icon-class'
+  ],
+  relations: {
+    '../tabpanel/index': {
+      type: 'child',
+      linked() {
+        // 每次有子节点被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后
+        this.initTabs();
+      },
+      unlinked() {
+        this.initTabs();
+      }
+    },
+
+  },
+  options: {
+    multipleSlots: true // 在组件定义时的选项中启用多slot支持
+  },
+  /**
+   * 组件的属性列表
+   */
+  properties: {
+    activeKey: {
+      type: String,
+      value: '',
+    },
+    placement: {
+      type: String,
+      value: 'top',
+    },
+    animated: Boolean,
+    swipeable: Boolean,
+    scrollable: Boolean,
+    hasLine: {
+      type: Boolean,
+      value: true
+    },
+    animatedForLine: Boolean,
+    activeColor: {
+      type: String,
+      value: '#333333'
+    },
+    inactiveColor: {
+      type: String,
+      value: '#bbbbbb'
+    },
+    equalWidth: {
+      type: Boolean,
+      value: true
+    }
+
+  },
+
+  data: {
+    tabList: [],
+    currentIndex: 0,
+    transformX: 0,
+    transformY: 0,
+  },
+  observers: {
+    'activeKey': function (newKey) {
+      if(!newKey) return;
+      const index = this.data.tabList.findIndex(tab=>tab.key===newKey);
+      this.setData({
+        currentIndex:index
+      },() => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+    }
+  },
+
+  ready() {
+    this.initTabs();
+  },
+
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initTabs(val = this.data.activeKey) {
+      let items = this.getRelationNodes('../tabpanel/index');
+      if (items.length > 0) {
+        let activeKey = val,
+          currentIndex = this.data.currentIndex;
+        const tab = items.map((item, index) => {
+
+          activeKey = !val && index == 0 ? item.data.key : activeKey;
+          currentIndex = item.data.key === activeKey ? index : currentIndex;
+          return {
+            tab: item.data.tab,
+            key: item.data.key,
+            icon: item.data.icon,
+            iconSize: item.data.iconSize,
+            image: item.data.image,
+            picPlacement: item.data.picPlacement,
+          };
+        });
+        this.setData({
+          tabList: tab,
+          activeKey,
+          currentIndex,
+        }, () => {
+          if (this.data.scrollable) {
+            this.queryMultipleNodes();
+          }
+        });
+      }
+    },
+    swiperChange(e) {
+      const {
+        source,
+        current
+      } = e.detail;
+      if (source == 'touch') {
+        const currentIndex = current;
+        const activeKey = this.data.tabList[current].key;
+        this._setChangeData({
+          activeKey,
+          currentIndex
+        });
+      }
+    },
+    handleChange(e) {
+      const activeKey = e.currentTarget.dataset.key;
+      const currentIndex = e.currentTarget.dataset.index;
+      this._setChangeData({
+        activeKey,
+        currentIndex
+      });
+    },
+
+    _setChangeData({
+      activeKey,
+      currentIndex
+    }) {
+      this.setData({
+        activeKey,
+        currentIndex
+      }, () => {
+        if (this.data.scrollable) {
+          this.queryMultipleNodes();
+        }
+      });
+      this.triggerEvent('linchange', {
+        activeKey,
+        currentIndex
+      });
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tabs/index.json b/node_modules/lin-ui/dist/tabs/index.json
new file mode 100644
index 0000000..f4d7f74
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabs/index.json
@@ -0,0 +1,8 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index",
+    "l-badge":"../badge/index",
+    "l-tabpanel":"../tabpanel/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tabs/index.wxml b/node_modules/lin-ui/dist/tabs/index.wxml
new file mode 100644
index 0000000..7c5eb53
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabs/index.wxml
@@ -0,0 +1,35 @@
+<!-- components/tabs/index.wxml -->
+<view class="l-tabs l-class-tabs l-tabs-class {{'l-placement-'+placement}} {{animated ? 'l-aminmated' :''}} {{placement=='left'||placement=='right'?'l-tabs-vertical':'l-tabs-horizontal'}} {{scrollable ? 'l-tabs-scroll':''}}">
+    <scroll-view 
+        scroll-x="{{placement=='top'||placement=='bottom' && scrollable}}" 
+        scroll-y="{{placement=='left'||placement=='right' && scrollable}}" 
+        scroll-top="{{transformY}}" 
+        scroll-left="{{transformX}}" 
+        scroll-with-animation
+        class="l-tabsscroll l-class-header l-header-class {{hasLine?'l-tabs-header-line l-class-header-line l-header-line-class':''}}">
+        <view class="l-tabs-header">
+            <view class="l-tabs-item {{equalWidth?'l-tabs-equal-width':'l-tabs-unequal-width'}} {{item.key===activeKey ?'l-class-active l-active-class l-tabs-active':'l-class-inactive l-inactive-class l-tabs-inactive'}} {{'l-tab-image-placement-'+item.picPlacement}}" 
+                style="color:{{item.key===activeKey?activeColor:inactiveColor}}"
+                wx:for="{{tabList}}" 
+                wx:key="{{item.key}}" 
+                data-key="{{item.key}}"
+                data-index="{{index}}" 
+                bind:tap="handleChange">
+                <image wx:if="{{ item.image.activeImage || item.image.defaultImage }}" src="{{item.key===activeKey? item.image.activeImage:item.image.defaultImage}}" class="l-tab-image l-class-tabimage l-tabimage-class"/>
+                <l-icon wx:if="{{item.icon}}" l-class="l-class-icon l-icon-class" l-self-class="{{item.key===activeKey ? 'l-icon-active':'l-icon-inactive'}}" name="{{item.icon}}" color="{{item.key===activeKey?activeColor:inactiveColor}}" size="{{item.iconSize}}"/>
+                    {{item.tab}}
+               <view class="l-tab-line {{item.key===activeKey?'l-class-line l-line-class':''}} {{animatedForLine?'l-line-aminmated':''}}" wx:if="{{hasLine}}" style="background:{{item.key===activeKey?activeColor:inactiveColor}}"></view>
+            </view>
+        </view>
+    </scroll-view>
+    <view wx:if="{{!swipeable}}" class="l-tabpanel-content l-class-content l-content-class" style="{{placement=='top'||placement=='bottom' ? 'margin-left:'+ -100 *currentIndex +'%;':'transform:translate(0,'+ -100 * currentIndex +'%) translateZ(0px);'}}">
+        <view class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':'l-tabpanel-inactive'}}" wx:for="{{tabList}}" wx:key="{{item.key}}" style="{{placement=='left'||placement=='right' ? 'position:absolute;width:100%;height:100%;transform:translate(0,'+ 100 * index +'%) translateZ(0px);':''}}">
+            <slot name="{{item.key}}"></slot>
+        </view>
+    </view>
+    <swiper wx:else class="l-tabpanel-content l-tabpanel-swiper l-class-content l-content-class" bindchange="swiperChange" current="{{currentIndex}}" vertical="{{placement=='left'||placement=='right'}}">
+        <swiper-item class="l-tabpanel {{item.key===activeKey?'l-tabpanel-active':''}}" wx:for="{{tabList}}" wx:key="{{item.key}}">
+            <slot name="{{item.key}}"></slot>
+        </swiper-item>
+    </swiper>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tabs/index.wxss b/node_modules/lin-ui/dist/tabs/index.wxss
new file mode 100644
index 0000000..14f4146
--- /dev/null
+++ b/node_modules/lin-ui/dist/tabs/index.wxss
@@ -0,0 +1 @@
+.l-tabs{display:flex;border-radius:8rpx;box-sizing:border-box;overflow:hidden;flex-direction:column;height:100%}.l-tabs .l-tabs-header{display:flex;width:100%;flex-direction:row;background:#fff;align-items:center}.l-tabs .l-tabs-header .l-tabs-item{font-size:28rpx;text-align:center;box-sizing:border-box;display:flex;justify-content:center;align-items:center}.l-tabs .l-tabs-header .l-tabs-equal-width{flex:1}.l-tabs .l-tabs-header .l-tabs-unequal-width{padding:0 20rpx}.l-tabs .l-tabs-header .l-icon-active,.l-tabs .l-tabs-header .l-tabs-active{color:#333;font-size:28rpx}.l-tabs .l-tabs-header .l-icon-inactive,.l-tabs .l-tabs-header .l-tabs-inactive{font-size:28rpx;color:#bbb}.l-tabs .l-tabs-header .l-tabsitems-row{flex-direction:row}.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row .l-icon-inactive{margin-right:10rpx}.l-tabs .l-tabs-header .l-tabsitems-row-reverse{flex-direction:row-reverse}.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-active,.l-tabs .l-tabs-header .l-tabsitems-row-reverse .l-icon-inactive{margin-left:10rpx}.l-placement-bottom .l-tabs-header,.l-placement-top .l-tabs-header{height:80rpx}.l-placement-bottom .l-tabs-header .l-tabs-item,.l-placement-top .l-tabs-header .l-tabs-item{min-height:100%}.l-placement-left,.l-placement-right{flex-direction:row}.l-placement-left .l-tabs-header,.l-placement-right .l-tabs-header{flex-direction:column;width:160rpx}.l-placement-left .l-tabs-header>view,.l-placement-right .l-tabs-header>view{width:100%;height:80rpx;background:#f6f8fa}.l-placement-left .l-tabs-header>.l-tabs-active,.l-placement-right .l-tabs-header>.l-tabs-active{background:#fff}.l-placement-right{flex-direction:row-reverse}.l-placement-bottom{flex-direction:column-reverse}.l-tabpanel-content{display:flex}.l-placement-left .l-tabpanel-content,.l-placement-right .l-tabpanel-content{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;position:relative;will-change:transform;transition:transform .3s cubic-bezier(.645,.045,.355,1)}.l-tabs-vertical .l-tabpanel-swiper{height:initial}.l-placement-bottom .l-tabpanel-content,.l-placement-top .l-tabpanel-content{width:100%;min-height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.l-aminmated.l-placement-bottom .l-tabpanel-content,.l-aminmated.l-placement-top .l-tabpanel-content{will-change:margin-left;-webkit-transition:margin-left .3s cubic-bezier(.645,.045,.355,1);transition:margin-left .3s cubic-bezier(.645,.045,.355,1)}.l-tabpanel{width:100%;height:100%;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:opacity .45s;transition:opacity .45s;opacity:1;text-overflow:ellipsis}.l-tabpanel-inactive{opacity:0;height:0;padding:0!important;pointer-events:none}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header{-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-scroll.l-tabs-horizontal .l-tabs-header .l-tabs-item{overflow:visible}.l-tabs-vertical .l-tabsscroll{width:160rpx}.l-tabs-vertical .l-tabs-header{height:100%;min-height:80rpx;-webkit-overflow-scrolling:touch;white-space:nowrap}.l-tabs-vertical .l-tabs-header .l-tabs-item{overflow:visible;min-height:80rpx}.l-tabs-item{position:relative}.l-tab-line{position:absolute;bottom:0;left:0;background:#000}.l-tabs-horizontal .l-tab-line{height:4rpx;width:0;left:100%;right:0;margin:0 auto}.l-tabs-horizontal .l-line-aminmated{transition:.2s all linear}.l-tabs-horizontal .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{left:0}.l-tabs-horizontal .l-tabs-active .l-tab-line{width:100%;left:0}.l-tabs-horizontal .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-placement-top .l-tab-line{bottom:0}.l-placement-top .l-tabs-header-line{border-bottom:1px solid #f3f3f3}.l-placement-bottom .l-tab-line{top:0}.l-placement-bottom .l-tabs-header-line{border-top:1px solid #f3f3f3}.l-tabs-vertical .l-tab-line{width:6rpx;height:0;border-radius:0 6rpx 6rpx 0;top:0;margin:auto 0}.l-tabs-vertical .l-line-aminmated{transition:.2s all linear}.l-tabs-vertical .l-tabs-active .l-tab-line{height:40rpx}.l-tabs-vertical .l-tabs-active .l-line-aminmated{transition-delay:.1s}.l-tabs-vertical .l-tabs-active.l-tabs-item~.l-tabs-item .l-tab-line{height:0;top:0}.l-placement-left .l-tab-line{right:auto}.l-placement-left .l-tabs-header-line{border-left:1px solid #f3f3f3}.l-placement-right .l-tab-line{right:0;left:auto}.l-placement-right .l-tabs-header-line{border-right:1px solid #f3f3f3}.l-tab-image{width:100rpx;height:100rpx}.l-tab-image-placement-top{flex-direction:column}.l-tab-image-placement-bottom{flex-direction:column-reverse}.l-tab-image-placement-left{flex-direction:row}.l-tab-image-placement-right{flex-direction:row-reverse}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tag/index.js b/node_modules/lin-ui/dist/tag/index.js
new file mode 100644
index 0000000..5c89e6c
--- /dev/null
+++ b/node_modules/lin-ui/dist/tag/index.js
@@ -0,0 +1,63 @@
+Component({
+  externalClasses: ['l-class', 'l-select-class', 'l-image-class'],
+  properties: {
+    // 标签标识
+    name: String,
+    cell: Object,
+    // 标签颜色
+    type:{
+      type: String,
+      value: 'touch'
+    },
+    bgColor: String,
+    fontColor: String,
+    disable: Boolean,
+    // 标签形状
+    shape: {
+      type: String,
+      value: 'square'
+    },
+    // 是否为选中态
+    select: Boolean,
+    // 是否镂空
+    plain: Boolean,
+    // 标签大小
+    size: {
+      type: String,
+      value: 'medium'
+    },
+    location: {
+      type: String,
+      value: 'left'
+    },
+    icon: String,
+    iconSize: {
+      type: String,
+      value: '20'
+    },
+    iconColor: {
+      type: String,
+      value: '#3683D6'
+    },
+    image: String,
+    iconStyle: {
+      type: String,
+      value: 'size:20;color:#3683D6'
+    },
+    height: Number
+  },
+  methods: {
+    handleTap() {
+      if (this.properties.disabled) return false;
+      let options = {
+        name: this.properties.name,
+        cell: this.properties.cell,
+        select: this.properties.select
+      };
+      this.triggerEvent('lintap', options, {
+        bubbles: true,
+        composed: true
+      });
+    }
+  }
+});
diff --git a/node_modules/lin-ui/dist/tag/index.json b/node_modules/lin-ui/dist/tag/index.json
new file mode 100644
index 0000000..c01e2d7
--- /dev/null
+++ b/node_modules/lin-ui/dist/tag/index.json
@@ -0,0 +1,6 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon":"../icon/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/tag/index.wxml b/node_modules/lin-ui/dist/tag/index.wxml
new file mode 100644
index 0000000..9f03e3d
--- /dev/null
+++ b/node_modules/lin-ui/dist/tag/index.wxml
@@ -0,0 +1,10 @@
+<view style="display:flex">
+  <view class="l-tag {{type==='touch'?'l-tag-touch':''}} {{plain?'l-tag-plain-'+ size:'l-tag-'+size}} {{disable?'l-tag-disable':''}} {{select?'select l-select-class':'l-class'}} {{plain?'l-tag-plain':''}}  {{'l-tag-'+size+'-'+ shape}}" style="{{height?'line-height:'+height+'rpx;height:'+height+'rpx;':''}}{{plain?'color:'+fontColor+';border-color:'+fontColor:'background-color:'+bgColor+';color:'+fontColor}}"
+    bindtap="handleTap">
+    <view class="{{location=='left'?'content':'content-l'}}" style="{{iconName?'line-height:0':''}}">
+      <l-icon wx:if="{{icon}}" style="{{location=='left'?'margin-right:5rpx':'margin-left:5rpx'}}" name="{{icon}}" size="{{iconSize}}" color="{{iconColor}}" />
+      <image style="{{location=='left'?'margin-right:5rpx':'margin-left:5rpx'}}" wx:if="{{image}}" src="{{image}}" class="{{'tag-image-'+size}} l-image-class"></image>
+      <slot/>
+    </view>
+  </view>
+</view>
diff --git a/node_modules/lin-ui/dist/tag/index.wxss b/node_modules/lin-ui/dist/tag/index.wxss
new file mode 100644
index 0000000..d51ec93
--- /dev/null
+++ b/node_modules/lin-ui/dist/tag/index.wxss
@@ -0,0 +1 @@
+.l-tag{display:inline-flex;justify-content:center;align-items:center;color:#fff;background-color:#3963bc}.l-tag-touch{min-width:80rpx}.l-tag-super-mini{height:32rpx;font-size:20rpx}.l-tag-mini{height:42rpx;font-size:20rpx}.l-tag-medium{height:50rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-large{height:60rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-super-mini-square{border-radius:2rpx;padding:0 6rpx}.l-tag-mini-square{border-radius:2rpx;padding:0 12rpx}.l-tag-medium-square{border-radius:2rpx;padding:0 16rpx}.l-tag-large-square{border-radius:2rpx;padding:0 18rpx}.l-tag-super-mini-circle{border-radius:16rpx;padding:0 12rpx}.l-tag-mini-circle{border-radius:21rpx;padding:0 16rpx}.l-tag-medium-circle{border-radius:25rpx;padding:0 20rpx}.l-tag-large-circle{border-radius:30rpx;padding:0 24rpx}.l-tag-plain{background-color:#fff;color:#3963bc;border:2rpx solid #3963bc}.l-tag-plain-super-mini{height:28rpx;font-size:20rpx}.l-tag-plain-mini{height:38rpx;font-size:20rpx}.l-tag-plain-medium{height:46rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-plain-large{height:56rpx;font-size:24rpx;letter-spacing:2rpx}.l-tag-disable{background-color:#dee2e6;color:#fff;border-color:#dee2e6}.select{background-color:#3963bc;color:#fff}.content{display:inline-flex;align-items:center;justify-content:center}.content-l{display:inline-flex;flex-direction:row-reverse;align-items:center;justify-content:center}.tag-image-mini{width:20rpx;height:20rpx}.tag-image-large{width:24rpx;height:24rpx}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/textarea/index.js b/node_modules/lin-ui/dist/textarea/index.js
new file mode 100644
index 0000000..3258275
--- /dev/null
+++ b/node_modules/lin-ui/dist/textarea/index.js
@@ -0,0 +1,109 @@
+// input/input.js
+import rules from '../behaviors/rules';
+
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: ['wx://form-field', rules],
+  externalClasses: ['l-class', 'l-error-text', 'l-error-text-class'],
+  properties: {
+    // 占位文本
+    placeholder: {
+      type: String,
+      value: ''
+    },
+    // 输入框的值
+    value: {
+      type: String,
+      value: ''
+    },
+    // 获取焦点
+    focus: {
+      type: Boolean,
+      value: false
+    },
+    // 最大输入长度
+    maxlength: {
+      type: Number,
+      value: 140
+    },
+    // 表显示文字长度的计数器
+    indicator: {
+      type: Boolean,
+      value: true
+    },
+    // label标题的显示位置 left top right
+    autoHeight: {
+      type: Boolean,
+      value: false
+    },
+    // 是否禁用
+    disabled: {
+      type: Boolean,
+      value: false
+    },
+    // 是否显示边框
+    border: {
+      type: Boolean,
+      value: true
+    },
+    // 校验
+    rules: {
+      type: Object,
+    },
+    // 占位文字的样式  
+    placeholderStyle: {
+      type: String,
+      value: ''
+    }
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+
+  },
+
+  attached() {
+    this.initRules();
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    handleInputChange(event) {
+      const {
+        detail = {}
+      } = event;
+      const {
+        value = ''
+      } = detail;
+
+      this.setData({
+        value
+      });
+
+      this.triggerEvent('lininput', event.detail);
+    },
+
+    handleInputFocus(event) {
+      this.triggerEvent('linfocus', event.detail);
+    },
+
+    handleInputBlur(event) {
+      this.validatorData({
+        value: event.detail.value
+      });
+      this.triggerEvent('linblur', event.detail);
+    },
+    handleInputConfirm(event) {
+      this.triggerEvent('linconfirm', event.detail);
+    },
+    // onClearTap(e) {
+    //   this.setData({ value: '' })
+    // },
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/textarea/index.json b/node_modules/lin-ui/dist/textarea/index.json
new file mode 100644
index 0000000..fe1a1ff
--- /dev/null
+++ b/node_modules/lin-ui/dist/textarea/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-error-tip":"../error-tip/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/textarea/index.wxml b/node_modules/lin-ui/dist/textarea/index.wxml
new file mode 100644
index 0000000..f542c50
--- /dev/null
+++ b/node_modules/lin-ui/dist/textarea/index.wxml
@@ -0,0 +1,28 @@
+<!--  input/input.wxml -->
+<label class='form-item {{disabled? "disabled": ""}}   l-class '>
+  <view class='default-border {{border? "border": ""}}'>
+    <view class='mask' wx:if="{{disabled}}"></view>
+    <!-- 小程序表单组件 -->
+    <textarea
+      class=" textarea"
+      type="{{type}}"
+      value="{{ value }}"
+      password="{{type==='password'}}"
+      placeholder="{{placeholder}}"
+      maxlength="{{maxlength}}"
+      placeholder-class="pls-class"
+      placeholder-style="{{placeholderStyle}}"
+      disabled="{{disabled}}"
+      focus="{{focus}}"
+      auto-height="{{autoHeight}}"
+      bindinput="handleInputChange"
+      bindfocus="handleInputFocus"
+      bindblur="handleInputBlur"
+      bindconfirm="handleInputConfirm"
+      />
+      <view
+        class="indicator"
+        wx:if="{{indicator}}">{{value.length + '/' +  maxlength}}</view>
+  </view>
+</label>
+  <l-error-tip l-error-text-class="l-error-text l-error-text-class" errorText="{{errorText}}" wx:if="{{errorText}}"/>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/textarea/index.wxss b/node_modules/lin-ui/dist/textarea/index.wxss
new file mode 100644
index 0000000..cf1a0c0
--- /dev/null
+++ b/node_modules/lin-ui/dist/textarea/index.wxss
@@ -0,0 +1 @@
+.form-item{position:relative;font-size:28rpx;color:#333;width:700rpx;display:flex;flex-direction:column;align-items:center;border-bottom:1rpx solid #f3f3f3;box-sizing:border-box}.disabled{color:#9a9a9a!important}.mask{position:absolute;z-index:999;height:100%;width:100%}.textarea{width:100%;padding:25rpx;box-sizing:border-box;font-size:28rpx;color:#333;height:200rpx;line-height:40rpx;flex:1;min-height:88rpx;margin-bottom:rpx}.default-border{position:relative;font-size:28rpx;color:#333;width:100%;display:flex;flex-direction:column;align-items:center;border-bottom:1rpx solid #f3f3f3;box-sizing:border-box}.border{border-radius:4rpx;border:1rpx solid #d8dee5}.pls-class{color:#9a9a9a}.indicator{width:95%;text-align:right;margin-bottom:15rpx;color:#9a9a9a}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/toast/index.js b/node_modules/lin-ui/dist/toast/index.js
new file mode 100644
index 0000000..bae2560
--- /dev/null
+++ b/node_modules/lin-ui/dist/toast/index.js
@@ -0,0 +1,170 @@
+import computeOffset from '../behaviors/computeOffset';
+import zIndex from '../behaviors/zIndex';
+import watchShow from '../behaviors/watchShow';
+Component({
+  /**
+   * 组件的属性列表
+   */
+  behaviors: [computeOffset, zIndex, watchShow],
+  externalClasses: ['l-bg-class', 'l-icon-class', 'l-class', 'l-image-class', 'l-title-class '],
+  properties: {
+    // 显示与隐藏
+    show: {
+      type: Boolean,
+      value: false
+    },
+    // 提示框的文本内容
+    title: String,
+    // icon
+    icon: String,
+    iconSize: String,
+    iconColor: String,
+    // image
+    image: String,
+    // 文字的显示方位
+    placement: {
+      type: String,
+      value: 'bottom'
+    },
+    // 提示框显示的时长
+    duration: {
+      type: Number,
+      value: 1500
+    },
+    // 提示框的层级
+    zIndex: {
+      type: Number,
+      value: 777
+    },
+    // 设置提示框是否为垂直居中
+    center: {
+      type: Boolean,
+      value: true
+    },
+    // 是否显示透明蒙层，防止触摸穿透
+    mask: {
+      type: Boolean,
+      value: false
+    },
+    openApi: {
+      type: Boolean,
+      value: true,
+    },
+    offsetX: Number,
+    offsetY: Number
+  },
+
+  /**
+   * 组件的初始数据
+   */
+  data: {
+    status: false,
+    success: '',
+    fail: '',
+    complete: ''
+  },
+
+  // 解决 addListener undefined 的错误
+  observers: {
+    'icon': function () {}
+  },
+
+  attached() {
+    if (this.data.openApi) {
+      this.initToast();
+    }
+  },
+
+  pageLifetimes: {
+    show() {
+      if (this.data.openApi) {
+        this.initToast();
+      }
+      this.offsetMargin();
+    },
+  },
+
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    initToast() {
+      wx.lin = wx.lin || {};
+      wx.lin.showToast = (options = {}) => {
+        const {
+          title = '',
+          icon = '',
+          image = '',
+          placement = 'bottom',
+          duration = 1500,
+          center = true,
+          mask = false,
+          success = null,
+          complete = null,
+          offsetX = 0,
+          offsetY = 0,
+          iconSize = '60',
+          iconColor = ''
+        } = options;
+        this.setData({
+          title,
+          icon,
+          image,
+          placement,
+          duration,
+          center,
+          mask,
+          success,
+          complete,
+          offsetY,
+          offsetX,
+          iconSize,
+          iconColor
+        });
+        this.changeStatus();
+        return this;
+      };
+      wx.lin.hideToast = () => {
+        this.setData({
+          status: false
+        });
+      };
+    },
+
+    strlen(str) {
+      var len = 0;
+      for (var i = 0; i < str.length; i++) {
+        var c = str.charCodeAt(i);
+        if ((c >= '0x0001' && c <= '0x007e') || ('0xff60' <= c && c <= '0xff9f')) {
+          len++;
+        } else {
+          len += 2;
+        }
+      }
+      return len;
+    },
+    // 阻止滑动
+    doNothingMove() {
+      // do nothing……
+    },
+
+    // 点击事件
+    onMaskTap() {
+
+      let detail = true;
+      let option = {
+        bubbles: true,
+        composed: true
+      };
+
+      if (this.data.locked !== true) {
+        this.setData({
+          fullScreen: 'hide',
+          status: 'hide',
+        });
+      }
+
+      this.triggerEvent('lintap', detail, option);
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/toast/index.json b/node_modules/lin-ui/dist/toast/index.json
new file mode 100644
index 0000000..3eb288e
--- /dev/null
+++ b/node_modules/lin-ui/dist/toast/index.json
@@ -0,0 +1,7 @@
+{
+  "component": true,
+  "usingComponents": {
+    "l-icon": "../icon/index",
+    "l-mask": "../mask/index"
+  }
+}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/toast/index.wxml b/node_modules/lin-ui/dist/toast/index.wxml
new file mode 100644
index 0000000..6adc4b3
--- /dev/null
+++ b/node_modules/lin-ui/dist/toast/index.wxml
@@ -0,0 +1,21 @@
+<view
+  class="container {{mask?'containerShowMask':'containerNoMask'}}"
+  hidden="{{!status}}"
+  style="z-index:{{zIndex}}">
+  <view class="l-bg-class toast-bg" wx:if="{{mask}}"></view>
+  <view class="l-class toast toast-{{placement || 'bottom'}}" style="padding-top:{{(placement  || 'bottom')=== 'bottom' ?  image || icon ? '25rpx': '': ''}};position:relative;left:{{offsetX}}rpx;top:{{offsetY}}rpx;margin-bottom:{{distance}}px" >
+    <image class="l-image-class toast-icon"
+      wx:if="{{image}}"
+      src="{{image}}"
+    />
+    <l-icon
+      class="l-icon-class toast-icon toast-icon-{{icon === 'loading'?'loading':''}}"
+      wx:elif="{{icon && !image}}"
+      size="{{iconSize? iconSize : 60}}"
+      color="{{iconColor? iconColor: icon === 'success'? '#00C292' :  icon === 'error' ? '#F4516C' : '#ffffff'}}"
+      name="{{icon}}"
+    />
+    <slot wx:else/>
+    <text class="toast-text l-title-class  toast-text-{{placement}}" style="{{placement || 'bottom' === 'bottom' ? icon || image? 'margin-top:10rpx' : '': '' }}">{{ title }}</text>
+  </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/toast/index.wxss b/node_modules/lin-ui/dist/toast/index.wxss
new file mode 100644
index 0000000..7f87987
--- /dev/null
+++ b/node_modules/lin-ui/dist/toast/index.wxss
@@ -0,0 +1 @@
+.container{position:fixed}.containerNoMask{left:50%;top:50%;transform:translate(-50%,-50%)}.containerShowMask{height:100%;width:100%;top:0;left:0;display:flex;flex-direction:column;align-items:center;justify-content:center;z-index:999}.container .toast-bg{height:100%;width:100%;background:rgba(255,255,255,.5);position:absolute;top:0;left:0}.container .toast-top{flex-direction:column-reverse}.container .toast-right{flex-direction:row}.container .toast-bottom{flex-direction:column}.container .toast-left{flex-direction:row-reverse}.container .toast{display:flex;align-items:center;justify-content:center;max-width:400rpx;min-width:280rpx;min-height:88rpx;background:rgba(0,0,0,.7);border-radius:12rpx;color:#fff;font-size:28rpx;line-height:40rpx;box-sizing:border-box;padding:30rpx 50rpx;z-index:999}.container .toast .toast-icon{margin-top:20rpx;margin-bottom:20rpx}.container .toast .toast-icon-loading{animation:loading-fadein 1.5s linear 0s infinite}.container .toast .toast-text{display:inline-block;text-align:center}.container .toast .toast-text-right{display:inline-block;text-align:center;margin-left:20rpx}.container .toast .toast-text-left{display:inline-block;text-align:center;margin-right:20rpx}.container .toast .toast-text-top{margin-bottom:10rpx}@keyframes loading-fadein{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/utils/util.js b/node_modules/lin-ui/dist/utils/util.js
new file mode 100644
index 0000000..8a3b58d
--- /dev/null
+++ b/node_modules/lin-ui/dist/utils/util.js
@@ -0,0 +1,26 @@
+const promisic = function (func) {
+  return function (params = {}) {
+    return new Promise((resolve, reject) => {
+      const args = Object.assign(params, {
+        success: (res) => {
+          resolve(res);
+        },
+        fail: (error) => {
+          reject(error);
+        }
+      });
+      func(args);
+    });
+  };
+};
+
+const px2rpx = function (pxNumber) {
+  const { screenWidth } = wx.getSystemInfoSync();
+  const rpxNumber = (750 / screenWidth) * pxNumber;
+  return rpxNumber;
+};
+
+export {
+  promisic,
+  px2rpx
+};
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/water-flow/index.js b/node_modules/lin-ui/dist/water-flow/index.js
new file mode 100644
index 0000000..46ef5fa
--- /dev/null
+++ b/node_modules/lin-ui/dist/water-flow/index.js
@@ -0,0 +1,85 @@
+Component({
+  /**
+  * 组件的属性列表
+  */
+  properties: {
+    columnGap: {
+      type: String,
+      value: '20rpx'
+    }
+  },
+
+  /**
+  * 组件的初始数据
+  */
+  data: {
+    data: [],
+    leftData: [],
+    rightData: []
+  },
+
+  attached() {
+    this._init();
+  },
+
+  pageLifetimes: {
+    show() {
+      this._init();
+    }
+  },
+  /**
+   * 组件的方法列表
+   */
+  methods: {
+    _init() {
+      wx.lin = wx.lin || {};
+      wx.lin.renderWaterFlow = (data = [], refresh = false, success) => {
+        if (Object.prototype.toString.call(data) !== '[object Array]') {
+          console.error('[data]参数类型错误，渲染失败');
+          return false;
+        }
+        // 绑定data，判断data是否为[]
+        this.setData({ data });
+        if (refresh) {
+          this.data.leftData = [];
+          this.data.rightData = [];
+        }
+        this._select(data, refresh).then(() => {
+          success && success();
+        });
+      };
+    },
+    _select(data, refresh) {
+      const query = wx.createSelectorQuery().in(this);
+      this.columnNodes = query.selectAll('#left, #right');
+      return new Promise((resolve) => {
+        this._render(data, 0, refresh, () => {
+          resolve();
+        });
+      });
+    },
+    _render(data, i, refresh, success) {
+      if ((data.length > i || refresh) && this.data.data.length !== 0) {
+        this.columnNodes.boundingClientRect().exec(res => {
+          const rects = res[0];
+          this.data.leftHeight = rects[0].height;
+          this.data.rightHeight = rects[1].height;
+          if (this.data.leftHeight <= this.data.rightHeight || refresh) {
+            this.data.leftData.push(data[i]);
+          } else {
+            this.data.rightData.push(data[i]);
+          }
+
+          this.setData({
+            leftData: this.data.leftData,
+            rightData: this.data.rightData
+          }, () => {
+            this._render(data, ++i, false, success);
+          });
+        });
+      } else {
+        success && success();
+      }
+    }
+  }
+});
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/water-flow/index.json b/node_modules/lin-ui/dist/water-flow/index.json
new file mode 100644
index 0000000..5e96f35
--- /dev/null
+++ b/node_modules/lin-ui/dist/water-flow/index.json
@@ -0,0 +1,7 @@
+{
+    "component": true,
+    "usingComponents": {},
+    "componentGenerics": {
+      "l-water-flow-item": true
+    }
+  }
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/water-flow/index.wxml b/node_modules/lin-ui/dist/water-flow/index.wxml
new file mode 100644
index 0000000..638c714
--- /dev/null
+++ b/node_modules/lin-ui/dist/water-flow/index.wxml
@@ -0,0 +1,16 @@
+<view class="l-class water-flow-container" wx:if="{{data.length!==0}}" >
+  <view class="water-column" style="margin-right:{{columnGap}}">
+    <view id="left">
+      <block wx:for="{{leftData}}" wx:key="{{index}}">
+        <l-water-flow-item data="{{item}}" />
+      </block>
+    </view>
+  </view>
+  <view class="water-column">
+    <view id="right">
+      <block wx:for="{{rightData}}" wx:key="{{index}}">
+        <l-water-flow-item data="{{item}}" />
+      </block>
+    </view>
+  </view>
+</view>
\ No newline at end of file
diff --git a/node_modules/lin-ui/dist/water-flow/index.wxss b/node_modules/lin-ui/dist/water-flow/index.wxss
new file mode 100644
index 0000000..7a853fc
--- /dev/null
+++ b/node_modules/lin-ui/dist/water-flow/index.wxss
@@ -0,0 +1 @@
+.water-flow-container{display:flex;width:100%;box-sizing:border-box;background:0 0}.water-column{flex:1}
\ No newline at end of file
diff --git a/node_modules/lin-ui/package.json b/node_modules/lin-ui/package.json
new file mode 100644
index 0000000..a440854
--- /dev/null
+++ b/node_modules/lin-ui/package.json
@@ -0,0 +1,78 @@
+{
+  "_from": "lin-ui@~0.6.0",
+  "_id": "lin-ui@0.6.13",
+  "_inBundle": false,
+  "_integrity": "sha512-37cOtBG5+EdRiL+1mBCx0JZ4lxWZ/RnNdR6ROdaUbub+E+YaCUS4dHlXlXAX0m/BuLiWentjUhvt2Xi921GvPQ==",
+  "_location": "/lin-ui",
+  "_phantomChildren": {},
+  "_requested": {
+    "type": "range",
+    "registry": true,
+    "raw": "lin-ui@~0.6.0",
+    "name": "lin-ui",
+    "escapedName": "lin-ui",
+    "rawSpec": "~0.6.0",
+    "saveSpec": null,
+    "fetchSpec": "~0.6.0"
+  },
+  "_requiredBy": [
+    "/"
+  ],
+  "_resolved": "https://registry.npmjs.org/lin-ui/-/lin-ui-0.6.13.tgz",
+  "_shasum": "f92f407d60067b5610553eebf190a1fbe56cfa7b",
+  "_spec": "lin-ui@~0.6.0",
+  "_where": "/Users/yjjtt/t-sleeve",
+  "author": {
+    "name": "Lin Team"
+  },
+  "bugs": {
+    "url": "https://github.com/TaleLin/lin-ui/issues"
+  },
+  "bundleDependencies": false,
+  "dependencies": {},
+  "deprecated": false,
+  "description": "A high quality UI components library with MiniProgram",
+  "devDependencies": {
+    "child_process": "^1.0.2",
+    "del": "^5.0.0",
+    "eslint": "^5.0.1",
+    "eslint-config-standard": "^11.0.0",
+    "eslint-plugin-import": "^2.13.0",
+    "eslint-plugin-node": "^6.0.1",
+    "eslint-plugin-promise": "^3.8.0",
+    "eslint-plugin-standard": "^3.1.0",
+    "gulp": "^4.0.2",
+    "gulp-clean-css": "^3.9.3",
+    "gulp-less": "^4.0.0",
+    "gulp-rename": "^1.2.2",
+    "gulp-util": "^3.0.8",
+    "jest": "^24.8.0",
+    "less": "^2.7.3",
+    "lodash": "^4.17.15",
+    "miniprogram-simulate": "^1.0.7"
+  },
+  "directories": {
+    "example": "examples"
+  },
+  "files": [
+    "dist"
+  ],
+  "homepage": "https://github.com/TaleLin/lin-ui#readme",
+  "license": "MIT",
+  "main": "app.js",
+  "miniprogram": "dist",
+  "name": "lin-ui",
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/TaleLin/lin-ui.git"
+  },
+  "scripts": {
+    "build": "gulp -f build/index.js build && npm run dev && npm run lint",
+    "dev": "gulp -f build/index.js dev",
+    "lint": "eslint ./src/**/*.js",
+    "release": "sh build/release.sh",
+    "test": "jest",
+    "watch": "gulp -f build/index.js watch"
+  },
+  "version": "0.6.13"
+}
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
index 0000000..fc5e745
--- /dev/null
+++ b/package-lock.json
@@ -0,0 +1,13 @@
+{
+  "name": "sleeve",
+  "version": "0.1.0",
+  "lockfileVersion": 1,
+  "requires": true,
+  "dependencies": {
+    "lin-ui": {
+      "version": "0.6.13",
+      "resolved": "https://registry.npmjs.org/lin-ui/-/lin-ui-0.6.13.tgz",
+      "integrity": "sha512-37cOtBG5+EdRiL+1mBCx0JZ4lxWZ/RnNdR6ROdaUbub+E+YaCUS4dHlXlXAX0m/BuLiWentjUhvt2Xi921GvPQ=="
+    }
+  }
+}
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..a220806
--- /dev/null
+++ b/package.json
@@ -0,0 +1,22 @@
+{
+  "name": "sleeve",
+  "version": "0.1.0",
+  "description": "",
+  "main": "app.js",
+  "dependencies": {
+    "lin-ui": "~0.6.0"
+  },
+  "scripts": {
+    "test": "echo \"Error: no test specified\" && exit 1"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/YjjTT/t-sleeve.git"
+  },
+  "author": "TAO",
+  "license": "ISC",
+  "bugs": {
+    "url": "https://github.com/YjjTT/t-sleeve/issues"
+  },
+  "homepage": "https://github.com/YjjTT/t-sleeve#readme"
+}
diff --git a/pages/home/home.js b/pages/home/home.js
index 134aa45..7641e5c 100644
--- a/pages/home/home.js
+++ b/pages/home/home.js
@@ -1,59 +1,30 @@
 // pages/home/home.js
-import { config } from '../../config/config.js'
+import {Theme} from "../../model/theme";
+import {Banner} from "../../model/banner";
+
 Page({
     /**
      * 页面的初始数据
      */
-    data: {},
-
-    /**
-     * 生命周期函数--监听页面加载
-     */
-    onLoad: function(options) {
-        wx.request({
-            url: `${config.apiBaseUrl}/theme/by/names`,
-            method: 'GET',
-            data: {
-                names: 't-1'
-            },
-            header: {
-                appKey: config.appKey
-            }
+    data: {
+        themeA: null,
+        bannerB: null
+    },
+    onLoad(options) {
+        this.initAllData()
+    },
+    async initAllData() {
+        const themeA = await Theme.getHomeLoactionA()
+        const bannerB = await Banner.getHomeLoactionB()
+        this.setData({
+            themeA: themeA[0],
+            bannerB
         })
     },
-
-    /**
-     * 生命周期函数--监听页面初次渲染完成
-     */
-    onReady: function() {},
-
-    /**
-     * 生命周期函数--监听页面显示
-     */
-    onShow: function() {},
-
-    /**
-     * 生命周期函数--监听页面隐藏
-     */
-    onHide: function() {},
-
-    /**
-     * 生命周期函数--监听页面卸载
-     */
-    onUnload: function() {},
-
-    /**
-     * 页面相关事件处理函数--监听用户下拉动作
-     */
-    onPullDownRefresh: function() {},
-
-    /**
-     * 页面上拉触底事件的处理函数
-     */
-    onReachBottom: function() {},
-
-    /**
-     * 用户点击右上角分享
-     */
-    onShareAppMessage: function() {}
+    onPullDownRefresh: function () {
+    },
+    onReachBottom: function () {
+    },
+    onShareAppMessage: function () {
+    }
 })
diff --git a/pages/home/home.wxml b/pages/home/home.wxml
index e917181..2714479 100644
--- a/pages/home/home.wxml
+++ b/pages/home/home.wxml
@@ -1,4 +1,15 @@
 <!-- pages/home/home.wxml -->
 <view>
-    <image src="" class="top-theme" />
-</view>
\ No newline at end of file
+    <image src="" class="top-theme" src="{{themeA.entrance_img}}"/>
+    <swiper class="swiper"
+            indicator-dots
+            indicator-active-color="#157658"
+            autoplay
+            circular>
+        <block wx:for="{{bannerB.items}}" wx:key="index">
+            <swiper-item>
+                <image class="swiper-img" src="{{item.img}}"></image>
+            </swiper-item>
+        </block>
+    </swiper>
+</view>
diff --git a/pages/home/home.wxss b/pages/home/home.wxss
index 77c56ef..cea3085 100644
--- a/pages/home/home.wxss
+++ b/pages/home/home.wxss
@@ -2,4 +2,12 @@
 .top-theme {
     width: 100%;
     height: 260rpx;
+}
+.swiper {
+    width: 100%;
+    height: 360rpx;
+}
+.swiper-img {
+    width: 100%;
+    height: 360rpx;
 }
\ No newline at end of file
diff --git a/utils/http.js b/utils/http.js
new file mode 100644
index 0000000..dad5433
--- /dev/null
+++ b/utils/http.js
@@ -0,0 +1,23 @@
+import {config} from "../config/config";
+import {promisic} from "./util";
+
+class Http {
+    static async request({url, data, method = 'GET'}) {
+        const res = await promisic(wx.request)({
+            url: `${config.apiBaseUrl}${url}`,
+            data,
+            method,
+            header: {
+                appKey: config.appKey,
+                clientKey: config.clientkey
+            }
+        })
+        return res.data
+    }
+}
+
+// 异步调用方式
+// 1.callback 2.promise 3.async await
+export {
+    Http
+}
\ No newline at end of file
diff --git a/utils/util.js b/utils/util.js
index dbadbb8..f784990 100644
--- a/utils/util.js
+++ b/utils/util.js
@@ -1,19 +1,18 @@
-const formatTime = date => {
-  const year = date.getFullYear()
-  const month = date.getMonth() + 1
-  const day = date.getDate()
-  const hour = date.getHours()
-  const minute = date.getMinutes()
-  const second = date.getSeconds()
-
-  return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':')
-}
-
-const formatNumber = n => {
-  n = n.toString()
-  return n[1] ? n : '0' + n
-}
-
-module.exports = {
-  formatTime: formatTime
-}
+const promisic = function (func) {
+    return function (params = {}) {
+        return new Promise((resolve, reject) => {
+            const args = Object.assign(params, {
+                success: (res) => {
+                    resolve(res);
+                },
+                fail: (error) => {
+                    reject(error);
+                }
+            });
+            func(args);
+        });
+    };
+};
+export {
+    promisic
+}
\ No newline at end of file
